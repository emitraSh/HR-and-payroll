<?xml version="1.0" encoding="UTF-8"?>
<!-- Taraan License -->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="export" noun="employmentExcel">
        <in-parameters>
            <parameter name="partyIdList" type="List" required="true"/>
            <parameter name="reportDate" type="Timestamp" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="payrollFlatList" />
            <parameter name="csvTxt" />
        </out-parameters>
        <actions>
            <set field="payrollFlatList" from="[]"/>
            <set field="payrollFlat" from="[:]"/>
            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="titles" >
                <!--TODO: ignore fake param-->
                <econdition field-name="parameterSystematicName" operator="not-in"
                            from="['deleted62','vaziatTahol','GpFormula','modiranHerasat','drsdMaharatTakhasosFrml','tedadMahSabeqe','emtiazJebhe','emtiazZaban','emtiazNokhbegi','hadaqalDastmozdKar','emtiazNomreArzyabiAmalkard','ashuraBattalion','darajehNiazMadrak','madrakTahsiliPn','qualityPoint','kharidjozi','mabetafavot','bonAmani','ovladkargarQeirDaem','emtiazqoran','ovladkargarDaem','ejazePardakhtDowreAmoozeshi','emtiazSalahiatHerfei','gpTarfi','emtiazSanavat','madrakKhedmat','modatKhedmat','emtiazKhedmat','sanavatGozashteSazman','emtiazBasij','GpTashviqi','hadeAqalHuquqKarmandMotahal','emtiazTakhasos','hoqoqShoqlShakhsSabavat','kmkHazineAyabzahab','kmkHazineYekOvlad','mazayayeRefahiAngizeshiPll','mahdeKoodak','komakhazineQaza','Darman','telHamrah','haqMobile','heyatModire','darsadJanbazi','kodKeshik','GpTakhsisiMax','mozdTafavotTatbiq','panzdahDarsad','panzdahDarsadKasriJazb','codeOnvanShoqli','noePosteSazmani','emtiazDowreAmoozeshi2','darsadmadraktahsili','cnvPosition','erjaVazife','emtiazMazad','mhromiatAbHava','niazBeTaeedHerasat','178tr','emtiazShoql','foqNobatkari','haqSarparasti','emtiazTakhasosGarm','FqlKhatGarm']"/>
                <econdition field-name="parameterTypeEnumId"  from="'PersonnelPrt'"/>
                <econdition field-name="employmentCalcTypeEnumId" operator="not-equals"  from="'ectRegVndr'" or-null="true"/>
                <order-by field-name="wageType,sequenceNum,hrParameterId"/>
            </entity-find>
            <script>
                payrollFlat.put('partyId','شناسه')
                payrollFlat.put('firstName','نام')
                payrollFlat.put('lastName','نام خانوادگی')
                payrollFlat.put('ptidPersonalCd','کدپرسنلی')
                payrollFlat.put('emplPoisitionId','شناسه پست')
                payrollFlat.put('extEmplPoisitionId','شناسه پست قبلی')
                payrollFlat.put('positionTitle','عنوان پست ')
<!--                TODO-->
                payrollFlat.put('submitEmploymentTitle','موضوع حکم ')
                payrollFlat.put('partyRelationshipId','شناسه حکم ')
            </script>
            <iterate list="titles" entry="ttt"><script>payrollFlat.put(ttt.parameterSystematicName,ttt.title?:'-')</script></iterate>
            <script>payrollFlatList.add(payrollFlat)</script>
            <iterate list="partyIdList" entry="itmP">
                <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="[fromPartyId:itmP,toPartyId:'sampleMainOrg',date:reportDate,isFinal:['Y','N']]" out-map="emp"/>
                <if condition="emp?.employment?.partyRelationshipId">
                    <set field="payrollFlat" from="[:]"/>
                    <entity-find entity-name="mantle.humanres.ability.HrParameterResultAndParam" list="rss" >
                        <econdition field-name="partyRelationshipId"  from="emp?.employment?.partyRelationshipId"/>
                        <econdition field-name="employmentPayHistoryId" operator="is-null"/>
                        <econdition field-name="payDate" operator="is-null" />
                        <order-by field-name="sequenceNum"/>
                    </entity-find>
                    <iterate list="rss" entry="itm"><script>payrollFlat.put(itm.parameterSystematicName,itm.t_pointStr)</script></iterate>
                    <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="resls">
                        <field-map field-name="partyRelationshipId" from="emp?.employment?.partyRelationshipId"/>
                    </entity-find-one>
                    <set field="partyId" from="resls?.fromPartyId"/>
                    <entity-find-one entity-name="mantle.party.Person" value-field="pers">
                        <field-map field-name="partyId" from="partyId"/>
                    </entity-find-one>
                    <set field="firstName" from="pers?.firstName"/>
                    <set field="lastName" from="pers?.lastName"/>
                    <set field="ptidPersonalCd" from="pers?.ptidPersonalCd"/>
                    <set field="periodName" from="timePeriod?.periodName"/>
                    <service-call name="hrService.get#ActiveFullfilmentByParty"
                                  in-map="context+[validDate:reportDate,noeEntesabEnumId:'netnAsli']"
                                  out-map="context"/>
                    <set field="emplPositionId" from="fulfillment?.emplPositionId"/>
                    <set field="extEmplPositionId" from="fulfillment?.extEmplPositionId"/>
                    <set field="positionTitle" from="fulfillment?.title"/>
                    <script>
                        payrollFlat.put('partyId',partyId)
                        payrollFlat.put('firstName',firstName)
                        payrollFlat.put('lastName',lastName)
                        payrollFlat.put('ptidPersonalCd',ptidPersonalCd)
                        payrollFlat.put('emplPoisitionId',emplPositionId)
                        payrollFlat.put('extEmplPoisitionId',extEmplPositionId)
                        payrollFlat.put('positionTitle',positionTitle)
                        payrollFlat.put('submitEmploymentTitle',emp?.employment?.submitEmploymentTitle)
                        payrollFlat.put('partyRelationshipId',emp?.employment?.partyRelationshipId)
                    </script>
                    <script>
                        payrollFlatList.add(payrollFlat)
                    </script>
                </if>
            </iterate>
            <service-call name="trnService.export#csv" in-map="[vars:payrollFlatList]" out-map="csvRes"/>
            <set field="csvTxt" from="csvRes.res"/>
        </actions>
    </service>
    <!--TODO:
        service baraye gereftane liste zir majmue
        gozareshe bime
        gozareshe maliat
        service mohasebeye huquq faqay param haye huquqi mohasebe kone va qabliaro query bezane
        sabte sanade mali tuye service mohasebe huquq
        service mohasebeye moavaqat
        interface e standrad baraye service erjaate sazman ba modiriate level ha va up level budan service
    -->
    <service verb="create" noun="Employment">
        <in-parameters>
            <auto-parameters entity-name="mantle.party.PartyRelationship" include="nonpk"/>
            <auto-parameters entity-name="mantle.humanres.employment.Employment" include="nonpk"/>
            <parameter name="fromPartyId" required="true"/>
            <parameter name="toPartyId" required="true"/>
            <parameter name="emplPositionId" />
            <parameter name="employmentCalcTypeEnumId" />
            <parameter name="fromRoleTypeId" default-value="Employee"/>
            <parameter name="relationshipTypeEnumId" default-value="PrtEmployee"/>
            <parameter name="toRoleTypeId" default-value="OrgEmployer"/>
            <parameter name="fromDate" default="ec.user.nowTimestamp"/>
            <parameter name="submitDate" type="Timestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyRelationshipId"/>
            <parameter name="employment"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.party.PartyRelationship" list="partyRelList">
                <econdition field-name="fromPartyId" from="fromPartyId"/>
                <econdition field-name="toPartyId" from="toPartyId"/>
                <econdition field-name="relationshipTypeEnumId" from="'PrtEmployee'"/>
                <econditions combine="or">
                    <econdition field-name="fromDate" operator="greater-equals" from="fromDate"/>
                    <econdition field-name="thruDate" operator="greater" from="fromDate"/>
                    <econditions>
                        <econdition field-name="fromDate" operator="less" from="fromDate"/>
                        <econdition field-name="thruDate" operator="is-null"/>
                    </econditions>
                </econditions>
            </entity-find>

            <if condition="emplPositionId">
                <!-- If a position is specified, make sure it is valid for the toPartyId -->
                <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="emplPosition">
                    <field-map field-name="emplPositionId"/>
                </entity-find-one>
                <if condition="!emplPosition">
                    <message>Position ${emplPositionId} does not exist</message>
                    <return/>
                </if>
                <if condition=" ( toPartyId != emplPosition.organizationUnitPartyId &amp;&amp;toPartyId != emplPosition.ownerPartyId&amp;&amp;emplPosition.ownerPartyId!='_NA_')">
                    <entity-find-one entity-name="mantle.party.PartyDetail" value-field="toParty">
                        <field-map field-name="partyId" from="toPartyId"/>
                    </entity-find-one>
                    <set field="orgName" from="ec.resource.expand('PartyNameTemplate','',toParty)"/>
                    <return error="true" message="Position ${emplPosition.description} is not valid for ${orgName}"/>
                </if>
            </if>
            <entity-find-one entity-name="mantle.party.Person" value-field="pIs"><field-map field-name="partyId" from="fromPartyId"/></entity-find-one>
            <set field="isPeymankar" from="pIs.PeymaniTypeStatusEnumId"/><if condition="isPeymankar!='amanii'"><set field="isFinal" from="'Y'"/></if>
            <set field="fromDate" from="ec.l10n.parseTimestamp((ec.l10n.format(fromDate,'yyyy-MM-dd')+' 00:00:00'),'yyyy-MM-dd 00:00:00')"/>
            <service-call name="create#mantle.party.PartyRelationship" in-map="context" out-map="context"/>
            <service-call name="create#mantle.humanres.employment.Employment" in-map="context"/>
            <set field="employment" from="[:]"/>
            <set field="employment.partyRelationshipId" from="partyRelationshipId"/>
            <set field="employment.fromPartyId" from="fromPartyId"/>
            <set field="employment.toPartyId" from="toPartyId"/>
            <set field="employment.fromDate" from="fromDate"/>
            <set field="employment.submitDate" from="submitDate?:ec.user.nowTimestamp"/>
            <set field="employment.emplPositionId" from="emplPositionId"/>
            <set field="employment.terminationReasonEnumId" from="terminationReasonEnumId"/>
            <set field="employment.terminationTypeEnumId" from="terminationTypeEnumId"/>
            <set field="employment.employmentTypeEnumId" from="employmentTypeEnumId"/>
            <set field="employment.identityTypeEnumId" from="identityTypeEnumId"/>
            <set field="employment.emplAuthzTypeEnumId" from="emplAuthzTypeEnumId"/>
            <set field="employment.timePeriodTypeId" from="timePeriodTypeId"/>
            <set field="employment.submitEmploymentTitle" from="submitEmploymentTitle"/>
            <set field="employment.submissionType" from="submissionType"/>
            <set field="employment.description" from="description"/>
            <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="posMp">
                <field-map field-name="emplPositionId" from="emplPositionId"/>
            </entity-find-one>
            <if condition="!posMp">
                <message >could'nt find EmplPosition record: ${emplPositionId}</message>
                <return/>
            </if>
            <entity-find-one entity-name="mantle.humanres.position.EmplPositionClass" value-field="posClassMp">
                <field-map field-name="emplPositionClassId" from="posMp.emplPositionClassId"/>
            </entity-find-one>
            <entity-find-one entity-name="mantle.humanres.rate.PayGrade" value-field="payGradeMp">
                <field-map field-name="payGradeId" from="posMp.payGradeId"/>
            </entity-find-one>
            <if condition="posMp">
                <entity-find-one entity-name="mantle.humanres.position.EmplPositionClassGroup" value-field="workBranchMp">
                    <field-map field-name="EmplPositionClassGroupId" from="posMp.EmplPositionClassGroupId"/>
                </entity-find-one>
            </if>
            <if condition="workBranchMp">
                <entity-find-one entity-name="mantle.humanres.position.EmplPositionClassGroup" value-field="workGroupMp">
                    <field-map field-name="EmplPositionClassGroupId" from="workBranchMp.parentEmplPositionClassGroupId"/>
                </entity-find-one>
            </if>
            <if condition="posMp">
                <entity-find-one entity-name="moqui.basic.Enumeration" value-field="workTypeMp">
                    <field-map field-name="enumId" from="posMp.workTypeEnumId"/>
                </entity-find-one>
                <entity-find-one entity-name="mantle.facility.Facility" value-field="dutyFacilityMp">
                    <field-map field-name="facilityId" from="posMp.dutyFacilityId"/>
                </entity-find-one>
                <!--<entity-find-one entity-name="mantle.other.budget.Budget" value-field="budgetMp">
                    <field-map field-name="budgetId" from="posMp.budgetId"/>
                </entity-find-one>-->
            </if>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="employmentTypeMp">
                <field-map field-name="enumId" from="employment.employmentTypeEnumId"/>
            </entity-find-one>
            <set field="employment.employmentType" from="employmentTypeMp ? employmentTypeMp.getValueMap():[:]"/>
            <set field="employment.position" from="posMp?posMp.getValueMap():[:]"/>
            <!--            <set field="employment.position.budget" from="budgetMp ? budgetMp.getValueMap():[:]"/>-->
            <set field="employment.position.positionClass" from="posClassMp?posClassMp.getValueMap():[:]"/>
            <set field="employment.position.workType" from="workTypeMp?workTypeMp.getValueMap():[:]"/>
            <set field="employment.position.dutyFacility" from="dutyFacilityMp?dutyFacilityMp.getValueMap():[:]"/>
            <set field="employment.position.payGrade" from="payGradeMp?payGradeMp.getValueMap():[:]"/>
            <set field="employment.position.positionClass.workGroup" from="workGroupMp?workGroupMp.getValueMap():[:]"/>
            <set field="employment.position.positionClass.workBranch" from="workBranchMp?workBranchMp.getValueMap():[:]"/>
        </actions>
    </service>
    <service verb="delete" noun="Employment" transaction-timeout="600000000">
        <in-parameters>
            <parameter name="partyRelationshipId" required="true"/>
            <parameter name="fromRoleTypeId" default-value="Employee"/>
            <parameter name="relationshipTypeEnumId" default-value="PrtEmployee"/>
            <parameter name="toRoleTypeId" default-value="OrgEmployer"/>
            <parameter name="deleteReal" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="ptyRel"/>
            <entity-find-one entity-name="mantle.humanres.employment.Employment" value-field="employment"/>
            <if condition="employment.isReadyForPay=='Y' &amp;&amp;ec.user.userAccount.username!='trn'&amp;&amp;ec.user.userAccount.username!='admin'">
                <message error="true">حذف حکم به دلیل صدور فیش حقوقی امکان پذیر نیست.</message>
                <return/>
            </if>
            <message>${ec.user.userAccount?.username?:'_NA_'}-_-_-_حذف شده توسط _-_-_-</message>
            <set field="employment.deleteBy" from="ec.user.userAccount?.username?:'_NA_'"/>
            <entity-update value-field="employment"/>

            <entity-delete-by-condition entity-name="mantle.humanres.ability.HrParameterAppl" >
                <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
            </entity-delete-by-condition>
            <if condition="deleteReal=='Y'">
                <message>real8888888888888888888888888888</message>
                <entity-delete-by-condition entity-name="mantle.humanres.ability.HrParameterResult" >
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                </entity-delete-by-condition>
                <entity-delete-by-condition entity-name="mantle.humanres.employment.EmploymentDetailReport" >
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                    <econdition field-name="employmentPayHistoryId"  operator="is-null"/>
                    <econdition field-name="payDate" operator="is-null"/>
                </entity-delete-by-condition>
                <entity-delete value-field="employment"/>
                <!--TODO: maybe dont need to delete the relationship-->
                <entity-delete value-field="ptyRel"/>
            </if>
            <check-errors/>
        </actions>
    </service>
    <service verb="deleteByDate" noun="Employment"  transaction-timeout="600000000">
        <in-parameters>
            <parameter name="prevDate" type="Timestamp" required="true"/>
            <parameter name="prevThruDate" type="Timestamp" required="true"/>
            <parameter name="haveMoavaqId" />
            <parameter name="approve"  />
            <parameter name="deleteReal" />
        </in-parameters>
        <actions>
            <if condition="approve!='true'">
                <message error="true">جهت حذف لازم است تاییده تیک زده شود.</message>
                <return/>
            </if>
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="res">
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="submitDate" operator="greater-equals" from="prevDate"/>
                <econdition field-name="submitDate" operator="less-equals" from="prevThruDate"/>
<!--                <econdition field-name="partyRelationshipIdMoavaqe" operator="is-not-null" ignore="!haveMoavaqId"/>-->
            </entity-find>
            <message>${res.size()}_-_-_-_-_-_تعداد احکام حذف شده_-_-_-_-_</message>
            <iterate list="res" entry="itm">
                <service-call name="mantle.humanres.EmploymentServices.delete#Employment" in-map="context+[partyRelationshipId:itm.partyRelationshipId]"/>
            </iterate>
            <!--            <service-call name="com.hrImportService.fixThruDate#Employment"/>-->
        </actions>
    </service>
    <service verb="deleteByKoli" noun="Employment">
        <in-parameters>
            <parameter name="shenaseHokmeKoli" required="true"/>
            <parameter name="deleteReal" />
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="res">
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="shenaseHokmeKoli" from="shenaseHokmeKoli"/>
            </entity-find>
            <iterate list="res" entry="itm">
                <service-call name="mantle.humanres.EmploymentServices.delete#Employment" in-map="context+[partyRelationshipId:itm.partyRelationshipId]"/>
            </iterate>
        </actions>
    </service>
    <service verb="terminate" noun="Employment">
        <in-parameters>
            <parameter name="partyRelationshipId"/>
            <parameter name="fromPartyId"/>
            <parameter name="toPartyId"/>
            <parameter name="terminateDate" type="Timestamp" required="true"/>
            <parameter name="terminationTypeEnumId" required="true"/>
            <parameter name="fromRoleTypeId" default-value="Employee"/>
            <parameter name="relationshipTypeEnumId" default-value="PrtEmployee"/>
            <parameter name="toRoleTypeId" default-value="OrgEmployer"/>
        </in-parameters>
        <actions>
            <if condition="!partyRelationshipId &amp;&amp; (!fromPartyId || !toPartyId)">
                <return error="true" message="either partyRelationshipId or (fromPartyId and toPartyId) should be passed to this service as param"/>
            </if>
            <entity-find entity-name="mantle.party.PartyRelationship" list="ptyRelList">
                <econdition field-name="partyRelationshipId" from="partyRelationshipId" ignore-if-empty="true"/>
                <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                <econdition field-name="toPartyId" from="toPartyId" ignore-if-empty="true"/>
                <econdition field-name="fromRoleTypeId" from="fromRoleTypeId" />
                <econdition field-name="relationshipTypeEnumId" from="relationshipTypeEnumId" />
                <econdition field-name="toRoleTypeId" from="toRoleTypeId" />
            </entity-find>
            <set field="ptyRel" from="ptyRelList[0]"/>
            <if condition="!ptyRel">
                <return error="true" message="couldn't find any partyRelationship for fromPartyId:${fromPartyId} and toPartyId:${toPartyId}"/>
                <return/>
            </if>
            <if condition="ptyRel.thruDate"><then>
                <message>this employment already terminated: ${ptyRel.partyRelationshipId}</message>
            </then><else>
                <set field="partyRelationshipId" from="ptyRel.partyRelationshipId"/>
                <entity-find-one entity-name="mantle.humanres.employment.Employment" value-field="employment"/>
                <if condition="!employment">
                    <return error="true" message="couldn't find any employment for fromPartyId:${fromPartyId} and toPartyId:${toPartyId}"/>
                    <return/>
                </if>

                <set field="employment.terminationTypeEnumId" from="terminationTypeEnumId"/>
                <set field="employment.terminateDateSystem" from="ec.user.nowTimestamp"/>
                <entity-update value-field="employment"/>
                <set field="ptyRel.thruDate" from="terminateDate"/>
                <entity-update value-field="ptyRel"/>
                <message>terminate employment successfully</message>
            </else></if>
        </actions>
    </service>
    <service verb="update" noun="Employment">
        <in-parameters>
            <parameter name="partyRelationshipId"/>
            <parameter name="fromPartyId"/>
            <parameter name="toPartyId"/>
            <parameter name="terminateDate" type="Timestamp" required="true"/>
            <parameter name="terminationTypeEnumId" required="true"/>
            <parameter name="fromRoleTypeId" default-value="Employee"/>
            <parameter name="relationshipTypeEnumId" default-value="PrtEmployee"/>
            <parameter name="toRoleTypeId" default-value="OrgEmployer"/>
        </in-parameters>
        <actions>
            <if condition="!partyRelationshipId &amp;&amp; (!fromPartyId || !toPartyId)">
                <return error="true" message="either partyRelationshipId or (fromPartyId and toPartyId) should be passed to this service as param"/>
            </if>
            <entity-find entity-name="mantle.party.PartyRelationship" list="ptyRelList">
                <econdition field-name="partyRelationshipId" from="partyRelationshipId" ignore-if-empty="true"/>
                <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                <econdition field-name="toPartyId" from="toPartyId" ignore-if-empty="true"/>
                <econdition field-name="fromRoleTypeId" from="fromRoleTypeId" />
                <econdition field-name="relationshipTypeEnumId" from="relationshipTypeEnumId" />
                <econdition field-name="toRoleTypeId" from="toRoleTypeId" />
            </entity-find>
            <set field="ptyRel" from="ptyRelList[0]"/>
            <if condition="!ptyRel">
                <return error="true" message="couldn't find any partyRelationship for fromPartyId:${fromPartyId} and toPartyId:${toPartyId}"/>
                <return/>
            </if>
            <set field="partyRelationshipId" from="ptyRel.partyRelationshipId"/>
            <entity-find-one entity-name="mantle.humanres.employment.Employment" value-field="employment"/>
            <if condition="!employment">
                <return error="true" message="couldn't find any employment for fromPartyId:${fromPartyId} and toPartyId:${toPartyId}"/>
                <return/>
            </if>
            <!--TODO: implement this: maybe just allow update latest employment date-->
        </actions>
    </service>
    <service verb="get" noun="Employment">
        <in-parameters>
            <parameter name="partyRelationshipId" />
            <parameter name="notIncludePartyRelationshipId" />
            <parameter name="fromPartyId" />
            <parameter name="toPartyId" />
            <parameter name="isFinal"  type="List"/>
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
            <parameter name="maxDate" type="Timestamp" />
        </in-parameters>
        <out-parameters>
            <parameter name="employment" />
            <parameter name="partyDetail" />
        </out-parameters>
        <actions>
            <if condition="!partyRelationshipId">
                <if condition="!fromPartyId || !toPartyId">
                    <message error="true">partyRelationshipId or (fromPartyId and toPartyId) is required</message>
                    <return/>
                </if>
            </if>
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="employments">
                <econdition field-name="fromDate" operator="less-equals" from="date" ignore="!!partyRelationshipId" />
<!--                <econdition field-name="isFinal" operator="in" from="'Y'" or-null="true"/>-->
                <econdition field-name="partyRelationshipId" from="partyRelationshipId" ignore-if-empty="true"/>
                <econdition field-name="partyRelationshipId" operator="not-equals" from="notIncludePartyRelationshipId" ignore-if-empty="true"/>
                <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                <econdition field-name="toPartyId" from="toPartyId" ignore-if-empty="true"/>
                <econdition field-name="submitDate" operator="less-equals" from="maxDate" ignore-if-empty="true"/>
                <econdition field-name="submitDate" operator="less-equals" from="maxDate" ignore-if-empty="true"/>
                <econdition field-name="deleteBy" operator="is-null" />
                <order-by field-name="-fromDate,-submitDate"/>
            </entity-find>
            <if condition="employments.size()==0">
                <set field="employment" from="[:]"/>
                <set field="partyDetail" from="[:]"/>
                <message >couldn't find any employment for fromPartyId: ${fromPartyId} and toPartyId: ${toPartyId} and partyRelationshipId: ${partyRelationshipId}.</message>
                <return/>
            </if>
            <set field="employment" from="employments[0].getValueMap()"/>
            <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="posMp">
                <field-map field-name="emplPositionId" from="employment.emplPositionId"/>
            </entity-find-one>
            <entity-find-one entity-name="mantle.humanres.position.EmplPositionClass" value-field="posClassMp">
                <field-map field-name="emplPositionClassId" from="posMp.emplPositionClassId"/>
            </entity-find-one>
            <entity-find-one entity-name="mantle.humanres.rate.PayGrade" value-field="payGradeMp">
                <field-map field-name="payGradeId" from="posMp.payGradeId"/>
            </entity-find-one>
            <if condition="posMp">
                <entity-find-one entity-name="mantle.humanres.position.EmplPositionClassGroup" value-field="workGroupMp">
                    <field-map field-name="EmplPositionClassGroupId" from="posMp.EmplPositionClassGroupId"/>
                </entity-find-one>
            </if>
            <if condition="workGroupMp">
                <entity-find-one entity-name="mantle.humanres.position.EmplPositionClassGroup" value-field="workBranchMp">
                    <field-map field-name="EmplPositionClassGroupId" from="workGroupMp.parentEmplPositionClassGroupId"/>
                </entity-find-one>
            </if>
            <if condition="posMp">
                <!-- <entity-find entity-name="mantle.humanres.position.EmplPositionClassWorkType" list="workTypeMp">
                     <field-map field-name="emplPositionClassId" from="posMp.emplPositionClassId"/>
                 </entity-find>-->
                <entity-find-one entity-name="mantle.facility.Facility" value-field="dutyFacilityMp">
                    <field-map field-name="facilityId" from="posMp.dutyFacilityId"/>
                </entity-find-one>
                <!--                <entity-find-one entity-name="mantle.other.budget.Budget" value-field="budgetMp">-->
                <!--                    <field-map field-name="budgetId" from="posMp.budgetId"/>-->
                <!--                </entity-find-one>-->
            </if>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="employmentTypeMp">
                <field-map field-name="enumId" from="employment.employmentTypeEnumId"/>
            </entity-find-one>
            <set field="employment.employmentType" from="employmentTypeMp ? employmentTypeMp.getValueMap():[:]"/>
            <set field="employment.position" from="posMp?posMp.getValueMap():[:]"/>
            <!--            <set field="employment.position.budget" from="budgetMp ? budgetMp.getValueMap():[:]"/>-->
            <set field="employment.position.positionClass" from="posClassMp?posClassMp.getValueMap():[:]"/>
            <set field="employment.position.dutyFacility" from="dutyFacilityMp?dutyFacilityMp.getValueMap():[:]"/>
            <set field="employment.position.payGrade" from="payGradeMp?payGradeMp.getValueMap():[:]"/>
            <set field="employment.position.positionClass.workGroup" from="workGroupMp?workGroupMp.getValueMap():[:]"/>
            <set field="employment.position.positionClass.workBranch" from="workBranchMp?workBranchMp.getValueMap():[:]"/>

        </actions>
    </service>
    <service verb="get" noun="paramResult">
        <in-parameters>
            <parameter name="partyId" required="true" />
            <parameter name="parameterId" />
            <parameter name="parameterSystematicName" />
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="res" />
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="emplParameterList">
                <date-filter valid-date="date" from-field-name="paramFromDate" thru-field-name="paramThruDate"/>
                <date-filter valid-date="date" from-field-name="employmentFromDate" thru-field-name="employmentThruDate"/>
                <econdition field-name="parameterSystematicName" from="parameterSystematicName" ignore-if-empty="true"/>
                <econdition field-name="parameterId" from="parameterId" ignore-if-empty="true"/>
                <econdition field-name="fromPartyId" from="partyId" />
                <order-by field-name="parameterId"/>
            </entity-find>
            <set field="res" from="emplParameterList[0]?.t_pointStr"/>
        </actions>
    </service>
    <service verb="getDetailFuture" noun="Employment">
        <description>
            find the applicable hrParameters result (simulate futeare results) for a employment(partyRelationshipId)
            also you should pass the date ...because the hrParameterAppl entity is historical
        </description>
        <in-parameters>
            <parameter name="partyRelationshipId" />
            <parameter name="partyRelationshipIdMoavaqe" />
            <parameter name="fromPartyId" />
            <parameter name="onlyChanged"  />
            <parameter name="overrideParams"  type="List" />
            <parameter name="toPartyId" />
            <parameter name="isInnerCall" />
            <parameter name="allowedChangeParams" type="List" />
            <parameter name="employmentCalcTypeEnumId" />
            <parameter name="emplPositionId" />
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="prevEmployment" />
            <parameter name="partyDetail" />
            <parameter name="effectedEmploymentsCount" />
            <parameter name="notAppliedParams" type="List"/>
            <parameter name="activeParams" type="List"/>
            <parameter name="newParams" type="List"/>
            <parameter name="comparedParams" type="List"/>
            <parameter name="theDifference" type="List"/>
            <parameter name="paramResult" type="Map"/>
        </out-parameters>
        <actions>
            <if condition="!allowedChangeParams">
                <set field="allowedChangeParams" from="[]"/>
            </if>
            <set field="date" from="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:00:00'),'yyyy-MM-dd 00:00:00')"/>
            <set field="activeParams" from="[]"/>
            <set field="newParams" from="[]"/>
            <set field="comparedParams" from="[]"/>
            <script>
                logger.warn(partyRelationshipIdMoavaqe.toString()+" dddddddddddddd")
            </script>
            <set field="theDifference" from="[]"/>
            <if condition="partyRelationshipIdMoavaqe"><then>
                <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="[partyRelationshipId:partyRelationshipIdMoavaqe]" out-map="context"/>
            </then><else>
                <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="context" out-map="context"/>
                <message>eeeE_________${employment.partyRelationshipId}</message>
            </else></if>

            <if condition="employment">
                <set field="prevEmployment" from="employment"/>
            </if>
            <service-call name="mantle.party.PartyServices.get#irParty" in-map="[partyId:fromPartyId]" out-map="irPartyRes"/>
            <set field="partyDetail" from="irPartyRes.profile"/>
            <set field="employeePartyId" from="employment ? employment.fromPartyId : fromPartyId "/>
            <set field="mainOrgPartyId" from="employment ? employment.toPartyId : toPartyId "/>
            <set field="partyRelationshipId" from="employment ? employment.partyRelationshipId : partyRelationshipId "/>
            <service-call name="mantle.humanres.EmploymentServices.getApplicable#hrParameter" in-map="context" out-map="context"/>
            <set field="notAppliedParams" from="notAppliedHrParameters"/>
            <service-call name="mantle.humanres.EmploymentServices.get#Adjustment" in-map="context" out-map="context"/>
            <script>
                completeRes.sort { a, b -> a.sequenceNum &lt;=> b.sequenceNum }
            </script>
            <iterate list="completeRes" entry="itm2">
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultAndParam" list="resultMp" limit="1">
                    <econdition field-name="parameterSystematicName" from="itm2.parameterSystematicName"/>
                    <!--                    <date-filter valid-date="date" from-field-name="fromDateEmp" thru-field-name="thruDateEmp"/>-->

                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                    <econdition field-name="fromDateEmp" operator="less-equals" from="date"/>
                    <order-by field-name="-fromDateEmp,-submitDateEmp" />
                </entity-find>
                <script>
                    def prevParam =resultMp.size()>0?resultMp[0]:[:]
                    def actParam =itm2
                    activeParams.add(prevParam)
                    newParams.add(actParam)
                    if(onlyChanged!='Y' || (onlyChanged=='Y'&amp;&amp; actParam.t_pointStr!=prevParam.t_pointStr &amp;&amp; actParam.showInEmployment=='Y')) {
                    comparedParams.add([parameterId:actParam.parameterId,
                    parameterSystematicName:actParam.parameterSystematicName,
                    point:actParam.point,
                    pointStr:actParam.pointStr,
                    t_pointStr:actParam.t_pointStr,
                    t_pointMinusStr:((actParam.point!=null &amp;&amp; prevParam.point!=null)? String.format("%.2f",new BigDecimal(actParam.point-prevParam.point).setScale(2, java.math.BigDecimal.ROUND_HALF_UP)):''),
                    title:actParam.title,
                    prev_parameterId:prevParam.parameterId,
                    prev_point:prevParam.point,
                    prev_pointStr:prevParam.pointStr,
                    prev_t_pointStr:prevParam.t_pointStr,
                    prev_title:prevParam.title
                    ])
                    }
                </script>

            </iterate>

            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="effectedEmploymentsCount">
                <econdition field-name="isFinal" from="'Y'" />
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="fromPartyId" from="employeePartyId" />
                <econdition field-name="fromDate" operator="greater" from="date" />
                <econdition field-name="fromDate" operator="less-equals" from="maxDateFrom" ignore-if-empty="true" />
                <order-by field-name="fromDate,submitDate"/>
            </entity-find>
            <set field="effectedEmploymentsCount" from="effectedEmploymentsCount?.size()?:0"/>
        </actions>
    </service>

    <service noun="NoFormulParam" verb="create" >
        <in-parameters>
            <parameter name="parameterId" />
            <parameter name="actParam" />
            <parameter name="prevParam"/>
            <parameter name="employeePartyId"/>
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp" />
        </in-parameters>
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emtiazTarfi" from="prevResult.emtiazTarfi?:0" />
            <set field="sanavatGozashteSazman" from="prevResult.sanavatGozashteSazman?:0" />
            <if condition="parameterId == '9'">
                <set field="sanavatGozashteSazman" from="sanavatGozashteSazman?:0+emtiazTarfi?:0"/>
                <service-call name="hrService.store#hrParameterAppl" in-map="[parameterId:'101',
                                                                               isForAll:'N',
                                                                               point:sanavatGozashteSazman,
                                                                               fromDate:date,
                                                                               employeePartyId:employeePartyId,
                                                                              ]"  />
            </if>
        </actions>
    </service>


    <service verb="final" noun="Employment">
        <in-parameters>
            <parameter name="partyRelationshipId" required="true"/>
            <parameter name="approverUsername" />
            <parameter name="isSent"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.humanres.employment.Employment" value-field="emp"/>
            <if condition="emp">
                <service-call name="store#mantle.humanres.employment.Employment" in-map="[partyRelationshipId:partyRelationshipId,isFinal:'Y',approverUsername:approverUsername]" out-map="context"/>
            </if>
            <entity-find entity-name="mantle.party.PartyRelationship" list="PRREL">
                <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
            </entity-find>
            <set field="fromPartyId" from="PRREL[0].fromPartyId"/>
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="effectedEmployments">
                <econdition field-name="isFinal" operator="not-equals" from="'Y'" />
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                <econdition field-name="fromDate" operator="less-equals" from="PRREL[0].fromDate"/>
                <order-by field-name="fromDate,submitDate"/>
            </entity-find>
            <iterate list="effectedEmployments" entry="itm">
                <service-call name="store#mantle.humanres.employment.Employment" in-map="[partyRelationshipId:itm.partyRelationshipId,isFinal:'Y',approverUsername:approverUsername]" out-map="sdf"/>
            </iterate>
        </actions>

    </service>
    <service verb="submit" noun="Employment">
        <in-parameters>
            <auto-parameters entity-name="mantle.party.PartyRelationship" include="nonpk"/>
            <auto-parameters entity-name="mantle.humanres.employment.Employment" include="nonpk"/>
            <parameter name="fromPartyId" required="true"/>
            <parameter name="toPartyId" required="true"/>
            <parameter name="emplPositionId" />
            <parameter name="isInnerCall" />
            <parameter name="partyRelationshipIdMoavaqe" />
            <parameter name="latestMoavaqeThruDate" />
            <parameter name="latestFromDate" type="Timestamp"/>
            <parameter name="isLatestMoavaqe" default="false" type="Boolean" />
            <parameter name="thruDateForMoavaqeTerminate" type="Timestamp" />
            <parameter name="overrideParams" type="List" />
            <parameter name="employmentCalcTypeEnumId" required="true" />
            <parameter name="fromRoleTypeId" default-value="Employee"/>
            <parameter name="relationshipTypeEnumId" default-value="PrtEmployee"/>
            <parameter name="terminationTypeEnumId" default-value="TtSubmitEmpl"/>
            <parameter name="toRoleTypeId" default-value="OrgEmployer"/>
            <parameter name="fromDate" default="ec.user.nowTimestamp" type="Timestamp"/>
            <parameter name="maxDateFrom" type="Timestamp"/>
            <parameter name="onlyChanged" />
            <!--            <parameter name="allowedChangeParams" type="List" />-->
        </in-parameters>
        <out-parameters>
            <parameter name="employment" />
            <parameter name="partyRelationshipId" />
            <parameter name="partyDetail" />
            <parameter name="notAppliedParams" type="List"/>
            <parameter name="activeParams" type="List"/>
            <parameter name="newParams" type="List"/>
            <parameter name="comparedParams" type="List"/>
        </out-parameters>
        <actions>
            <if condition="!overrideParams">
                <set field="overrideParams" from="[]"/>
            </if>
            <set field="fromDate" from="ec.l10n.parseTimestamp((ec.l10n.format(fromDate,'yyyy-MM-dd')+' 00:00:00'),'yyyy-MM-dd 00:00:00')"/>
            <if condition="fromDate > ec.user.nowTimestamp">
                <message error="true">you can't submit employment for future</message>
                <return/>
            </if>

            <!--forbidding duplicate employments for the same employee in the same time-->
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="dupPtyRelList">
                <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="toPartyId" from="toPartyId" ignore-if-empty="true"/>
                <econdition field-name="relationshipTypeEnumId" from="'PrtEmployee'" />
                <econdition field-name="isFinal" from="'N'" />
            </entity-find>
            <if condition="adjustmentEmploymentStatus == 'P'">
                <!--                <set field="isFinal" from="'Y'"/>-->
                <set field="dupPtyRelList" from="[]"/>
            </if>
            <if condition="dupPtyRelList">
                <message error="true">لطفاً ابتدا نسبت به نهایی ویا حذف کردن حکم های قبلی برای شخص با شناسه ${fromPartyId} اقدام فرمایید. </message>
                <return/>
            </if>
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="checkMvq">
                <econdition field-name="partyRelationshipId" from="partyRelationshipId" ignore-if-empty="true"/>
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                <econdition field-name="toPartyId" from="toPartyId" ignore-if-empty="true"/>
                <order-by field-name="-fromDate,-submitDate"/>
            </entity-find>
            <!--approveDoMoavaq-->
            <set field="actionDate" from="fromDate"/>
            <if condition="checkMvq &amp;&amp;checkMvq[0].fromDate &gt;= fromDate">
                <!--TODO: Hajkarimis Bullshit-->
                <!--
                    <set field="actionDate" from="fromDate"/>
                    <set field="fromDate" from="checkMvq[0].fromDate"/>
                -->
                <!--TODO:Standard way-->
                <set field="actionDate" from="fromDate"/>
                <if condition="!isInnerCall">
                    <set field="latestFromDate" from="checkMvq[0].fromDate"/>
                    <set field="latestPartyRelationshipId" from="checkMvq[0].partyRelationshipId"/>
                </if>
            </if>


            <set field="date" from="fromDate"/>
            <entity-find entity-name="mantle.party.time.TimePeriod" list="currentMonthList">
                <econdition field-name="fromDate" operator="less-equals" from="new java.sql.Date(fromDate.time)"/>
                <econdition field-name="thruDate" operator="greater-equals" from="new java.sql.Date(fromDate.time)"/>
                <econdition field-name="partyId" from="toPartyId"/>
                <econdition field-name="timePeriodTypeId" value="PayrollMonth"/>
            </entity-find>
            <if condition="currentMonthList.size()==0">
                <message error="true">you haven't define Payroll Period for selected month</message>
                <return/>
            </if>

            <entity-find entity-name="mantle.party.time.TimePeriod" list="nowMonthList">
                <econdition field-name="fromDate" operator="less-equals" from="new java.sql.Date(ec.user.nowTimestamp.time)"/>
                <econdition field-name="thruDate" operator="greater-equals" from="new java.sql.Date(ec.user.nowTimestamp.time)"/>
                <econdition field-name="partyId" from="toPartyId"/>
                <econdition field-name="timePeriodTypeId" value="PayrollMonth"/>
            </entity-find>
            <if condition="nowMonthList.size()==0">
                <message error="true">you haven't define Payroll Period for selected month</message>
            </if>
            <service-call name="hrService.get#ActiveFullfilmentByParty"
                          in-map="[partyId:fromPartyId,validDate:fromDate,noeEntesabEnumId:'netnAsli']" out-map="resOut5"/>
            <!--                          in-map="[partyId:fromPartyId,validDate:fromDate,noeEntesabEnumId:'netnAsli']" out-map="resOut5"/>-->
            <set field="emplPositionId" from="resOut5?.fulfillment?.emplPositionId"/>
            <if condition="!emplPositionId">
                <message >
                    در تاریخ انتخابی هیچ انتصاب فعالی شناسایی نشد.
                    partyId: ${fromPartyId}
                    partyId: ${fromDate}
                </message>
                <return/>
            </if>

            <if condition="adjustmentEmploymentStatus=='P'"><then>
                <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="[partyRelationshipId:partyRelationshipIdMoavaqe]" out-map="context"/>
                <set field="thruDate" from="thruDateForMoavaqeTerminate"/>
                <if condition="isLatestMoavaqe">
                    <set field="thruDate" from="latestMoavaqeThruDate"/>
                </if>
                <set field="terminationTypeEnumId" from="'TtSubmitEmpl'"/>
            </then><else>
                <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="context" out-map="context"/>
            </else></if>

            <set field="terminationTypeEnumId" from="null"/>
            <if condition="!employmentTypeEnumId">
                <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="empOne" limit="1">
                    <econdition field-name="deleteBy" operator="is-null" />
                    <econdition field-name="fromPartyId" from="fromPartyId" />
                    <order-by field-name="-fromDate,-submitDate"/>
                </entity-find>
                <if condition="empOne[0]">
                    <set field="employmentTypeEnumId" from="empOne[0].employmentTypeEnumId"/>
                </if>
            </if>
            <if condition="!!latestFromDate &amp;&amp; !isInnerCall &amp;&amp; latestFromDate &gt; fromDate">
                <set field="adjustmentEmploymentStatus" from="'P'"/>
                <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="moavaqeyeAvalinHokm">
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId" ignore-if-empty="true"/>
                    <econdition field-name="deleteBy" operator="is-null" />
                    <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                    <econdition field-name="toPartyId" from="toPartyId" ignore-if-empty="true"/>
                    <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                    <order-by field-name="-fromDate,-submitDate"/>
                </entity-find>
                <set field="partyRelationshipIdMoavaqe" from="moavaqeyeAvalinHokm[0].partyRelationshipId"/>
            </if>
            <if condition="!!isInnerCall &amp;&amp; latestFromDate == fromDate">
                <set field="adjustmentEmploymentStatus" from="null"/>
            </if>
            <service-call name="mantle.humanres.EmploymentServices.create#Employment" in-map="context" out-map="context"/>
            <if condition="!!latestFromDate &amp;&amp; !isInnerCall &amp;&amp; latestFromDate &gt; fromDate">
                <set field="partyRelationshipIdMoavaqe" from="null"/>
            </if>
            <set field="partyRelationshipId" from="employment.partyRelationshipId"/>
            <set field="fromPartyId" from="employment.fromPartyId"/>
            <set field="employeePartyId" from="employment.fromPartyId"/>
            <set field="mainOrgPartyId" from="employment.toPartyId"/>
            <set field="toPartyId" from="employment.toPartyId"/>

            <if condition="!allowedChangeParams"><set field="allowedChangeParams" from="[]"/></if>

            <service-call name="mantle.humanres.EmploymentServices.getDetailFuture#Employment" in-map="context+[emplPositionId:null]" out-map="context"/>

            <if condition="!isInnerCall">
                <iterate list="comparedParams" entry="itmall">
                    <if condition="itmall.t_pointStr != itmall.prev_t_pointStr">
                        <script>allowedChangeParams.add(itmall.parameterSystematicName)</script>
                    </if>
                </iterate>
            </if>
            <iterate list="newParams" entry="itm">
                <if condition="itm.parameterTypeEnumId=='PersonnelPrt'">
                    <set field="point" from="itm.point"/>
                    <set field="pointStr" from="itm.pointStr"/>
                    <set field="t_pointStr" from="itm.t_pointStr"/>
                    <if condition="fromDate.getTime() &gt;= 1613680100000 &amp;&amp; fromDate.getTime() &lt; 1613766500000">

                        <if condition="itm.parameterId=='40'">
                            <set field="point" from="Double.valueOf(itm.point)-Double.valueOf(paramResult.panzdahDarsad?:0)"/>
                            <set field="pointStr" from="String.format('%.2f', Double.valueOf(point))"/>
                            <set field="t_pointStr" from="String.format('%.2f', Double.valueOf(point))"/>
                        </if>
                        <if condition="itm.parameterId=='22'">
                            <set field="point" from="Double.valueOf(itm.point)+Double.valueOf(paramResult.mozdTafavotTatbiq?:0)"/>
                            <set field="pointStr" from="String.format('%.2f', Double.valueOf(point))"/>
                            <set field="t_pointStr" from="String.format('%.2f', Double.valueOf(point))"/>
                        </if>
                        <if condition="itm.parameterId=='40'">
                            <set field="point" from="Double.valueOf(itm.point)-Double.valueOf(paramResult.panzdahDarsad?:0)"/>
                            <set field="pointStr" from="point"/>
                            <set field="t_pointStr" from="point"/>
                        </if>
                        <if condition="itm.parameterId=='39'">
                            <set field="point" from="Double.valueOf(itm.point)-Double.valueOf(paramResult.panzdahDarsad?:0)"/>
                            <set field="pointStr" from="point"/>
                            <set field="t_pointStr" from="point"/>
                        </if>
                        <!--  <if condition="itm.parameterId=='15DarsadKasriJazb'">
                              <script>
                                  //overrideParams.add([parameterId:'15DarsadKasriJazb',overridePoint:Double.valueOf(itm.point)])
                                  overrideParams.add([parameterId:'34',
                                  overridePoint:Double.valueOf(itm.point)])
                                  overrideParams.add([parameterId:'34d',
                                  overridePoint:Double.valueOf(itm.point)])
                              </script>
                          </if>-->

                    </if>

                    <if condition="itm.parameterId=='52'">
                        <set field="point" from="Double.valueOf(itm.point)+Double.valueOf(paramResult.isargarikhas?:0)"/>
                        <set field="pointStr" from="String.format('%.2f', Double.valueOf(point))"/>
                        <set field="t_pointStr" from="String.format('%.2f', Double.valueOf(point))"/>
                    </if>
                    <service-call name="create#mantle.humanres.ability.HrParameterResult" in-map="[partyRelationshipId:partyRelationshipId,
                                                                                                        parameterId:itm.parameterId,
                                                                                                        empPartyId:employeePartyId,
                                                                                                        point:point,
                                                                                                        pointStr:pointStr,
                                                                                                        wageType:itm.wageType,
                                                                                                        isEmployerPaid:itm.isEmployerPaid,
                                                                                                        t_pointStr:t_pointStr]" out-map="resId"/>



                </if>
            </iterate>
            <if condition="terminationTypeEnumId =='TtResigned'||terminationTypeEnumId=='TtFired'||terminationTypeEnumId=='TtLayoff'||terminationTypeEnumId=='TtRetired'">
                <service-call name="store#mantle.humanres.employment.Employee" in-map="[partyId:employment.fromPartyId,statusId:'esDisable',emplTerminationTypeEnumId:terminationTypeEnumId]"/>
            </if>
            <service-call name="mantle.humanres.EmploymentServices.submit#DelayedEmployment" in-map="context" out-map="moavaq"/>
            <if condition="!isInnerCall">
                <iterate list="overrideParams" entry="ovrItm">
                    <if condition="!ovrItm.parameterId"><continue/></if>
                    <service-call name="hrService.create#hrParameterAppl"
                                  in-map="[parameterId:ovrItm.parameterId,
                                  employeePartyId:employeePartyId,
                                  partyRelationshipId:partyRelationshipId,
                                  fromDate:fromDate,
                                  isForAll:'N',
                                  isOverride:'Y',
                                  point:Double.valueOf(ovrItm.overridePoint)
                                  ]" out-map="lbd"/>
                </iterate>
            </if>
        </actions>

    </service>
    <service verb="submit" noun="DelayedEmployment" transaction-timeout="60000000">
        <in-parameters>
            <auto-parameters entity-name="mantle.party.PartyRelationship" include="nonpk"/>
            <auto-parameters entity-name="mantle.humanres.employment.Employment" include="nonpk"/>
            <parameter name="fromPartyId" required="true"/>
            <parameter name="toPartyId" required="true"/>
            <parameter name="latestFromDate" type="Timestamp"/>
            <parameter name="emplPositionId" />
            <parameter name="shenaseHokmeKoli" />
            <parameter name="isInnerCall" type="Boolean" />
            <parameter name="overrideParams" type="List" />
            <parameter name="allowedChangeParams" type="List" />
            <parameter name="partyRelationshipIdMoavaqe" />
            <parameter name="latestMoavaqeThruDate" />
            <parameter name="isLatestMoavaqe" default="false" type="Boolean" />
            <parameter name="thruDateForMoavaqeTerminate" type="Timestamp" />
            <parameter name="employmentCalcTypeEnumId" required="true" />
            <parameter name="fromRoleTypeId" default-value="Employee"/>
            <parameter name="relationshipTypeEnumId" default-value="PrtEmployee"/>
            <parameter name="terminationTypeEnumId" default-value="TtSubmitEmpl"/>
            <parameter name="toRoleTypeId" default-value="OrgEmployer"/>
            <parameter name="fromDate" default="ec.user.nowTimestamp" type="Timestamp"/>
            <parameter name="maxDateFrom" type="Timestamp"/>
            <parameter name="onlyChanged" />
        </in-parameters>
        <actions>
            <if condition="!!isInnerCall">
                <return/>
            </if>
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="effectedEmployments">
                <econdition field-name="isFinal" from="'Y'" />
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="fromPartyId" from="fromPartyId" ignore-if-empty="true"/>
                <econdition field-name="toPartyId" from="toPartyId" ignore-if-empty="true"/>
                <econdition field-name="fromDate" operator="greater" from="actionDate" />
                <econdition field-name="fromDate" operator="less-equals" from="maxDateFrom" ignore-if-empty="true" />
                <order-by field-name="-fromDate,-submitDate"/>
            </entity-find>
            <set field="dupControl" from="[]"/>
            <iterate list="effectedEmployments" entry="itm">
                <if condition="dupControl.indexOf(itm.fromDate)!=-1">1<continue/></if>
                <script>dupControl.add(itm.fromDate)</script>
                <service-call name="mantle.humanres.EmploymentServices.submit#Employment" in-map="[
                                                employmentCalcTypeEnumId:employmentCalcTypeEnumId,
                                                fromPartyId:itm.fromPartyId,
                                                submitEmploymentTitle:submitEmploymentTitle,
                                                description:description,
                                                partyRelationshipIdMoavaqe:itm.partyRelationshipId,
                                                toPartyId:itm.toPartyId,
                                                emplPositionId:itm.emplPositionId,
                                                fromDate:itm.fromDate,
                                                overrideParams:overrideParams,
                                                allowedChangeParams:allowedChangeParams,
                                                latestFromDate:latestFromDate,
                                                submitDate:submitDate,
                                                shenaseHokmeKoli:shenaseHokmeKoli,
                                                thruDateForMoavaqeTerminate:itm.thruDate ? itm.thruDate:ec.user.nowTimestamp,
                                                latestMoavaqeThruDate:(itm_index==(effectedEmployments.size()-1)) ? itm.thruDate?itm.thruDate:null:null ,
                                                isLatestMoavaqe:(itm_index==(effectedEmployments.size()-1)) ? true:false ,
                                                isFinal:isFinal,
                                                isInnerCall:true,
                                                adjustmentEmploymentStatus:'P']" out-map="ressMava"/>
            </iterate>
        </actions>
    </service>
    <!--TODO: delete this--><service verb="submit" noun="DelayedEmploymentForAmaani" transaction-timeout="60000000">
    <in-parameters>
        <auto-parameters entity-name="mantle.party.PartyRelationship" include="nonpk"/>
        <auto-parameters entity-name="mantle.humanres.employment.Employment" include="nonpk"/>
        <parameter name="fromPartyId" />
        <parameter name="toPartyId" required="true"/>
        <parameter name="emplPositionId" />
        <parameter name="shenaseHokmeKoli" />
        <parameter name="isInnerCall" type="Boolean" />
        <parameter name="partyRelationshipIdMoavaqe" />
        <parameter name="latestMoavaqeThruDate" />
        <parameter name="isLatestMoavaqe" default="false" type="Boolean" />
        <parameter name="thruDateForMoavaqeTerminate" type="Timestamp" />
        <parameter name="employmentCalcTypeEnumId" required="true" />
        <parameter name="fromRoleTypeId" default-value="Employee"/>
        <parameter name="relationshipTypeEnumId" default-value="PrtEmployee"/>
        <parameter name="terminationTypeEnumId" default-value="TtSubmitEmpl"/>
        <parameter name="toRoleTypeId" default-value="OrgEmployer"/>
        <parameter name="fromDate" default="ec.user.nowTimestamp" type="Timestamp"/>
        <parameter name="maxDate" type="Timestamp"/>
        <parameter name="onlyChanged" />
    </in-parameters>
    <actions>
        <entity-find entity-name="mantle.humanres.employment.Employee" list="employees">
            <econdition field-name="statusId" from="'esActive'"/>
        </entity-find>
        <iterate list="employees" entry="itm">
            <entity-find-one entity-name="mantle.party.Person" value-field="pers">
                <field-map field-name="partyId" from="itm.partyId"/>
            </entity-find-one>
            <if condition="pers.PeymaniTypeStatusEnumId=='amanii'">
                <service-call name="mantle.humanres.EmploymentServices.submit#DelayedEmployment" in-map="context+[fromPartyId:itm.partyId]" out-map="dfc"/>
            </if>
        </iterate>
    </actions>
</service>

    <service verb="create" noun="EmploymentSalary">
        <description>Create an EmploymentSalary record, getting defaults and checking against min/max amounts on
            PayGrade record from EmplPosition for Employment.</description>
        <in-parameters>
            <parameter name="partyRelationshipId" required="true"/>
            <auto-parameters entity-name="mantle.humanres.employment.EmploymentSalary" include="nonpk"/>
            <parameter name="fromDate" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters><parameter name="fromDate"/></out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.humanres.employment.Employment" value-field="employment"/>
            <if condition="!timePeriodTypeId"><set field="timePeriodTypeId" from="employment.timePeriodTypeId"/></if>
            <if condition="!payGradeId">
                <entity-find-related-one value-field="employment" relationship-name="mantle.humanres.position.EmplPosition"
                                         to-value-field="emplPosition"/>
                <set field="payGradeId" from="emplPosition.payGradeId"/>
            </if>
            <if condition="payGradeId">
                <entity-find entity-name="mantle.humanres.rate.PayGradeSalaryStep" list="payGradeSalaryList">
                    <date-filter/>
                    <econdition field-name="payGradeId"/>
                    <econdition field-name="salaryStepSeqId"/>
                    <econdition field-name="timePeriodTypeId" ignore-if-empty="true"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <if condition="payGradeSalaryList">
                    <set field="payGradeSalary" from="payGradeSalaryList[0]"/>
                    <if condition="!timePeriodTypeId"><set field="timePeriodTypeId" from="payGradeSalary.timePeriodTypeId"/></if>
                    <if condition="!currencyUomId"><set field="currencyUomId" from="payGradeSalary.currencyUomId"/></if>
                    <if condition="!amount"><set field="amount" from="payGradeSalary.amount"/></if>
                    <if condition="payGradeSalary.minAmount &amp;&amp; amount &lt; payGradeSalary.minAmount">
                        <message>Warning: salary amount ${amount} is less than pay grade minimum amount (${payGradeSalary.minAmount})</message></if>
                    <if condition="payGradeSalary.maxAmount &amp;&amp; amount &gt; payGradeSalary.maxAmount">
                        <message>Warning: salary amount ${amount} is greater than pay grade maximum amount (${payGradeSalary.maxAmount})</message></if>
                </if>
            </if>

            <service-call name="create#mantle.humanres.employment.EmploymentSalary" in-map="context" out-map="context"/>
        </actions>
    </service>

    <service verb="get" noun="BusinessUnit">
        <in-parameters>
            <parameter name="partyId" default="ec.user.userAccount?.partyId" />
            <parameter name="organizationUnitPartyId" />
            <parameter name="requestId" />
            <parameter name="ownerPartyId" />
            <parameter name="facilityId" />
            <parameter name="businessDepartment" />
            <parameter name="isInnerCall" default="false" type="Boolean" />
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="businessUnitPartyId" />
            <parameter name="budgetUnitPartyId" />
            <parameter name="facilityId" />
            <parameter name="businessUnitParentPartyId" />
            <parameter name="unitTypePartyIdMap" type="Map" />
            <parameter name="businessUnitName" />
            <parameter name="orgUnitPartyId" />
        </out-parameters>
        <actions>
            <set field="businessUnitPartyId" from="null"/>
            <set field="unitTypePartyIdMap" from="[:]"/>
            <if condition="organizationUnitPartyId &amp;&amp;!businessDepartment">
                <entity-find-one entity-name="mantle.party.Organization" value-field="orgU2">
                    <field-map field-name="partyId" from="organizationUnitPartyId"/>
                </entity-find-one>
                <set field="businessDepartment" from="orgU2?.businessDepartment"/>
            </if>
            <if condition="!organizationUnitPartyId">
                <set field="fromPartyId" from="partyId"/>
                <set field="toPartyId" from="ownerPartyId"/>
                <!--TODO: add ownerPartyId filter here-->
                <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillmentAndPositionDetail" list="fulls">
                    <date-filter valid-date="date" />
                    <econdition field-name="partyId" from="fromPartyId"/>
                    <econdition field-name="ownerPartyId" from="ownerPartyId" ignore-if-empty="true"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <if condition="fulls.size()==0">
                    <message >هیچ انتصابی برای این شخص و پست وجود ندارد.
                        partyId:${fromPartyId}
                        ownerPartyId:${ownerPartyId}
                    </message>
                    <return/>
                </if>
                <set field="emplPositionId" from="fulls[0].emplPositionId"/>
                <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="pos"/>
                <entity-find-one entity-name="mantle.request.Request" value-field="req">
                    <field-map field-name="requestId" from="requestId"/>
                </entity-find-one>
                <set field="organizationUnitPartyId" from="pos.organizationUnitPartyId"/>
                <if condition="req?.requestTypeEnumId!='RqtProductTransfer'">
                    <set field="facilityId" from="pos.dutyFacilityId"/>
                </if>

                <entity-find-one entity-name="mantle.party.Organization" value-field="orgU">
                    <field-map field-name="partyId" from="pos.organizationUnitPartyId"/>
                </entity-find-one>
                <if condition="!orgU">
                    <message>pos.organizationUnitPartyId: ${pos.organizationUnitPartyId}
                        emplPositionId: ${emplPositionId}
                        not found unit
                    </message>
                    <return/>
                </if>

                <if condition="orgU?.businessDepartment=='Y'"><then>
                    <set field="businessUnitPartyId" from="orgU.partyId"/>
                    <set field="businessDepartment" from="orgU.businessDepartment"/>
                    <set field="businessUnitName" from="orgU.organizationName"/>
                    <set field="orgUnitPartyId" from="orgU.partyId"/>
                    <set field="businessUnitParentPartyId" from="null"/>
                    <entity-find entity-name="mantle.party.PartyFromAndToRelationship" list="outListUnit">
                        <date-filter/>
                        <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup" />
                        <econdition field-name="fromPartyId" from="businessUnitPartyId" />
                        <econdition field-name="fromRoleTypeId" value="OrgUnit"/>
                        <!--<econdition field-name="toRoleTypeId" value="OrgUnit" ignore-if-empty="true"/>-->
                    </entity-find>
                    <if condition="outListUnit.size()>0">
                        <set field="businessUnitParentPartyId" from="outListUnit[0].toPartyId"/>
                    </if>
                </then><else>
                    <set field="organizationUnitPartyId" from="orgU.partyId"/>
                </else></if>
            </if>
            <if condition="!organizationUnitPartyId">
                <message error="true">organizationUnitPartyId or partyId is required</message>
                <return/>
            </if>
            <if condition="!isInnerCall">
                <set field="orgUnitPartyId" from="organizationUnitPartyId"/>
            </if>
            <if condition="businessDepartment=='Y'"><then>
                <set field="businessUnitPartyId" from="organizationUnitPartyId"/>
                <entity-find-one entity-name="mantle.party.Organization" value-field="orgU">
                    <field-map field-name="partyId" from="organizationUnitPartyId"/>
                </entity-find-one>
                <set field="businessUnitName" from="orgU.organizationName"/>
                <set field="businessUnitParentPartyId" from="null"/>
                <entity-find entity-name="mantle.party.PartyFromAndToRelationship" list="outListUnit">
                    <date-filter/>
                    <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup" />
                    <econdition field-name="fromPartyId" from="businessUnitPartyId" />
                    <econdition field-name="fromRoleTypeId" value="OrgUnit"/>
                    <!--<econdition field-name="toRoleTypeId" value="OrgUnit" ignore-if-empty="true"/>-->
                </entity-find>
                <if condition="outListUnit.size()>0">
                    <set field="businessUnitParentPartyId" from="outListUnit[0].toPartyId"/>
                </if>
            </then><else>
                <entity-find entity-name="mantle.party.PartyRelationship" list="rels">
                    <date-filter/>
                    <econdition field-name="fromPartyId" from="organizationUnitPartyId"/>
                    <econdition field-name="relationshipTypeEnumId"  value="PrtOrgRollup"/>
                    <econdition field-name="fromRoleTypeId"  value="OrgUnit"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <if condition="rels.size()>0">
                    <service-call name="mantle.humanres.EmploymentServices.get#BusinessUnit"
                                  in-map="[isInnerCall:true,organizationUnitPartyId:rels[0].toPartyId,ownerPartyId:ownerPartyId,date:date,facilityId:facilityId]" out-map="context"/>
                </if>
            </else></if>
            <if condition="!isInnerCall &amp;&amp;(!businessUnitPartyId || businessUnitPartyId=='')">
                <!--                TODO: should do another eca on partyRelationship create .....chon aval partye vahed sazmani sakhtre mishe bad mire relationship misze [as badan orgunitbusiness peyda mishe -->
                <!--                <message error="true">هیچ واحد بازرگانی ای برای این شخص در چارت واحدهای سازمانی شناسایی نشد. partyId:${partyId} unitPartyId ${organizationUnitPartyId}</message>-->
                <!--                <return/>-->
            </if>
            <set field="unitType" value="_NA_"/>

            <if condition="businessUnitPartyId">
                <entity-find-one entity-name="mantle.party.Organization" value-field="lvlorg">
                    <field-map field-name="partyId" from="businessUnitPartyId"/>
                </entity-find-one>
                <set field="budgetUnitPartyId" from="lvlorg?.budgetUnitPartyId"/>
                <set field="unitType" from="lvlorg?.unitLevelEnumId"/>
                <script>if(!!unitType) unitTypePartyIdMap.put(unitType,businessUnitPartyId)</script>
                <set field="businessUnitParentPartyId" from="null"/>
                <entity-find entity-name="mantle.party.PartyFromAndToRelationship" list="outListUnit">
                    <date-filter/>
                    <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup" />
                    <econdition field-name="fromPartyId" from="businessUnitPartyId" />
                    <econdition field-name="fromRoleTypeId" value="OrgUnit"/>
                    <!--<econdition field-name="toRoleTypeId" value="OrgUnit" ignore-if-empty="true"/>-->
                </entity-find>
                <if condition="outListUnit.size()>0">
                    <set field="businessUnitParentPartyId" from="outListUnit[0].toPartyId"/>
                    <entity-find-one entity-name="mantle.party.Organization" value-field="lvlorg">
                        <field-map field-name="partyId" from="businessUnitParentPartyId"/>
                    </entity-find-one>
                    <set field="unitType" from="lvlorg?.unitLevelEnumId"/>
                    <script>if(!!unitType) unitTypePartyIdMap.put(unitType,businessUnitParentPartyId)</script>

                    <set field="businessUnitParentPartyId2" from="null"/>
                    <entity-find entity-name="mantle.party.PartyFromAndToRelationship" list="outListUnit2">
                        <date-filter/>
                        <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup" />
                        <econdition field-name="fromPartyId" from="businessUnitParentPartyId" />
                        <econdition field-name="fromRoleTypeId" value="OrgUnit"/>
                        <!--<econdition field-name="toRoleTypeId" value="OrgUnit" ignore-if-empty="true"/>-->
                    </entity-find>
                    <if condition="outListUnit2.size()>0">
                        <set field="businessUnitParentPartyId2" from="outListUnit2[0].toPartyId"/>
                        <entity-find-one entity-name="mantle.party.Organization" value-field="lvlorg">
                            <field-map field-name="partyId" from="businessUnitParentPartyId2"/>
                        </entity-find-one>
                        <set field="unitType" from="lvlorg?.unitLevelEnumId"/>
                        <script>if(!!unitType) unitTypePartyIdMap.put(unitType,businessUnitParentPartyId)</script>
                    </if>
                </if>
            </if>
        </actions>
    </service>
    <service verb="get" noun="BusinessUnitByOrg">
        <in-parameters>
            <parameter name="organizationUnitPartyId" required="true" />
            <parameter name="isInnerCall" default="false" type="Boolean" />
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="businessUnitPartyId" />
            <parameter name="businessUnitParentPartyId" />
            <parameter name="businessUnitName" />
            <parameter name="orgUnitPartyId" />
        </out-parameters>
        <actions>
            <set field="businessUnitPartyId" from="null"/>
            <entity-find-one entity-name="mantle.party.Organization" value-field="orgU2">
                <field-map field-name="partyId" from="organizationUnitPartyId"/>
            </entity-find-one>
            <set field="businessDepartment" from="orgU2?.businessDepartment"/>

            <if condition="!isInnerCall">
                <set field="orgUnitPartyId" from="organizationUnitPartyId"/>
            </if>
            <if condition="businessDepartment=='Y'"><then>
                <set field="businessUnitPartyId" from="organizationUnitPartyId"/>
                <entity-find-one entity-name="mantle.party.Organization" value-field="orgU">
                    <field-map field-name="partyId" from="organizationUnitPartyId"/>
                </entity-find-one>
                <set field="businessUnitName" from="orgU.organizationName"/>
                <set field="businessUnitParentPartyId" from="null"/>
                <entity-find entity-name="mantle.party.PartyFromAndToRelationship" list="outListUnit">
                    <date-filter/>
                    <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup" />
                    <econdition field-name="fromPartyId" from="businessUnitPartyId" />
                    <econdition field-name="fromRoleTypeId" value="OrgUnit"/>
                    <!--<econdition field-name="toRoleTypeId" value="OrgUnit" ignore-if-empty="true"/>-->
                </entity-find>
                <if condition="outListUnit.size()>0">
                    <set field="businessUnitParentPartyId" from="outListUnit[0].toPartyId"/>
                </if>
                <return/>
            </then><else>
                <entity-find entity-name="mantle.party.PartyRelationship" list="rels">
                    <date-filter/>
                    <econdition field-name="fromPartyId" from="organizationUnitPartyId"/>
                    <econdition field-name="relationshipTypeEnumId"  value="PrtOrgRollup"/>
                    <econdition field-name="fromRoleTypeId"  value="OrgUnit"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <if condition="rels.size()>0">
                    <service-call name="mantle.humanres.EmploymentServices.get#BusinessUnit"
                                  in-map="[isInnerCall:true,organizationUnitPartyId:rels[0].toPartyId,date:date]" out-map="context"/>
                </if>
            </else></if>
            <if condition="businessUnitPartyId">
                <set field="businessUnitParentPartyId" from="null"/>
                <entity-find entity-name="mantle.party.PartyFromAndToRelationship" list="outListUnit">
                    <date-filter/>
                    <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup" />
                    <econdition field-name="fromPartyId" from="businessUnitPartyId" />
                    <econdition field-name="fromRoleTypeId" value="OrgUnit"/>
                    <!--<econdition field-name="toRoleTypeId" value="OrgUnit" ignore-if-empty="true"/>-->
                </entity-find>
                <if condition="outListUnit.size()>0">
                    <set field="businessUnitParentPartyId" from="outListUnit[0].toPartyId"/>
                </if>
            </if>
        </actions>
    </service>

    <service verb="get" noun="ActiveFullfilment">
        <in-parameters>
            <parameter name="partyId" default="ec.user.userAccount?.partyId" />
            <parameter name="ownerPartyId" />
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="emplPositionId" />
            <parameter name="emplPositionMp" />
        </out-parameters>
        <actions>
            <set field="fromPartyId" from="partyId"/>
            <set field="toPartyId" from="ownerPartyId"/>
            <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillmentAndPositionDetail" list="fulls">
                <date-filter valid-date="date" />
                <econdition field-name="partyId" from="fromPartyId"/>
<!--                <econdition field-name="noeEntesabEnumId" from="''"/>-->
                <econdition field-name="ownerPartyId" from="ownerPartyId" ignore-if-empty="true"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="fulls.size()==0">
                <message >هیچ انتصابی برای این شخص و پست وجود ندارد.
                    partyId:${fromPartyId}
                    ownerPartyId:${ownerPartyId}
                    date:${date}
                </message>
                <return/>
            </if>
            <set field="emplPositionId" from="fulls[0].emplPositionId"/>
            <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="emplPositionMp"/>
        </actions>
    </service>

    <service verb="getApplicable" noun="hrParameter">
        <description>
            find the applicable hrParameters for a employment(partyRelationshipId)
            also you should pass the date ...because the hrParameterAppl entity is historical
        </description>
        <in-parameters>
            <parameter name="partyRelationshipId" />
            <parameter name="fromPartyId" />
            <parameter name="toPartyId" />
            <parameter name="emplPositionId" />
            <parameter name="employmentCalcTypeEnumId" />
            <parameter name="isWageAdjustment" />
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="applHrParameters" type="List"/>
            <parameter name="notAppliedHrParameters" type="List"/>
        </out-parameters>
        <actions>
            <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="context+[isFinal:['Y','N']]" out-map="context"/>
            <!--            <set field="emplPositionId" from="employment.emplPositionId ?employment.emplPositionId: emplPositionId"/>-->
            <set field="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>
            <set field="partyRelationshipId" from="employment ?employment.partyRelationshipId: partyRelationshipId"/>
            <set field="fromPartyId" from="employment ?employment.fromPartyId: fromPartyId"/>
            <set field="toPartyId" from="employment ?employment.toPartyId: toPartyId"/>
            <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="empPos">
                <field-map field-name="emplPositionId" from="emplPositionId"/>
            </entity-find-one>
            <set field="parameterTypeEnumId" from="['PersonnelPrt']"/>
            <if condition="isWageAdjustment">
                <set field="parameterTypeEnumId" from="['WagePrt']"/>
            </if>
            <set field="otherEngineParams" from="[]"/>
            <if condition="employmentCalcTypeEnumId">
                <entity-find entity-name="mantle.humanres.ability.HrParameter" list="otherEngineParams" distinct="true">
                    <econdition field-name="employmentCalcTypeEnumId" operator="not-equals" from="employmentCalcTypeEnumId"/>
                    <econdition field-name="employmentCalcTypeEnumId" operator="is-not-null"/>
                </entity-find>
            </if>
            <entity-find entity-name="mantle.humanres.ability.HrParameterApplAndHrParameter" list="distictApplHrParameterIds" distinct="true">
                <date-filter valid-date="date"/>
                <date-filter valid-date="date" from-field-name="paramFromDate" thru-field-name="paramThruDate"/>
                <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId" />
                <econditions combine="or">
                    <econdition field-name="employeePartyId" from="fromPartyId"  ignore-if-empty="true"/>
                    <econdition field-name="emplPositionId" from="emplPositionId"  ignore-if-empty="true"/>
                    <econdition field-name="employmentCalcTypeEnumId" from="employmentCalcTypeEnumId"  ignore-if-empty="true" or-null="true"/>
                    <econdition field-name="isForAll" from="'Y'"  ignore-if-empty="true"/>
                    <econdition field-name="emplPositionClassId" from="empPos?.emplPositionClassId"  ignore-if-empty="true"/>
                </econditions>
                <select-field field-name="parameterId"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="applHrParameters">
                <econdition field-name="parameterId" from="((distictApplHrParameterIds*.parameterId)-(otherEngineParams*.parameterId))"  />
            </entity-find>
            <entity-find entity-name="mantle.humanres.ability.HrParameterAndHrParameterAppl" list="distictNotAppliedHrParameterIds" distinct="true">
                <date-filter valid-date="date"/>
                <date-filter valid-date="date" from-field-name="paramFromDate" thru-field-name="paramThruDate"/>
                <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId" />
                <econditions combine="or">
                    <econditions combine="and">
                        <econdition field-name="employeePartyId" operator="not-equals" from="fromPartyId" ignore-if-empty="true"/>
                        <econdition field-name="emplPositionId" operator="not-equals" from="emplPositionId" ignore-if-empty="true"/>
                        <econdition field-name="isForAll" operator="equals" from="'N'"/>
                        <econdition field-name="emplPositionClassId" operator="not-equals" from="empPos?.emplPositionClassId" ignore-if-empty="true"/>
                    </econditions>
                    <econditions combine="and">
                        <econdition field-name="employeePartyId" operator="is-null"/>
                        <econdition field-name="emplPositionId" operator="is-null"/>
                        <econdition field-name="isForAll" operator="is-null"/>
                        <econdition field-name="emplPositionClassId" operator="is-null"/>
                    </econditions>
                </econditions>
                <select-field field-name="parameterId"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="notAppliedHrParameters">
                <econdition field-name="parameterId" operator="in" from="distictNotAppliedHrParameterIds*.parameterId" />
            </entity-find>
        </actions>
    </service>

    <!--Employee adjustment services-->
    <service verb="calculate" noun="Adjustment" type="interface">
        <in-parameters>
            <parameter name="employeePartyId" required="true"/>
            <parameter name="mainOrgPartyId" required="true"/>
            <parameter name="emplPositionId" />
            <parameter name="attTimePeriodId" />
            <parameter name="partyRelationshipId" />
            <parameter name="partyRelationshipIdMoavaqe" />
            <parameter name="employmentCalcTypeEnumId" />
            <parameter name="allowedChangeParams" type="List" />
            <parameter name="payType" />
            <parameter name="moavaqeFlat" type="Map" />
            <parameter name="overrideParams" type="List" />
            <parameter name="shift" />
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
            <parameter name="isWageAdjustment" />
            <parameter name="timePeriodId" />
            <parameter name="isInnerCall" />
            <parameter name="totalDays" type="Integer" />
            <parameter name="attendance" type="Map" />
            <parameter name="hrParameter" type="Map" />
            <parameter name="shift" type="Map"/>
            <parameter name="partyDetail" type="Map">
                <parametr name="partyId"/>
                <parametr name="firstName"/>
                <parametr name="middleName"/>
                <parametr name="lastName"/>
                <parametr name="ownerPartyId"/>
                <parametr name="gender"/>
                <parametr name="birthPlace"/>
                <parametr name="birthDate"/>
                <parametr name="maritalStatusEnumId"/>
                <parametr name="enFirstName"/>
                <parametr name="enLastName"/>
                <parametr name="partyTypeEnumId"/>
                <parametr name="height"/>
                <parametr name="weight"/>
                <parametr name="disabled"/>
                <parametr name="startSanavat"/>
                <parametr name="PeymaniTypeStatusEnumId"/>
            </parameter>
            <parameter name="employment" type="Map">
                <parametr name="emplPositionId"/>
                <parametr name="partyRelationshipId"/>
                <parametr name="relationshipTypeEnumId"/>
                <parametr name="relationshipName"/>
                <parametr name="fromPartyId"/>
                <parametr name="fromRoleTypeId"/>
                <parametr name="toPartyId"/>
                <parametr name="toRoleTypeId"/>
                <parametr name="fromDate"/>
                <parametr name="thruDate"/>
                <parametr name="terminationReasonEnumId"/>
                <parametr name="terminationTypeEnumId"/>
                <parametr name="timePeriodTypeId"/>
                <parametr name="taxWorkContactMechId"/>
                <parametr name="comments"/>
                <parametr name="taxStateAllowances"/>
                <parametr name="taxFormId"/>
                <parametr name="identityTypeEnumId"/>
                <parametr name="statusId"/>
                <parametr name="emplAuthzTypeEnumId"/>
                <parametr name="taxFederalAllowances"/>
                <parametr name="taxClassificationEnumId"/>
            </parameter>
            <parameter name="employee" type="Map">
                <parametr name="taxName"/>
                <parametr name="taxNameSuffix"/>
                <parametr name="taxLastName"/>
                <parametr name="taxBusinessName"/>
                <parametr name="taxStateStatusEnumId"/>
                <parametr name="taxClassificationEnumId"/>
                <parametr name="taxFederalAllowances"/>
                <parametr name="taxYtdPriorIncome"/>
                <parametr name="taxHomeContactMechId"/>
                <parametr name="taxExemptPayeeCode"/>
                <parametr name="taxAccountNumbers"/>
                <parametr name="taxExemptFatcaCode"/>
                <parametr name="taxFederalStatusEnumId"/>
                <parametr name="distGroupEnumId"/>
                <parametr name="taxStateAllowances"/>
                <parametr name="taxFormId"/>
                <parametr name="lastUpdatedStamp"/>
            </parameter>
            <parameter name="emplPosition" type="Map">
                <parametr name="emplPositionId" />
                <parametr name="description" />
                <parametr name="emplPositionClassId" />
                <parametr name="organizationUnitPartyId" />
                <parametr name="payGradeId" />
                <parametr name="salaryFlag" />
                <parametr name="ownerPartyId" />
                <parametr name="taxFormId" />
                <parametr name="fromDate" />
                <parametr name="thruDate" />
                <parametr name="estimatedFromDate" />
                <parametr name="estimatedThruDate" />
                <parametr name="fullTimeFlag" />
                <parametr name="temporaryFlag" />
                <parametr name="overtimeFlag" />
                <parametr name="standardHoursPerWeek" />
                <parametr name="budgetItemSeqId" />
                <parametr name="taxExemptEnumId" />
                <!--                <parametr name="budgetId" />-->
                <parametr name="statusId" />
                <parametr name="supervision" />
                <parametr name="cellphoneCredit" />
                <parametr name="peakBar" />
                <parametr name="overTimeReward" />
            </parameter>
            <parameter name="parameterId"><description>Only populated if called from a parameter</description></parameter>
            <parameter name="PerformanceCycle" type="Map">
                <description>Only populated if called from a performance Cycle</description>
                <parametr name="performanceCycleName"/>
                <parametr name="employeePartyId"/>
                <parametr name="performanceCycleId"/>
                <parametr name="description"/>
                <parametr name="latestPoint"/>
                <parametr name="PerformanceCycleType"/>
                <parametr name="performanceCycleEmployeeId"/>
                <parametr name="ownerPartyId"/>
                <parametr name="fromDate"/>
                <parametr name="thruDate"/>
            </parameter>
            <parameter name="description"><description>If configured for service will be set, may expand in context (up to service to decide)</description></parameter>
            <parameter name="prevResult" type="Map"/>
            <parameter name="prevResultStr" type="Map"/>
        </in-parameters>
        <out-parameters>
            <parameter name="res" required="true" type="String"/>
            <parameter name="paramLog" />
            <parameter name="partyRelationshipIdMoavaqe" />
            <parameter name="paramResult" type="Map"/>
            <parameter name="paramResultStr" type="Map"/>
            <parameter name="completeRes" type="List"/>
        </out-parameters>
    </service>
    <service verb="get" noun="Adjustment">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <message>${attTimePeriodId}-----------------------------------------------------------------------mmmmm</message>
            <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                <field-map field-name="partyId" from="employeePartyId"/>
            </entity-find-one>
            <if condition="!partyDetail">
                <message error="true">could't find any Party with partyId: ${employeePartyId}</message>
            </if>
            <entity-find-one entity-name="mantle.humanres.employment.Employee" value-field="employee">
                <field-map field-name="partyId" from="employeePartyId"/>
            </entity-find-one>
            <if condition="!employee">
                <message error="true">could't find any Employee with partyId: ${employeePartyId}</message>
            </if>
            <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="[partyRelationshipId:partyRelationshipId,fromPartyId:employeePartyId,toPartyId:mainOrgPartyId]" out-map="context"/>
            <if condition="!employment">
                <message>could't find any Employment with fromPartyId: ${employeePartyId} and toPartyId: ${mainOrgPartyId}</message>
            </if>
            <if condition="!emplPositionId">
                <service-call name="hrService.get#ActiveFullfilmentByParty"
                              in-map="[partyId:employeePartyId,validDate:date,noeEntesabEnumId:'netnAsli']" out-map="resOut5"/>
                <set field="emplPositionId" from="resOut5?.fulfillment?.emplPositionId"/>
                <if condition="!emplPositionId">
                    <message >
                        در تاریخ انتخابی هیچ انتصاب فعالی شناسایی نشد.
                        partyId: ${employeePartyId}
                    </message>
                    <return/>
                </if>
            </if>
            <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="emplPosition">
                <field-map field-name="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>
            </entity-find-one>
            <set field="emplPosition" from="emplPosition.getValueMap()"/>
            <!--            <entity-find-one entity-name="mantle.humanres.employment.PerformanceCycleEmployeewithDetail" value-field="performanceCycleDetail">-->
            <!--                <field-map field-name="employeePartyId" from="employeePartyId"/>-->
            <!--            </entity-find-one>-->
            <set field="prevResultParameterTypeEnumId" from="['TO_NOT_FOUND']"/>
            <set field="parameterTypeEnumId" from="['PersonnelPrt']"/>
            <if condition="isWageAdjustment">
                <set field="prevResultParameterTypeEnumId" from="['PersonnelPrt']"/>
                <set field="parameterTypeEnumId" from="['WagePrt']"/>
            </if>
            <service-call name="mantle.humanres.TimeServices.get#shift" in-map="[partyId:employeePartyId,ownerPartyId:mainOrgPartyId]" out-map="context"/>
            <!--filtere zir faqat moqeE ke mikhad huquq hesab beshe mqedare parametr haye hokmio peyda mikone...moqeye sudure hok hamishe bayad khali bashe-->
            <entity-find entity-name="mantle.humanres.ability.HrParameterResultAndParam" list="prevResults" cache="true">
                <econdition field-name="partyRelationshipId" from="employment.partyRelationshipId"/>
                <econdition field-name="parameterTypeEnumId" operator="in" from="prevResultParameterTypeEnumId"/>
                <order-by field-name="sequenceNum"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.ability.HrParameterApplAndHrParameter" list="noFormulaHrParameterList" distinct="true" >
                <econditions combine="and">
                    <econditions combine="or">
                        <econditions combine="and">
                            <econdition field-name="functionConfirm" operator="not-in" from="'Y'"/>
                          <date-filter valid-date="date" />
                          <date-filter valid-date="date" from-field-name="paramFromDate" thru-field-name="paramThruDate"/>
                        </econditions>
                        <econditions combine="and">
                            <econdition field-name="timePeriodId" from="attTimePeriodId" />
                            <econdition field-name="functionConfirm" from="'Y'"/>
                        </econditions>
                    </econditions>

                    <econditions combine="or">
                        <econdition field-name="ownerPartyId" from="mainOrgPartyId" />
                        <econdition field-name="ownerPartyId" from="'_NA_'" or-null="true"/>
                    </econditions>
                    <econditions combine="or">
                        <econditions combine="and">
                            <econdition field-name="calculateTypeEnumId" from="'noformul'" />
                            <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId"/>
                        </econditions>
                        <econditions combine="and">
                            <econdition field-name="point" operator="is-not-null" />
                            <econdition field-name="isOverride" from="'Y'" />
                            <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId"/>
                        </econditions>
                    </econditions>
                    <econditions combine="or">
                        <econdition field-name="employeePartyId" from="employeePartyId" />
                        <econdition field-name="emplPositionId" from="emplPosition.emplPositionId" />
                        <econdition field-name="emplPositionClassId" from="emplPosition.emplPositionClassId" />
                        <econdition field-name="isForAll" from="'Y'" />
                    </econditions>
                    <econdition field-name="employmentCalcTypeEnumId" operator="equals" from="employmentCalcTypeEnumId" or-null="true" ignore-if-empty="true"/>
                </econditions>
                <order-by field-name="sequenceNum"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <set field="notAllowedParams" from="[]"/>
            <message>allowedChangeParams__________${allowedChangeParams}</message>
            <if condition="!!partyRelationshipIdMoavaqe &amp;&amp;!!allowedChangeParams&amp;&amp;allowedChangeParams.size()&gt;0">
                <!--faqat ejaze midim parametr haE ke avaz shode tuye moavaqat ham avaz beshe-->
                <entity-find entity-name="mantle.humanres.ability.HrParameterApplAndHrParameter" list="notAllowedParams" distinct="true" >
                    <econditions combine="and">
                        <econdition field-name="parameterSystematicName" operator="not-in" from="allowedChangeParams" />
                        <econditions combine="or">
                            <econditions combine="and">
                                <econdition field-name="functionConfirm" operator="not-in" from="'Y'"/>
                                <date-filter valid-date="date" />
                                <date-filter valid-date="date" from-field-name="paramFromDate" thru-field-name="paramThruDate"/>
                            </econditions>
                            <econditions combine="and">
                                <econdition field-name="timePeriodId" from="attTimePeriodId" />
                                <econdition field-name="functionConfirm" from="'Y'"/>
                            </econditions>
                        </econditions>
                        <econditions combine="or">
                            <econdition field-name="ownerPartyId" from="mainOrgPartyId" />
                            <econdition field-name="ownerPartyId" from="'_NA_'" or-null="true"/>
                        </econditions>
                        <econditions combine="or">
                            <econditions combine="and">
                                <econdition field-name="calculateTypeEnumId" from="'noformul'" />
                                <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId"/>
                            </econditions>
                            <econditions combine="and">
                                <econdition field-name="point" operator="is-not-null" />
                                <econdition field-name="isOverride" from="'Y'" />
                                <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId"/>
                            </econditions>
                        </econditions>
                        <econditions combine="or">
                            <econdition field-name="employeePartyId" from="employeePartyId" />
                            <econdition field-name="emplPositionId" from="emplPosition.emplPositionId" />
                            <econdition field-name="emplPositionClassId" from="emplPosition.emplPositionClassId" />
                            <econdition field-name="isForAll" from="'Y'" />
                        </econditions>
                        <econdition field-name="employmentCalcTypeEnumId" operator="equals" from="employmentCalcTypeEnumId" or-null="true" ignore-if-empty="true"/>
                    </econditions>
                    <order-by field-name="sequenceNum"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
            </if>
            <if condition="payType=='pytDelayed'">
                <entity-find entity-name="mantle.humanres.ability.HrParameter" list="noFormulaListForDelayed" distinct="true" >
                    <econditions combine="or">
                        <econditions combine="and">
                            <econdition field-name="functionConfirm" operator="not-in" from="'Y'"/>
                            <date-filter valid-date="date" />
                        </econditions>
                        <econditions combine="and">
                            <econdition field-name="timePeriodId" from="attTimePeriodId" />
                            <econdition field-name="functionConfirm" from="'Y'"/>
                        </econditions>
                    </econditions>
                    <econdition field-name="calculateTypeEnumId" from="'noformul'" />
                    <econdition field-name="notHaveDelayedPay" from="'Y'" />
                    <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId"/>
                    <econdition field-name="employmentCalcTypeEnumId" operator="equals" from="employmentCalcTypeEnumId" or-null="true" ignore-if-empty="true"/>
                    <order-by field-name="sequenceNum"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
            </if>
            <entity-find entity-name="mantle.humanres.ability.HrParameterApplAndHrParameter" list="hrParameterListFormula" distinct="true">
                <date-filter valid-date="date" />
                <date-filter valid-date="date" from-field-name="paramFromDate" thru-field-name="paramThruDate"/>
                <econditions combine="and">
                    <econditions combine="or">
                        <econdition field-name="ownerPartyId" from="mainOrgPartyId" />
                        <econdition field-name="ownerPartyId" from="'_NA_'" or-null="true"/>
                    </econditions>
                    <econdition field-name="calculateTypeEnumId" from="'formula'" />
                    <econdition field-name="parameterTypeEnumId" operator="in" from="parameterTypeEnumId"/>
                    <econditions combine="or">
                        <econdition field-name="employeePartyId" from="employeePartyId" />
                        <econdition field-name="emplPositionId" from="emplPosition.emplPositionId" />
                        <econdition field-name="emplPositionClassId" from="emplPosition.emplPositionClassId" />
                        <econdition field-name="isForAll" from="'Y'" />
                    </econditions>
                    <econdition field-name="employmentCalcTypeEnumId" operator="equals" from="employmentCalcTypeEnumId" or-null="true" ignore-if-empty="true"/>
                </econditions>
                <order-by field-name="sequenceNum"/>
                <order-by field-name="-fromDate,-timestamp"/>
                <!--<select-field field-name="expressionCode,parameterId,parameterTypeEnumId,parameterSystematicName,wageType,isEmployerPaid,title"/>-->
            </entity-find>
            <set field="paramResult" from="[:]"/>
            <set field="paramResultStr" from="[:]"/>
            <set field="completeRes" from="[]"/>
            <set field="calcAdjParameters" from="[date:date,shift:shift,timePeriodId:timePeriodId,
                                                    attendance:attendance,
                                                    totalDays:totalDays,
                                                    payType:payType,
                                                    moavaqeFlat:moavaqeFlat,
                                                    employeePartyId:employeePartyId,mainOrgPartyId:mainOrgPartyId,
                                                    partyDetail:partyDetail,employee:employee,employment:employment,
                                                    emplPosition:emplPosition,emplPositionId:emplPositionId,partyId:employeePartyId,
                                                    organizationPartyId:mainOrgPartyId]"/>
            <set field="parmMap" from="[prevResult:[:],prevResultStr:[:]]"/>
            <set field="overrideParamsRes" from="[]"/>
            <iterate list="overrideParams" entry="ovrItm">
                <if condition="!ovrItm.parameterId"><continue/></if>
                <entity-find-one entity-name="mantle.humanres.ability.HrParameter" value-field="ovrPrm">
                    <field-map field-name="parameterId" from="ovrItm.parameterId"/></entity-find-one>
                <script>overrideParamsRes.add(ovrPrm.getValueMap()+[point:Double.valueOf(ovrItm.overridePoint?:0)])</script>
            </iterate>
            <!--<iterate list="notAllowedParams" entry="ovrItm">
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="prevMoavRes" limit="1">
                    <econdition field-name="payDate" operator="is-null"/>
                    <econdition field-name="employmentPayHistoryId" operator="is-null" />
                    <econdition field-name="parameterSystematicName" from="ovrItm.parameterSystematicName"/>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipIdMoavaqe"/>
                </entity-find>
                <if condition="!!prevMoavRes &amp;&amp;prevMoavRes.size()&gt;0"><then>
                    <script>overrideParamsRes.add(prevMoavRes[0].getValueMap())</script>
                </then><else>
                    <entity-find entity-name="mantle.humanres.ability.HrParameter" list="ovrPrmLst">
                        <econdition field-name="parameterSystematicName" from="ovrItm.parameterSystematicName"/></entity-find>
                    <if condition="!!ovrPrmLst&amp;&amp;ovrPrmLst.size()&gt;0">
                        <script>overrideParamsRes.add(ovrPrmLst[0].getValueMap()+[point:0])</script>
                    </if>
                </else></if>
            </iterate>-->
            <if condition="!!isInnerCall">
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="prevMoavRes" >
                    <econdition field-name="payDate" operator="is-null"/>
                    <econdition field-name="employmentPayHistoryId" operator="is-null" />
                    <econdition field-name="parameterSystematicName" operator="in" from="['raqamSabet','maskanHazine','kharobar']"/>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipIdMoavaqe"/>
                </entity-find>
                <iterate list="prevMoavRes" entry="rtm">
                    <script>overrideParamsRes.add(rtm.getValueMap())</script>
                </iterate>

                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="prevMoavRes22" >
                    <econdition field-name="payDate" operator="is-null"/>
                    <econdition field-name="employmentPayHistoryId" operator="is-null" />
                    <econdition field-name="parameterSystematicName" operator="in" from="['raqamSabet']"/>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipIdMoavaqe"/>
                </entity-find>
                <entity-find entity-name="mantle.humanres.ability.HrParameter" list="prevMoavResShit" >
                    <econdition field-name="parameterSystematicName" operator="in" from="['raqamSabet']"/>
                </entity-find>
                <if condition="prevMoavRes22.size()==0||!!prevMoavRes22">
                    <script>overrideParamsRes.add(prevMoavResShit[0].getValueMap()+[point:0])</script>
                </if>
            </if>
            <set field="paramLog" from="''" />
            <script><![CDATA[
                for (prevRes in prevResults) {
                    try {
                        parmMap.prevResult.put(prevRes.parameterSystematicName,Double.valueOf(prevRes.point))
                        parmMap.prevResultStr.put(prevRes.parameterSystematicName,String.format("%.2f", Double.valueOf(prevRes.point)))
                        completeRes.add([showInPayHistory:prevRes.showInPayHistory,showInEmployment:prevRes.showInEmployment,isInsurance:prevRes.isInsurance,isTaxable:prevRes.isTaxable,parameterId:prevRes.parameterId,parameterTypeEnumId:prevRes.parameterTypeEnumId,parameterSystematicName:prevRes.parameterSystematicName,wageType:prevRes.wageType,isEmployerPaid:prevRes.isEmployerPaid,title:prevRes.title,point:Double.valueOf(prevRes.point),pointStr:String.format("%.2f", Double.valueOf(prevRes.point)),t_pointStr:String.format("%.2f", Double.valueOf(prevRes.point))])
                      } catch (Exception e) {
                        parmMap.prevResult.put(prevRes.parameterSystematicName,prevRes.point.toString())
                        parmMap.prevResultStr.put(prevRes.parameterSystematicName,prevRes.point.toString())
                        completeRes.add([showInPayHistory:prevRes.showInPayHistory,showInEmployment:prevRes.showInEmployment,isInsurance:prevRes.isInsurance,isTaxable:prevRes.isTaxable,parameterId:prevRes.parameterId,parameterTypeEnumId:prevRes.parameterTypeEnumId,parameterSystematicName:prevRes.parameterSystematicName,wageType:prevRes.wageType,isEmployerPaid:prevRes.isEmployerPaid,title:prevRes.title,pointStr:prevRes.point.toString(),t_pointStr:ec.l10n.localize(prevRes.point)])
                      }
                    logger.info(prevRes.parameterSystematicName.toString()+' '+prevRes.title+' : '+prevRes.point + ' Pre Calculated Param')
                    paramLog+='\n'+prevRes.parameterSystematicName.toString()+' '+prevRes.title+' : '+prevRes.point + ' Pre Calculated Param'
                }
                for (prevRes in overrideParamsRes) {
                    if(completeRes.findIndexOf{it.parameterId == prevRes.parameterId}!=-1){
                            continue;
                    }
                    try {
                        parmMap.prevResult.put(prevRes.parameterSystematicName,Double.valueOf(prevRes.point))
                        parmMap.prevResultStr.put(prevRes.parameterSystematicName,String.format("%.2f", Double.valueOf(prevRes.point)))
                        completeRes.add([showInPayHistory:prevRes.showInPayHistory,showInEmployment:prevRes.showInEmployment,isInsurance:prevRes.isInsurance,isTaxable:prevRes.isTaxable,parameterId:prevRes.parameterId,parameterTypeEnumId:prevRes.parameterTypeEnumId,parameterSystematicName:prevRes.parameterSystematicName,wageType:prevRes.wageType,isEmployerPaid:prevRes.isEmployerPaid,title:prevRes.title,point:Double.valueOf(prevRes.point),pointStr:String.format("%.2f", Double.valueOf(prevRes.point)),t_pointStr:String.format("%.2f", Double.valueOf(prevRes.point))])
                      } catch (Exception e) {
                        parmMap.prevResult.put(prevRes.parameterSystematicName,prevRes.point.toString())
                        parmMap.prevResultStr.put(prevRes.parameterSystematicName,prevRes.point.toString())
                        completeRes.add([showInPayHistory:prevRes.showInPayHistory,showInEmployment:prevRes.showInEmployment,isInsurance:prevRes.isInsurance,isTaxable:prevRes.isTaxable,parameterId:prevRes.parameterId,parameterTypeEnumId:prevRes.parameterTypeEnumId,parameterSystematicName:prevRes.parameterSystematicName,wageType:prevRes.wageType,isEmployerPaid:prevRes.isEmployerPaid,title:prevRes.title,pointStr:prevRes.point.toString(),t_pointStr:ec.l10n.localize(prevRes.point)])
                      }
                    logger.info(prevRes.parameterSystematicName.toString()+' '+prevRes.title+' : '+prevRes.point + ' Manual Override Param')
                    paramLog+='\n'+prevRes.parameterSystematicName.toString()+' '+prevRes.title+' : '+prevRes.point + ' Manual Override Param'
                }
                if(payType=='pytDelayed'){
                    for (noFormulaHrParameterDELY in noFormulaListForDelayed) {
                          if(completeRes.findIndexOf{it.parameterId == noFormulaHrParameterDELY.parameterId}!=-1){
                            continue;
                          }
                            parmMap.prevResult.put(noFormulaHrParameterDELY.parameterSystematicName,Double.valueOf(moavaqeFlat[noFormulaHrParameterDELY.parameterSystematicName]?:0))
                            parmMap.prevResultStr.put(noFormulaHrParameterDELY.parameterSystematicName,String.format("%.2f", Double.valueOf(moavaqeFlat[noFormulaHrParameterDELY.parameterSystematicName]?:0)))
                            completeRes.add([parameterId:noFormulaHrParameterDELY.parameterId,showInEmployment:noFormulaHrParameterDELY.showInEmployment,isInsurance:noFormulaHrParameterDELY.isInsurance,isTaxable:noFormulaHrParameterDELY.isTaxable,parameterTypeEnumId:noFormulaHrParameterDELY.parameterTypeEnumId,parameterSystematicName:noFormulaHrParameterDELY.parameterSystematicName,wageType:noFormulaHrParameterDELY.wageType,isEmployerPaid:noFormulaHrParameterDELY.isEmployerPaid,title:noFormulaHrParameterDELY.title,point:Double.valueOf(moavaqeFlat[noFormulaHrParameterDELY.parameterSystematicName]?:0),pointStr:String.format("%.2f", Double.valueOf(moavaqeFlat[noFormulaHrParameterDELY.parameterSystematicName]?:0)),t_pointStr:String.format("%.2f", Double.valueOf(moavaqeFlat[noFormulaHrParameterDELY.parameterSystematicName]?:0))])
                          logger.info(noFormulaHrParameterDELY.parameterSystematicName.toString() +' '+noFormulaHrParameterDELY.title+' : '+(moavaqeFlat[noFormulaHrParameterDELY.parameterSystematicName]?:0).toString() + ' No Formula Param DELAYED')
                          paramLog+='\n'+noFormulaHrParameterDELY.parameterSystematicName.toString() +' '+noFormulaHrParameterDELY.title+' : '+(moavaqeFlat[noFormulaHrParameterDELY.parameterSystematicName]?:0).toString() + ' No Formula Param DELAYED'
                    }
                }
                for (noFormulaHrParameter in noFormulaHrParameterList) {
                      if(completeRes.findIndexOf{it.parameterId == noFormulaHrParameter.parameterId}!=-1){
                        continue;
                      }
                      if(!noFormulaHrParameter.point || noFormulaHrParameter.point==null){
                            ec.message.addError('پارامتر مقدار خالی برگشت داده است: '+noFormulaHrParameter.title +' '+noFormulaHrParameter.parameterSystematicName+' NoFormula PARAM')
                            ec.message.addError('partyId: '+employee.partyId)
                            ec.message.addError('employmentCalcTypeEnumId: '+employmentCalcTypeEnumId)
                            ec.message.addError('\n'+paramLog)
                            return;
                      }
                      try {
                        parmMap.prevResult.put(noFormulaHrParameter.parameterSystematicName,Double.valueOf(noFormulaHrParameter.point))
                        parmMap.prevResultStr.put(noFormulaHrParameter.parameterSystematicName,String.format("%.2f", Double.valueOf(noFormulaHrParameter.point)))
                        completeRes.add([parameterId:noFormulaHrParameter.parameterId,showInEmployment:noFormulaHrParameter.showInEmployment,isInsurance:noFormulaHrParameter.isInsurance,isTaxable:noFormulaHrParameter.isTaxable,parameterTypeEnumId:noFormulaHrParameter.parameterTypeEnumId,parameterSystematicName:noFormulaHrParameter.parameterSystematicName,wageType:noFormulaHrParameter.wageType,isEmployerPaid:noFormulaHrParameter.isEmployerPaid,title:noFormulaHrParameter.title,point:Double.valueOf(noFormulaHrParameter.point),pointStr:String.format("%.2f", Double.valueOf(noFormulaHrParameter.point)),t_pointStr:String.format("%.2f", Double.valueOf(noFormulaHrParameter.point))])
                      } catch (Exception e) {
                        parmMap.prevResult.put(noFormulaHrParameter.parameterSystematicName,noFormulaHrParameter.point.toString())
                        parmMap.prevResultStr.put(noFormulaHrParameter.parameterSystematicName,noFormulaHrParameter.point.toString())
                        completeRes.add([parameterId:noFormulaHrParameter.parameterId,showInEmployment:noFormulaHrParameter.showInEmployment,isInsurance:noFormulaHrParameter.isInsurance,isTaxable:noFormulaHrParameter.isTaxable,parameterTypeEnumId:noFormulaHrParameter.parameterTypeEnumId,parameterSystematicName:noFormulaHrParameter.parameterSystematicName,wageType:noFormulaHrParameter.wageType,isEmployerPaid:noFormulaHrParameter.isEmployerPaid,title:noFormulaHrParameter.title,pointStr:noFormulaHrParameter.point.toString(),t_pointStr:ec.l10n.localize(noFormulaHrParameter.point)])
                      }
                      logger.info(noFormulaHrParameter.parameterSystematicName.toString() +' '+noFormulaHrParameter.title+' : '+noFormulaHrParameter.point.toString() + ' No Formula Param')
                      paramLog+='\n'+noFormulaHrParameter.parameterSystematicName.toString() +' '+noFormulaHrParameter.title+' : '+noFormulaHrParameter.point.toString() + ' No Formula Param'
                }
                for (hrParameter in hrParameterListFormula) {
                      if(completeRes.findIndexOf{it.parameterId == hrParameter.parameterId}!=-1){
                        continue;
                      }
                    parmMap = calcAdjParameters+parmMap
                    def result;
                    def resultStr;
                    if(hrParameter.expressionCode){
                        try {
                            result = ec.getResource().expand('${'+hrParameter.expressionCode+'}','')
                        } catch (Throwable t) {
                            ec.message.addError(hrParameter.title +' '+hrParameter.parameterSystematicName+' EXPRESSION PARAM')
                            ec.message.addError(t.getMessage())
                            ec.message.addError(t.getCause().getMessage())
                            ec.message.addError('\n'+paramLog)
                            return;
                        }
                        if(result==null){
                            ec.message.addError('پارامتر مقدار خالی برگشت داده است: '+hrParameter.title +' '+hrParameter.parameterSystematicName+' EXPRESSION PARAM')
                            ec.message.addError('partyId: '+employee.partyId)
                            ec.message.addError('employmentCalcTypeEnumId: '+employmentCalcTypeEnumId)
                            ec.message.addError('\n'+paramLog)
                            return;
                        }
                    }else if(hrParameter.serviceAddress){
                        result = ec.service.sync().name(hrParameter.serviceAddress).parameters(parmMap+[hrParameter:hrParameter]).disableAuthz().call().res
                        if (ec.message.hasError()){
                            ec.message.addError(hrParameter.title +' '+hrParameter.parameterSystematicName+' SERVICE PARAM \n')
                            ec.message.addError('\n'+paramLog)
                            return;
                        }
                    }
                    def isOnlyStr = false;
                    if(result==null){
                        ec.message.addError('پارامتر مقدار خالی برگشت داده است: '+hrParameter.title +' '+hrParameter.parameterSystematicName+' SERVICE PARAM')
                        ec.message.addError('partyId: '+employee.partyId)
                        ec.message.addError('employmentCalcTypeEnumId: '+employmentCalcTypeEnumId)
                        ec.message.addError('\n'+paramLog)
                        return;
                    }
                    logger.info(hrParameter.parameterSystematicName+' '+hrParameter.title+' : '+result+' Formula Param')
                    paramLog+='\n'+hrParameter.parameterSystematicName+' '+hrParameter.title+' : '+result+' Formula Param'
                    if(hrParameter.outputType!="String"){
                      try {
                        result = Double.valueOf(result)
                        resultStr = String.format("%.2f", result)
                      } catch (Exception e) {
                        isOnlyStr=true;
                        result = result.toString()
                        resultStr = result
                      }
                    }
                    parmMap.prevResult.put(hrParameter.parameterSystematicName,result)
                    parmMap.prevResultStr.put(hrParameter.parameterSystematicName,resultStr)
                    completeRes.add([parameterId:hrParameter.parameterId,showInEmployment:hrParameter.showInEmployment,isInsurance:hrParameter.isInsurance,isTaxable:hrParameter.isTaxable,parameterTypeEnumId:hrParameter.parameterTypeEnumId,parameterSystematicName:hrParameter.parameterSystematicName,wageType:hrParameter.wageType,isEmployerPaid:hrParameter.isEmployerPaid,title:hrParameter.title,point:!isOnlyStr ? result: null,pointStr:resultStr,t_pointStr:ec.l10n.localize(resultStr)])
                }
                paramResult = parmMap.prevResult
                paramResultStr = parmMap.prevResultStr
                ]]></script>
        </actions>
    </service>

    <!--    custom formulas-->
    <service verb="calculate" noun="numberOfChildesAdj">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>

            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="childManual">
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')" />
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="parameterId" value="41Manual"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="childManual.size()!=0"><then>
                <set field="res" from="childManual[0].point"/>
            </then><else>
                <entity-find entity-name="mantle.humanres.employment.PartyToAndRelationshipAndKefal" list="entityValueList">
                    <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')" from-field-name="fromDateKefal" thru-field-name="thruDateKefal"/>
                    <econdition field-name="fromPartyId" from="employeePartyId"/>
                    <econdition field-name="relationshipTypeEnumId" value="dpndRole"/>
                    <econdition field-name="dependant" value="تکفل حق اولاد"/>
                    <econdition field-name="toRoleTypeId" operator="in" value="rltvChild,rltvChildGRl,rltvByy"/>
                </entity-find>
                <set field="numberOfChildren" from="entityValueList.size()"/>
                <set field="res" from="numberOfChildren?numberOfChildren:0"/>
                <!--TODO:MITRA bara hame round bezar-->
                <set field="res" from="Math.round(res)"/>
            </else></if>
        </actions>
    </service>
    <!--<service verb="calculate" noun="sanavatKharejSazman">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="sanavatKharejSazman" from="0"/>
            <entity-find entity-name="mantle.humanres.employment.PartyToAndRelationshipAndExternalSeverancePay" list="findRes">
                <econdition field-name="relationshipTypeEnumId" value="externalOrgRelation"/>
                <econdition field-name="fromPartyId" from="employeePartyId"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')" from-field-name="fromDatePoint" thru-field-name="thruDatePoint"/>
            </entity-find>
            <iterate list="findRes" entry="itm">
                <set field="sanavatKharejSazman" from="sanavatKharejSazman+(itm.point?:0)"/>
            </iterate>
            <set field="res" from="sanavatKharejSazman?:0"/>
        </actions>
    </service>-->

    <service verb="calculate" noun="cnvPosition">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="title" from="'-'"/>
            <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillmentAndPositionDetail" list="fullFlist">
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:59'),'yyyy-MM-dd HH:mm:ss')" />
                <econdition field-name="partyId" from="employeePartyId"/>
                <econdition field-name="positionFulfillmentTypeEnumId"  from="'psfFsdlvds'" />
                <order-by field-name="-fromDate"/>
            </entity-find>
            <if condition="fullFlist[0]">
                <set field="title" from="'سرپرست' + fullFlist[0].title"/>
            </if>
            <set field="res" from="title"/>
        </actions>
    </service>
    <service verb="calculate" noun="sanavatNezamVazife">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="zaribRiali" from="prevResult.zaribRiali?:0"/>
            <set field="sanavatNezamVazifeEmtiaz" from="0"/>
            <set field="sanavatNezamVazife" from="0"/>
            <entity-find entity-name="mantle.humanres.additional.MilitaryInfo" list="milIn">
                <econdition field-name="partyId" from="employeePartyId"/>
                <!--                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')" from-field-name="fromDatePoint" thru-field-name="thruDatePoint"/>-->
            </entity-find>
            <iterate list="milIn" entry="itm">
                <set field="sanavatNezamVazifeEmtiaz" from="itm.amount"/>
            </iterate>
            <set field="sanavatNezamVazife" from="(sanavatNezamVazifeEmtiaz*30)/1346" />
            <set field="res" from="sanavatNezamVazife?:0"/>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>
    <service verb="calculate" noun="sanavatTatbiq">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="zaribRiali" from="prevResult.zaribRiali?:0"/>
            <set field="sanavatTatbiqEmtiaz" from="0"/>
            <set field="sanavatTatbiq" from="0"/>
            <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillmentConvert" list="epfc">
                <econdition field-name="partyId" from="employeePartyId"/>
                <econdition field-name="expSanavat" operator="is-not-null" />
            </entity-find>

            <iterate list="epfc" entry="itm">
                <set field="sanavatTatbiqEmtiaz" from="itm.expSanavat?:0"/>
                <set field="sanavatTatbiq" from="sanavatTatbiq + sanavatTatbiqEmtiaz"/>
            </iterate>
            <!--            <set field="sanavatTatbiq" from="(sanavatTatbiq*30)/1346" />-->
            <set field="sanavatTatbiq" from="(sanavatTatbiq)" />
            <set field="res" from="sanavatTatbiq?:0"/>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>
    <!--TODO:Mitra check later-->
    <service noun="isargarikhas" verb="calculate">
<!--        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>-->
<!--        <actions>-->
<!--            <set field="tafavotEmtMadrak" from="0"/>-->
<!--            <set field="isargarikhas" from="0"/>-->
<!--            <set field="koleEmtisr" from="0"/>-->
<!--            <set field="emtiazIsargari" from="prevResult?.emtiazIsargari?.toInteger()?:0"/>-->
<!--            <set field="HoqoqMabna" from="prevResult?.HoqoqMabnaTemp?.toInteger()?:0"/>-->
<!--            <entity-find entity-name="mantle.humanres.additional.FrontInfo" list="findRes">-->
<!--                <econdition field-name="partyId" from="employeePartyId"/>-->
<!--                <order-by field-name="-fromDate,-timestamp"/>-->
<!--            </entity-find>-->

<!--            &lt;!&ndash;  <if condition="findRes[0]?.sacrificeTypeEnumId=='ptSacWarrior'&amp;&amp;findRes[0]?.frontMonthTime.toInteger()&lt;6">-->
<!--                  <return/>-->
<!--              </if>&ndash;&gt;-->
<!--            <entity-find entity-name="mantle.humanres.ability.PartyQualification" list="qulDEtail">-->
<!--                <econdition field-name="partyId" from="employeePartyId"/>-->
<!--                <order-by field-name="-fromDate,-timestamp"/>-->
<!--            </entity-find>-->
<!--            <if condition="qulDEtail[0]">-->
<!--                <set field="madrakTahsiliId" from="qulDEtail[0].pcltEducation"/>-->
<!--                <set field="madrakTahsiliVaqeiId" from="qulDEtail[0].pcltEducationActual"/>-->
<!--            </if>-->
<!--            <if condition="madrakTahsiliId != madrakTahsiliVaqeiId &amp;&amp; emtiazIsargari !=0">-->
<!--                <entity-find entity-name="mantle.humanres.paramCalc.educationPoint" list="eduP">-->
<!--                    <econdition field-name="pcltEducation" from="madrakTahsiliId"/>-->
<!--                    <order-by field-name="-fromDate,-timestamp"/>-->
<!--                </entity-find>-->
<!--                <entity-find entity-name="mantle.humanres.paramCalc.educationPoint" list="eduPAct">-->
<!--                    <econdition field-name="pcltEducation" from="madrakTahsiliVaqeiId"/>-->
<!--                    &lt;!&ndash;                    <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>&ndash;&gt;-->
<!--                    <order-by field-name="-fromDate,-timestamp"/>-->
<!--                </entity-find>-->
<!--                <set field="edPointt" from="0"/>-->
<!--                <set field="eedPoint" from="0"/>-->

<!--                <script>-->
<!--                    edPointt=eduP[0].edPoint.toInteger();-->
<!--                    eedPoint=eduPAct[0].edPoint.toInteger();-->
<!--                </script>-->

<!--                <set field="tafavotEmtMadrak" from="edPointt - eedPoint"/>-->
<!--                <set field="koleemtisr" from="tafavotEmtMadrak+emtiazIsargari" />-->
<!--                <set field="koleemtisr" from="koleemtisr*prevResult.zaribRiali" />-->
<!--                <set field="HoqoqMabnaemt" from="HoqoqMabna* 0.036"/>-->
<!--                <set field="isargarikhas" from="HoqoqMabnaemt - koleemtisr"/>-->
<!--            </if>-->

<!--            <set field="res" from="isargarikhas?:0"/>-->
<!--            <if condition="res &lt;0">-->
<!--                <set field="res" from="0"/>-->
<!--            </if>-->
<!--            <set field="res" from="Math.round(res)"/>-->
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="tafavotEmtMadrak" from="0"/>
            <set field="isargarikhas" from="0"/>
            <set field="koleEmtisr" from="0"/>
            <set field="zaribRiali" from="prevResult.zaribRiali?:0"/>
            <set field="emtiazIsargari" from="prevResult?.emtiazIsargari?.toInteger()?:0"/>
            <set field="HoqoqMabna" from="prevResult?.HoqoqMabnaTemp?.toInteger()?:0"/>
            <entity-find entity-name="mantle.humanres.additional.FrontInfo" list="findRes">
                <econdition field-name="sacrificeTypeEnumId" operator="not-equals" value="ptSacAshooraGordan"/>
                <econdition field-name="partyId" from="employeePartyId"/>
                <order-by field-name="-fromDate"/>
            </entity-find>

            <if condition="findRes[0]">

                <entity-find entity-name="mantle.humanres.ability.PartyQualification" list="qulDEtail">
                    <econdition field-name="partyId" from="employeePartyId"/>
                    <order-by field-name="-fromDate"/>
                </entity-find>
                <if condition="qulDEtail[0]">
                    <set field="madrakTahsiliId" from="qulDEtail[0].pcltEducation"/>
                    <set field="madrakTahsiliVaqeiId" from="qulDEtail[0].pcltEducationActual"/>
                </if>
                <if condition="madrakTahsiliId == madrakTahsiliVaqeiId &amp;&amp; emtiazIsargari &gt; 250">
                    <entity-find entity-name="mantle.humanres.paramCalc.educationPoint" list="eduP">
                        <econdition field-name="pcltEducation" from="madrakTahsiliId"/>
                        <order-by field-name="-fromDate"/>
                    </entity-find>
                    <entity-find entity-name="mantle.humanres.paramCalc.educationPoint" list="eduPAct">
                        <econdition field-name="pcltEducation" from="madrakTahsiliVaqeiId"/>
                        <!--                    <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>-->
                        <order-by field-name="-fromDate"/>
                    </entity-find>
                    <set field="edPointt" from="0"/>
                    <set field="eedPoint" from="0"/>


                    <script>
                        edPointt=eduP[0].edPoint.toInteger();
                    </script>
                    <set field="eedPoint" from="(edPointt?:0)+500"/>


                    <set field="koleemtisr" from="emtiazIsargari" />
                    <set field="koleemtisr" from="koleemtisr*prevResult.zaribRiali" />
                    <set field="HoqoqMabnaemt" from="HoqoqMabna* 0.036"/>
                    <set field="isargarikhas" from="HoqoqMabnaemt - koleemtisr"/>
                    <set field="isargarikhas" from="(isargarikhas?:0)/zaribRiali"/>
                </if>
            </if>
            <set field="res" from="isargarikhas?:0"/>
            <if condition="res &lt;0">
                <set field="res" from="0"/>
            </if>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>


    <service verb="calculate" noun="madrakTahsili">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <service-call name="hrService.get#partyQualification" in-map="context+[partyId:employeePartyId]" out-map="context"/>
            <set field="res" from="qual?.eduDescription ? qual?.eduDescription : '_NA_'"/>
        </actions>
    </service>

    <service verb="calculate" noun="reshteTahsili">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <service-call name="hrService.get#partyQualification" in-map="context+[partyId:employeePartyId]" out-map="context"/>
            <set field="res" from="qual?.branchDescription ? qual?.branchDescription : '_NA_'"/>
        </actions>
    </service>

    <service verb="calculate" noun="emtiazMadrakTahsili">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emtiazMadrakTahsili" from="0"/>
            <script><![CDATA[
                def madrakTahsili = prevResult.madrakTahsili;
                def reshteTahsili = prevResult.reshteTahsili;
                def darajehNiazMadrak = prevResult.darajehNiazMadrak;]]></script>
            <set field="zaribRiali" from="prevResult.zaribRiali?:0"/>
            <if condition="!prevResult.verificationStatusM || prevResult.verificationStatusM==null">
                <service-call name="hrService.get#partyQualification" in-map="context+[partyId:employeePartyId]" out-map="context"/>
                <set field="verificationStatusId" from="qual?.verificationStatusId"/>
                <else>
                    <set field="verificationStatusId" from="prevResult.verificationStatusM?:0"/>
                </else>
            </if>
            <set field="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>
            <service-call name="hrService.get#partyQualification" in-map="context+[partyId:employeePartyId]" out-map="context"/>
<!--            <set field="verificationStatusId" from="qual?.verificationStatusId"/>-->
            <if condition="verificationStatusId == 'notMatchWPosition'"><then>
                <set field="EmplPositionClassGroupId" from="emplPosition.EmplPositionClassGroupId"/>
                <entity-find entity-name="mantle.humanres.position.partyClassCode" list="PBE" limit="1">
                    <econdition field-name="EmplPositionClassGroupId" from="EmplPositionClassGroupId"/>
                    <order-by field-name="standardCode" />
                </entity-find>
                <if condition="PBE.size()==0">
                    <message>position ${emplPosition.emplPositionId} __ </message>
                    <message>not found in partyClassCode partyId ${employeePartyId} __ EmplPositionClassGroupId____ ${EmplPositionClassGroupId}</message>
                </if>
                <set field="pcltEducation" from="PBE[0]?.qualifications" />
            </then><else>
                <if condition="qual">
                    <set field="pcltEducation" from="qual.pcltEducation"/>
                    <set field="verificationStatusId" from="verificationStatusId?:0"/>
                </if>
            </else></if>
            <entity-find entity-name="mantle.humanres.paramCalc.educationPoint" list="eduP">
                <econdition field-name="pcltEducation" from="pcltEducation"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="eduP[0]">
                <set field="emtiazMadrakTahsili" from="eduP[0].edPoint"/>
            </if>
            <if condition="verificationStatusId == 'QlVerNotVerified' || verificationStatusId == 'غیر مرتبط' || verificationStatusId == null" >
                <set field="emtiazMadrakTahsili" from="(emtiazMadrakTahsili - 250)" />
            </if>
            <set field="res" from="emtiazMadrakTahsili "/>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>
    <service noun="verificationStatusM" verb="calculate">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <service-call name="hrService.get#educationPointIdentification" in-map="[partyId:employeePartyId,validDate:date]" out-map="context"/>
            <if condition="!!verificationStatusId">
                <set field="res" from="verificationStatusId"/>
                <message>${res}what___what___what</message>
                <else>
                    <service-call name="hrService.get#partyQualification" in-map="context+[partyId:employeePartyId]" out-map="context"/>
                    <set field="res" from="qual?.verificationStatusId"/>
                    <message>${res}what222___what222___what222</message>
                </else>
            </if>
            <if condition="res == 'QlVerVerified'" ><set field="res" from="'مرتبط'"/> </if>
            <if condition="res == 'QlVerNotVerified'" ><set field="res" from="'غیر مرتبط'"/> </if>
            <set field="res" from="res?:'مرتبط'"/>
        </actions>
    </service>
    <service verb="calculate" noun="emtiazDowreAmoozeshi">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emtiazDowreAmoozeshi" from="0"/>
            <set field="emtiazDowreAmoozeshiInnerOnJob" from="0"/>
            <set field="emtiazDowreAmoozeshiInnerBasic" from="0"/>
            <set field="emtiazDowreAmoozeshiInnerAdvanced" from="0"/>
            <set field="wholeBefore" from="0"/>
            <entity-find entity-name="mantle.humanres.ability.PersonTraining" list="findRes">
                <date-filter valid-date="date"/>
                <econdition field-name="partyId" from="employeePartyId"/>
                <econdition field-name="trainingApproved" from="'Y'"/>
            </entity-find>
            <iterate list="findRes" entry="itm">
                <set field="emtiazDowreAmoozeshiInner" from="itm.point?:0" />
                <script>
                    emtiazDowreAmoozeshiInner=(emtiazDowreAmoozeshiInner?:0).toInteger();
                </script>
                <if condition="(itm.trainingClassTypeEnumId =='TrctOnJobA') || (itm.trainingClassTypeEnumId =='TrctOnJob')"><then>
                    <set field="emtiazDowreAmoozeshiInnerOnJob" from="(emtiazDowreAmoozeshiInnerOnJob?:0)+((emtiazDowreAmoozeshiInner?:0)/2)" />
                </then><else-if condition="(itm.trainingClassTypeEnumId =='TrctBasicA') || (itm.trainingClassTypeEnumId =='TrctBasic') ">
                    <set field="emtiazDowreAmoozeshiInnerBasic" from="(emtiazDowreAmoozeshiInnerBasic?:0)+(emtiazDowreAmoozeshiInner?:0)" />
                </else-if>
                    <else-if condition="(itm.trainingClassTypeEnumId =='TrctAdvancedA') || (itm.trainingClassTypeEnumId =='TrctAdvanced')">
                        <set field="emtiazDowreAmoozeshiInnerAdvanced" from="(emtiazDowreAmoozeshiInnerAdvanced?:0)+(emtiazDowreAmoozeshiInner?:0)" />
                    </else-if>
                    <else-if condition="(itm.trainingClassTypeEnumId =='wholeBefore')">
                        <set field="wholeBefore" from="(emtiazDowreAmoozeshiInner?:0)" />
                    </else-if>
                </if>
            </iterate>
            <if condition="emtiazDowreAmoozeshiInnerOnJob &gt; 30">
                <set field="emtiazDowreAmoozeshiInnerOnJob" from="30"/>
            </if>
            <if condition="emtiazDowreAmoozeshiInnerBasic &gt; 420 ">
                <set field="emtiazDowreAmoozeshiInnerBasic" from="420"/>
            </if>
            <if condition="emtiazDowreAmoozeshiInnerAdvanced &gt; 1100">
                <set field="emtiazDowreAmoozeshiInnerAdvanced" from="1100"/>
            </if>
            <set field="emtiazDowreAmoozeshi" from="(emtiazDowreAmoozeshiInnerOnJob?:0)+(emtiazDowreAmoozeshiInnerBasic?:0)+(emtiazDowreAmoozeshiInnerAdvanced?:0)+(wholeBefore?:0)"/>
            <if condition="emtiazDowreAmoozeshi &gt; 1580" >
                <set field="emtiazDowreAmoozeshi" from="1580" />
            </if>

            <set field="res" from="emtiazDowreAmoozeshi?emtiazDowreAmoozeshi:0"/>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>
    <!--TODO:Mitra in bayad eca beshe ke sohbat kardim-->
    <service verb="calculate" noun="GpFormula">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="gpAPP">
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="parameterId" from="'20'"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
            </entity-find>
            <if condition="!gpAPP[0]">
                <entity-find-one entity-name="mantle.party.Person" value-field="pIs"><field-map field-name="partyId" from="employeePartyId"/></entity-find-one>
                <set field="isPeymankar" from="pIs.PeymaniTypeStatusEnumId"/>
                <if condition="isPeymankar=='amanii'"><then>
                    <service-call name="hrService.calc#hrGroup" in-map="[partyId:employeePartyId,tatbiqDate:date]" out-map="Group"/>
                    <set field="hrGroup" from="Group.hrGroup"/>
                </then>
                    <else>
                        <service-call name="hrService.calc#hrGroupForContractor" in-map="[partyId:employeePartyId,tatbiqDate:date]" out-map="GroupC"/>
                        <set field="hrGroup" from="GroupC.hrGroup"/>
                    </else></if>
                <message error="true">
                    شناسه: ${employeePartyId}
                    گروه: ${hrGroup}
                    لطفا به منو تخصیص پارامتر ها مراجعه کرده و گروه${hrGroup} را به شخص مشخص شده تخصیص دهید. </message>
            </if>
            <set field="res" from="hrGroup?:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="emtiazTarfi">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emtiazTarfi" from="0"/>
            <set field="percent" from="0"/>
            <set field="natijeArzyabiAmalkard" from="prevResult.natijeArzyabiAmalkard?:0"/>
            <set field="GpEstehqaqi" from="prevResult.GpEstehqaqi?:0"/>
            <set field="zaribRiali" from="prevResult.zaribRiali?:0"/>

            <script><![CDATA[

                if(natijeArzyabiAmalkard >= 95 ){
                    percent = 1.1;
                }else if (natijeArzyabiAmalkard < 95 ){
                    percent = 1;
                }]]></script>
            <entity-find entity-name="mantle.humanres.paramCalc.jobExperiencePoint" list="expPoint">
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
                <econdition field-name="gpNumbre" from="GpEstehqaqi"/>
            </entity-find>
            <if condition="expPoint[0]" >
                <set field="emtTarfi" from="((expPoint[0].Max)*30)/zaribRiali"/>
                <set field="emtiazTarfi" from="(emtTarfi?:0)*percent" />
            </if>

            <set field="res" from="emtiazTarfi?emtiazTarfi:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="emtiazGpEstehqaqi">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set   field="emtiazGpEstehqaqi" from="0" />
            <set   field="GpEstehqaqi" from="0" />
            <set   field="manateqJangZade" from="0" />

            <script><![CDATA[
                     GpEstehqaqi = prevResult.GpEstehqaqi
                     manateqJangZade = prevResult.manateqJangZade?:0
                     ;]]></script>
            <entity-find entity-name="mantle.humanres.rate.PayGrade" list="payGrade">
                <econdition field-name="gpNumbre" from="GpEstehqaqi"/>
            </entity-find>
            <set field="payGradeId" from="payGrade[0].payGradeId"/>
            <entity-find entity-name="mantle.humanres.paramCalc.jobPoint" list="jbPoint">
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
                <econdition field-name="payGradeId" from="payGradeId"/>
            </entity-find>
            <if condition="jbPoint[0]">
                <set field="emtiazGpEstehqaqi" from="jbPoint[0].jbPoint"/>
            </if>
            <set field="res" from="(emtiazGpEstehqaqi?:0)+(manateqJangZade?:0)"/>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>
    <service noun="emtiazSakhtiKar" verb="calculate" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emtiazSakhtiKar" from="0" />
<!--            <set field="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>-->
            <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillment" list="ffr">
                <econdition field-name="partyId" from="employeePartyId" />
                <econdition field-name="noeEntesabEnumId" from="'netnAsli'" />
                <econdition field-name="positionFulfillmentTypeEnumId" from="'psflUsual'" />
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="ffr[0]">
                <set field="emplPositionId" from="ffr[0].emplPositionId"/>

            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="ApplRI">
                <econdition field-name="emplPositionId" from="emplPositionId"/>
                <econdition field-name="parameterId" from="'posClassGroupHistory'"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.position.EmplPositionAndPositionClassAndWork" list="emplList">
                <econdition field-name="emplPositionId" from="emplPositionId"/>
            </entity-find>
            <if condition="!ApplRI[0]">
            <set field="EmplPositionClassGroupId" from="emplList[0].EmplPositionClassGroupId"/>
                <else>
                    <set field="EmplPositionClassGroupId" from="ApplRI[0].point"/>
                </else>
            </if>
            <set field="hardWork" from="emplList[0].hardWork?:0"/>
            <entity-find entity-name="mantle.humanres.position.EmplPositionClassGroup" list="epcg">
                <econdition field-name="EmplPositionClassGroupId" from="EmplPositionClassGroupId" />
            </entity-find>
            <if condition="hardWork == 1">
                <set field="emtiazSakhtiKar" from="epcg[0].specialPointHardWorkPoint?:0" />
                <else>
                    <set field="emtiazSakhtiKar" from="epcg[0].hardWorkPoint?:0"/>
                </else>
            </if>
            </if>
            <set field="res" from="emtiazSakhtiKar?emtiazSakhtiKar:0"/>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>
    <service verb="calculate" noun="zarayebMantaqe">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emplPositionId" from="emplPositionId"/>
            <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="emplList">
                <field-map field-name="emplPositionId" from="emplPositionId"/>
            </entity-find-one>
            <set field="facilityId" from="emplList.dutyFacilityId"/>

            <entity-find entity-name="mantle.humanres.position.facilityRatio" list="fRatioList">
                <econdition field-name="dutyFacilityId" from="facilityId"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')" from-field-name="fromDate" thru-field-name="thruDate"/>
            </entity-find>
            <message>${fRatioList[0]}llllllllllllllllllllllllllllllllllkkkklllklkkkkll</message>
            <if condition="fRatioList[0]">
               <set field="zarayebMantaqe"  from="fRatioList[0].ratio"/>
            <else>
            <entity-find-one entity-name="mantle.facility.Facility" value-field="facilityList">
                <field-map field-name="facilityId" from="facilityId"/>
            </entity-find-one>
            <set field="zarayebMantaqe" from="facilityList?.facilityRatio"/>
            </else>
            </if>
            <set field="res" from="zarayebMantaqe?zarayebMantaqe:0"/>
        </actions>
    </service>

    <service verb="calculate" noun="emtiazIsargari">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="zaribRiali" from="prevResult.zaribRiali?:0"/>
            <set field="emtiazIsargari" from="0"/>
            <entity-find entity-name="mantle.humanres.additional.FrontInfo" list="findRes">
                <econdition field-name="partyId" from="employeePartyId"/>
            </entity-find>
            <iterate list="findRes" entry="itm">
                <set field="point" from="itm.point?:0"/>
                <if condition="point">
                    <script>
                        point = itm.point.toInteger();
                    </script>
                    <set field="emtiazIsargari" from="emtiazIsargari+point"/>
                </if>
            </iterate>
            <set field="emtiazIsargari" from="emtiazIsargari" />
            <set field="res" from="emtiazIsargari"/>
        </actions>
    </service>
    <service verb="calculate" noun="darsadJazb">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>
            <entity-find entity-name="mantle.humanres.position.EmplPositionAndPositionClassAndWork" list="emplList">
                <econdition field-name="emplPositionId" from="emplPositionId"/>
            </entity-find>
            <set field="workTypeEnumId" from="emplList[0]?.workTypeEnumId"/>
            <entity-find entity-name="moqui.basic.Enumeration" list="enumListRes">
                <econdition field-name="enumId" from="workTypeEnumId"/>
            </entity-find>
            <set field="noeShoql" from="enumListRes[0]?.enumId"/>
            <set field="darsadJazb" from="0"/>
            <set field="jameEmtiaz" from="0"/>
            <set field="emtiazSabeqeTajrobe" from="0"/>
            <set field="bakhshShoghli" from="prevResult.bakhshShoqliShakhs"/>
            <set field="natijeArzyabiAmalkard" from="prevResult.natijeArzyabiAmalkard?:0"/>
            <set field="jazbDasti" from="prevResult.jazbDasti"/>
            <if condition="jazbDasti">
                <set field="darsadJazb" from="jazbDasti"/>
                <set field="res" from="jazbDasti"/>
                <return/>
            </if><else>

            <!--get actual madrak tahsili not madrake moaser dar emtiaz -->
            <entity-find entity-name="mantle.humanres.ability.PartyQualification" list="qulDEtail">
                <econdition field-name="partyId" from="employeePartyId"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="qulDEtail[0]">
                <set field="madrakTahsiliActual" from="qulDEtail[0].pcltEducationActual"/>
            </if>
            <set field="madrakTahsiliActual" from="madrakTahsiliActual ? madrakTahsiliActual : '_NA_'"/>
            <script><![CDATA[
                 emtiazSabeqeTajrobe = prevResult.emtiazSabeqeTajrobe;
                 madrakTahsili = madrakTahsiliActual;
                ]]></script>

            <entity-find entity-name="mantle.humanres.paramCalc.capabilityPercent" list="cpbPer">
                <econdition field-name="positionGroupClass" from="bakhshShoghli"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="cpbPer[0]">
                <if condition="cpbPer[0].isCalc == 'Y'">
                    <if condition="madrakTahsiliActual == 'pcBch'" ><then>
                        <set field="jameEmtiaz" from="cpbPer[0].BPoint"/></then>
                        <else-if condition="madrakTahsiliActual=='pcMtr'">
                            <set field="jameEmtiaz" from="cpbPer[0].MAPoint"/>
                        </else-if>
                        <else-if condition="madrakTahsiliActual=='pcPhd'">
                            <set field="jameEmtiaz" from="cpbPer[0].PHDPoint"/>
                        </else-if>
                        <else-if condition="madrakTahsiliActual=='pcPphd'">
                            <set field="jameEmtiaz" from="cpbPer[0].PHDsPoint"/>
                        </else-if>
                    </if>
                    <entity-find entity-name="mantle.humanres.paramCalc.workTypePoints" list="wtPoint">
                        <econdition field-name="workTypeEnumId" from="noeShoql"/>
                        <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                        <order-by field-name="-fromDate,-timestamp"/>
                    </entity-find>
                    <if condition="wtPoint[0]">
                        <set field="darsadJazb" from="wtPoint[0].capabilityPoint"/>
                    </if>
                    <set field="darsadJazb" from="darsadJazb+jameEmtiaz"/>
                    <if condition="natijeArzyabiAmalkard &lt; 89" >
                        <set field="darsadJazb" from="darsadJazb +(natijeArzyabiAmalkard*160/100)"/>
                        <else>
                            <set field="darsadJazb" from="darsadJazb + 160"/>
                        </else>
                    </if>
                    <else>
                        <set field="darsadJazb" from="cpbPer[0].maxCapability"/>
                    </else>
                </if>
                <set field="darsadJazb" from="darsadJazb+emtiazSabeqeTajrobe"/>
            </if></else>
            <set field="res" from="darsadJazb"/>
        </actions>
    </service>

    <service verb="calculate" noun="vaziatTahol">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find-one entity-name="mantle.party.Person" value-field="maritalS">
                <field-map field-name="partyId" from="employeePartyId"/>
            </entity-find-one>
            <set field="vaziatTahol" from="maritalS.maritalStatusEnumId"/>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="mp">
                <field-map field-name="enumId" from="maritalS.maritalStatusEnumId"/>
            </entity-find-one>
            <set field="vaziatTahol" from="mp?.description"/>
            <set field="res" from="vaziatTahol?vaziatTahol:'_NA_'"/>
        </actions>
    </service>


    <!--    <service verb="calculate" noun="emtiazMadrakTahsili">-->
    <!--        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>-->
    <!--        <actions>-->
    <!--            <set field="noeQarardad" from="prevResult.noeQarardad?:0"/>-->
    <!--            <set field="emtiazMadrakTahsili" from="0"/>-->

    <!--           <if condition="noeQarardad == 'qeyewHajmiRecord'">-->
    <!--               <service-call name="hrService.get#partyQualification" in-map="context+[partyId:employeePartyId]" out-map="context"/>-->
    <!--               <set field="pcltEducation" from="qual.pcltEducation"/>-->
    <!--               <entity-find entity-name="mantle.humanres.paramCalc.educationPoint" list="eduP">-->
    <!--                   <econdition field-name="pcltEducation" from="pcltEducation"/>-->
    <!--                   <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>-->
    <!--                   <order-by field-name="-fromDate,-timestamp"/>-->
    <!--               </entity-find>-->
    <!--            <set field="verificationStatusId" from="'QlVerNotVerified'"/>-->
    <!--            <if condition="verificationStatusId == 'QlVerNotVerified'" >-->
    <!--                <set field="emtiazMadrakTahsili" from="(eduP[0].emtiazMadrakTahsili) - 250" />-->
    <!--            </if>-->
    <!--           </if>-->
    <!--            <set field="res" from="emtiazMadrakTahsili"/>-->
    <!--            <set field="res" from="Math.round(res)"/>-->
    <!--        </actions>-->
    <!--    </service>-->


    <service noun="onCallPeymankar" verb="calculate">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="onCallPeymankar" from="0" />
            <set field="ezafeKarKeifi" from="0" />
            <set field="rateAmount" from="0" />
            <script><![CDATA[
                 ezafeKarKeifi = attendance.ezafeKarKeifi?:0;
                 ]]></script>
            <entity-find entity-name="mantle.humanres.rate.RateAmount" list="rateAmountList">
                <econdition field-name="parameterId" from="'89652'"/>
                <econdition field-name="rateTypeEnumId" from="'OnCallRates'"/>
                <date-filter/>
            </entity-find>
            <set field="rateAmount" from="rateAmountList[0].rateAmount" />
            <set field="onCallPeymankar" from="(rateAmount?:0)*ezafeKarKeifi" />
            <set field="res" from="onCallPeymankar?:0"/>
        </actions>
    </service>

    <service noun="mandeMorakhasi" verb="calculate" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="mandeMorakhasi" from="0" />
            <entity-find-one entity-name="mantle.humanres.employment.leaveBalanceTracking" value-field="lbTrach">
                <field-map field-name="partyId" from="employeePartyId"/>
                <date-filter/>
            </entity-find-one>
            <if condition="lbTrach">
                <set field="mandeMorakhasi" from="lbTrach.periodAmount" />
            </if>
            <set field="res" from="mandeMorakhasi?:0"/>
        </actions>
    </service>
    <!-- TODO: mitra:mission Formulas 1.set max and min for peymankar mission
                                    2.daily mission for amani formula(mission place effects in formula)
                                  3.mamoriat bedone tavaqof formula
                                    4.food cost(does number of days sum up)
                                      5.road cost percent  -->
    <service noun="mazayaMmrtTvqf" verb="calculate" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="shqlVsanavat" from="0" />
            <set field="mamotiatBtvqf" from="0" />
            <set field="mazayaMmrtTvqf" from="0" />
            <set field="noeQarardad" from="0" />
            <set field="HoqoqMabna" from="0" />
            <set field="hadaqalDastmozdKar" from="0" />
            <set field="maxDastmozdKar" from="0" />
            <set field="minDastmozdKar" from="0" />
            <script><![CDATA[
                     shqlVsanavat = prevResult.shqlVsanavat?:0;
                     mamotiatBtvqf = prevResult.mamotiatBtvqf?:0;
                     noeQarardad = prevResult.noeQarardad?:0;
                     HoqoqMabna = prevResult.HoqoqMabna?:0;
                     hadaqalDastmozdKar = prevResult.hadaqalDastmozdKar?:0;
                     foqMadrak = prevResult.foqMadrak?:0;
                     SanavatSalary = prevResult.SanavatSalary?:0;
                     mozdGrouhP = prevResult.mozdGrouhP?:0;
                     ]]></script>
            <message>hereherehereherehereherehere</message>
            <if condition="noeQarardad=='qeyewHajmiRecord' || noeQarardad=='nafarMahi'" >
                <message>hereherehereherehereherehere</message>
                <set field="mazayaMmrtTvqf"  from="Math.round(((mamotiatBtvqf?:0)*(((foqMadrak?:0)+(SanavatSalary?:0)+(mozdGrouhP?:0))/30))*1.4)" />
                <else>
                    <set field="mazayaMmrtTvqf" from="Math.round((HoqoqMabna/30)*1.4*(mamotiatBtvqf?:0))" />
                    <!--
                        <set field="maxDastmozdKar" from="hadaqalDastmozdKar*4"/>
                        <set field="minDastmozdKar" from="hadaqalDastmozdKar*2.5"/>
                        <if condition="mazayaMmrtTvqf &gt; maxDastmozdKar"><set field="mazayaMmrtTvqf" from="maxDastmozdKar"/></if>
                        <if condition="mazayaMmrtTvqf &lt; minDastmozdKar"><set field="mazayaMmrtTvqf" from="minDastmozdKar"/></if>
                    -->
                </else>
            </if>
            <set field="res" from="mazayaMmrtTvqf?:0"/>
        </actions>
    </service>

    <service noun="mazayaMmrtBdonTvqf" verb="calculate" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="shqlVsanavat" from="0" />
            <set field="mamotiatBedonTvqf" from="0" />
            <set field="mazayaMmrtBdonTvqf" from="0" />
            <set field="noeQarardad" from="0" />
            <set field="HoqoqMabna" from="0" />
            <set field="hadaqalDastmozdKar" from="0" />
            <script><![CDATA[
                     shqlVsanavat = prevResult.shqlVsanavat?:0;
                     mamotiatBedonTvqf = prevResult.mamotiatBedonTvqf?:0;
                      noeQarardad = prevResult.noeQarardad?:0;
                     HoqoqMabna = prevResult.HoqoqMabna?:0;
                     hadaqalDastmozdKar = prevResult.hadaqalDastmozdKar?:0;
                     foqMadrak = prevResult.foqMadrak?:0;
                     SanavatSalary = prevResult.SanavatSalary?:0;
                     mozdGrouhP = prevResult.mozdGrouhP?:0;
                     ]]></script>
<message>hereherehereherehereherehere</message>
            <if condition="noeQarardad=='qeyewHajmiRecord' || noeQarardad=='nafarMahi'" >
                <set field="mazayaMmrtBdonTvqf"  from="Math.round((mamotiatBtvqf?:0)*(((foqMadrak?:0)+(SanavatSalary?:0)+(mozdGrouhP?:0))/30))" />
                <else>
                    <set field="mazayaMmrtBdonTvqf" from="Math.round(HoqoqMabna/30)*(mamotiatBedonTvqf?:0)" />
                </else>
            </if>
            <set field="res" from="mazayaMmrtBdonTvqf?:0"/>
        </actions>
    </service>


    <service verb="calculate" noun="tedadRoozeMah">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="tedadRoozeMah" from="0"/>
            <set field="locale" from="new com.ibm.icu.util.ULocale('fa_IR@calendar=persian')"/>
            <set field="calDate" from="com.ibm.icu.util.Calendar.getInstance(locale)"/>
            <script><![CDATA[
                    calDate.setTime(date);
                    tedadRoozeMah = calDate.getActualMaximum(com.ibm.icu.util.Calendar.DAY_OF_MONTH);
                 ]]></script>
            <set field="res" from="tedadRoozeMah"/>
        </actions>
    </service>

    <service verb="calculate" noun="komakhazineQaza">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="hadaqalDastmozdKar" from="0"/>
            <set field="rowKomakhazineQaza" from="0"/>
            <set field="komakhazineQazaFloor" from="0"/>
            <set field="komakhazineQazaMid" from="0"/>
            <set field="komakhazineQaza" from="0"/>
            <script><![CDATA[
                           hadaqalDastmozdKar = prevResult.hadaqalDastmozdKar;

                        ]]>
            </script>
            <set field="rowKomakhazineQaza" from="hadaqalDastmozdKar*30*0.25"/>

            <set field="komakhazineQazaFloor" from="Math.floor(rowKomakhazineQaza)"/>
            <set field="komakhazineQazaMid" from="komakhazineQazaFloor+0.5"/>
            <if condition="komakhazineQazaMid == rowKomakhazineQaza || rowKomakhazineQaza &gt; komakhazineQazaMid"><then>
                <set field="komakhazineQaza" from="komakhazineQazaFloor+1"/></then>
                <else>
                    <set field="komakhazineQaza" from="komakhazineQazaFloor"/>
                </else>
            </if>
            <set field="res" from="komakhazineQaza?:0"/>
        </actions>
    </service>

    <service noun="emtiazSarparasti" verb="calculate">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emtiazSarparasti" from="0" />
<!--            <set field="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>-->
            <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillment" list="ffr">
                <econdition field-name="partyId" from="employeePartyId" />
                <econdition field-name="noeEntesabEnumId" from="'netnAsli'" />
<!--                <econdition field-name="positionFulfillmentTypeEnumId" from="'psflUsual'" />-->
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="ffr[0]">
                 <set field="emplPositionId" from="ffr[0]?.emplPositionId" />
                <else>
                    <set field="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>
                </else>
            </if>
            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="ApplcI">
                <econdition field-name="emplPositionId" from="emplPositionId"/>
                <econdition field-name="parameterId" from="'posWorkTypeHistory'"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.position.EmplPositionAndPositionClassAndWork" list="emplList">
                <econdition field-name="emplPositionId" from="emplPositionId"/>
            </entity-find>
            <set field="supervision" from="emplList[0].supervision?:0" />
            <set field="dutyFacilityId" from="emplList[0].dutyFacilityId?:0" />
            <if condition="!ApplcI[0]">
                <set field="workTypeEnumId" from="emplList[0].workTypeEnumId?:0"/>
                <else>
                    <set field="workTypeEnumId" from="ApplcI[0].point?:0" />
                </else>
            </if>
            <entity-find-one entity-name="mantle.facility.Facility" value-field="facilityList">
                <field-map field-name="facilityId" from="dutyFacilityId"/>
            </entity-find-one>
            <set field="facilityClassEnumId" from="facilityList?.facilityClassEnumId?:0" />
            <set field="tedadSalSabeqe" from="prevResult.tedadSalSabeqe?:0"/>
            <if condition="supervision==2" >
                <set field="emtiazSarparasti" from="0"/>
                <else-if condition="supervision==1">
                    <entity-find entity-name="mantle.humanres.paramCalc.supervisionPoint" list="spPoint">
                        <econdition from="workTypeEnumId" field-name="workTypeEnumId" />
                        <econdition from="facilityClassEnumId" field-name="facilityClassEnumId" ignore-if-empty="true" or-null="true"/>
                        <econdition field-name="toExperienceAmount" operator="greater-equals"  from="tedadSalSabeqe" or-null="true"/>
                        <econdition field-name="fromExperienceAmount" operator="less-equals" from="tedadSalSabeqe" />
                    </entity-find>
                    <!--            <message>${workTypeEnumId} workTypeEnumId</message>-->
                    <if condition="spPoint[0]">
                        <set field="emtiazSarparasti" from="spPoint[0].point" />
                        <else>
                            <entity-find entity-name="mantle.humanres.paramCalc.supervisionPoint" list="spPoint33">
                                <econditions combine="or">
                                    <econdition field-name="workTypeEnumId"   from="'wt32'"/>
                                    <econdition field-name="workTypeEnumId"   from="'100062'"/>
                                </econditions>
                                <econdition from="facilityClassEnumId" field-name="facilityClassEnumId" ignore-if-empty="true" or-null="true"/>
                                <econdition field-name="toExperienceAmount" operator="greater-equals"  from="tedadSalSabeqe" or-null="true"/>
                                <econdition field-name="fromExperienceAmount" operator="less-equals" from="tedadSalSabeqe" />
                            </entity-find>
                            <if condition="spPoint33[0]">
                                <set field="emtiazSarparasti" from="spPoint33[0].point" />
                            </if>
                        </else>
                    </if>
                </else-if>
                <else>
                    <entity-find entity-name="mantle.humanres.paramCalc.supervisionPoint" list="spPoint44">
                        <econdition from="workTypeEnumId" field-name="workTypeEnumId" />
                        <econdition from="facilityClassEnumId" field-name="facilityClassEnumId" ignore-if-empty="true" or-null="true"/>
                        <econdition field-name="toExperienceAmount" operator="greater-equals"  from="tedadSalSabeqe" or-null="true"/>
                        <econdition field-name="fromExperienceAmount" operator="less-equals" from="tedadSalSabeqe" />
                    </entity-find>
                    <if condition="spPoint44[0]">
                        <set field="emtiazSarparasti" from="spPoint44[0].point" />
                    </if>
                </else>

            </if>
            <set field="res" from="emtiazSarparasti?emtiazSarparasti:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="komakhazineKhadamatRefahi">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="jameKolleAhkam" from="0"/>
            <set field="maskanHazine" from="0"/>
            <set field="kharobar" from="0"/>
            <set field="kmkHazineOvlad" from="0"/>
            <set field="rowkmkR" from="0"/>
            <set field="kmkRFloor" from="0"/>
            <set field="kmkRMid" from="0"/>
            <set field="komakhazineKhadamatRefahi" from="0"/>

            <script><![CDATA[
                       jameKolleAhkam = prevResult.jameKolleAhkam;
                       maskanHazine = prevResult.maskanHazine;
                       kharobar = prevResult.kharobar;
                       kmkHazineOvlad = prevResult.kmkHazineOvlad;

                    ]]>
            </script>
            <set field="rowkmkR" from="(jameKolleAhkam-maskanHazine-kharobar-(kmkHazineOvlad?:0))*0.45"/>

            <set field="kmkRFloor" from="Math.floor(rowkmkR)"/>
            <set field="kmkRMid" from="kmkRFloor+0.5"/>
            <if condition="kmkRMid == rowkmkR || rowkmkR &gt; kmkRMid"><then>
                <set field="komakhazineKhadamatRefahi" from="kmkRFloor+1"/></then>
                <else>
                    <set field="komakhazineKhadamatRefahi" from="kmkRFloor"/>
                </else>
            </if>
            <set field="res" from="komakhazineKhadamatRefahi?:0"/>
        </actions>
    </service>

    <service verb="calculate" noun="haqMobile">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="hadaqalDastmozdKar" from="0"/>
            <set field="telHamrah" from="0"/>
            <set field="rowHaqMobile" from="0"/>
            <set field="haqMobileFloor" from="0"/>
            <set field="haqMobileMid" from="0"/>
            <set field="haqMobile" from="0"/>

            <script><![CDATA[
                       hadaqalDastmozdKar = prevResult.hadaqalDastmozdKar;
                       telHamrah = prevResult.telHamrah;

                    ]]>
            </script>
            <if condition="telHamrah">
                <set field="rowHaqMobile" from="(hadaqalDastmozdKar*2*telHamrah)"/>

                <set field="haqMobileFloor" from="Math.floor(rowHaqMobile)"/>
                <set field="haqMobileMid" from="haqMobileFloor+0.5"/>
                <if condition="haqMobileMid == rowHaqMobile || rowHaqMobile &gt; haqMobileMid"><then>
                    <set field="haqMobile" from="haqMobileFloor+1"/></then>
                    <else>
                        <set field="haqMobile" from="haqMobileFloor"/>
                    </else>
                </if>
            </if>
            <set field="res" from="haqMobile?:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="darsadMaharatTakhasosDesc" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="GpEstehqaqi" from="prevResult.GpEstehqaqi.toInteger()?:0"/>
            <set field="darsadMaharatTakhasosDesc" value=""/>
            <service-call name="hrService.get#expertLevel" in-map="context+[partyId:employeePartyId,validDate:date,GpEstehqaqi:GpEstehqaqi]" out-map="context"/>
            <if condition="expertLevelEnumId" >
                <entity-find-one entity-name="moqui.basic.Enumeration" value-field="enDesc" >
                    <field-map field-name="enumId" from="expertLevelEnumId" />
                </entity-find-one>
                <set field="darsadMaharatTakhasosDesc" from="enDesc.description" />
            </if>
            <set field="res" from="darsadMaharatTakhasosDesc?:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="darsadMaharatTakhasos" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="GpEstehqaqi" from="prevResult.GpEstehqaqi.toInteger()?:0"/>
            <set field="darsadMaharatTakhasos" value=""/>
            <service-call name="hrService.get#expertLevel" in-map="context+[partyId:employeePartyId,validDate:date,GpEstehqaqi:GpEstehqaqi]" out-map="context"/>
            <set field="darsadMaharatTakhasos" from="expertLevelEnumId" />
            <set field="res" from="darsadMaharatTakhasos?:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="drsdMaharatTakhasosFrml" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="res" from="0" />
            <set field="drsdMaharatTakhasosFrml" from="0" />
            <set field="GpEstehqaqi" from="prevResult.GpEstehqaqi?:0"/>
            <set field="workTypeEnumId" from="prevResult.darsadMaharatTakhasos?:0"/>
            <set field="drsdMaharatTakhasosNFrml" from="prevResult.drsdMaharatTakhasosNFrml"/>
          <if condition="prevResult.drsdMaharatTakhasosNFrml">
                  <set field="drsdMaharatTakhasosFrml" from="drsdMaharatTakhasosNFrml"/>
                  <set field="res" from="drsdMaharatTakhasosFrml?:0"/>
              <else>
            <entity-find entity-name="mantle.humanres.paramCalc.skillAndProfessionPoint" list="sppl">
                <econdition field-name="toGp" operator="greater-equals" from="GpEstehqaqi" />
                <econdition field-name="fromGp" operator="less-equals" from="GpEstehqaqi" />
                <econdition field-name="workTypeEnumId" from="workTypeEnumId" or-null="true" />
                <econdition field-name="statusId" value="csActive" />
            </entity-find>
            <if condition="workTypeEnumId==0||workTypeEnumId=='0'">
                <return/></if>
            <if condition="sppl[0] &amp;&amp; !drsdMaharatTakhasosNFrml" >
                <set field="drsdMaharatTakhasosFrml" from="sppl[0].SPP" />
                <else>
                    <message error="true">
                        employeePartyId: ${employeePartyId}
                        GpEstehqaqi: ${GpEstehqaqi}
                        workTypeEnumId: ${workTypeEnumId}
                        اطلاعات پایه مربوط به تخمین درصد عامل مهارت تخصص را در منو بخشنامه ها تعریف تعریف کنید. </message>
                    <return/>
                </else>
            </if>
            <set field="res" from="drsdMaharatTakhasosFrml?:0"/>
          </else></if>
        </actions>
    </service>



    <service verb="calculate" noun="foqNobatkari">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="darsadNobatkari" from="0"/>
            <set field="zaribRiali" from="0"/>
            <set field="rowFoqNobatkari" from="0"/>
            <set field="foqNobatkariFloor" from="0"/>
            <set field="foqNobatkariMid" from="0"/>
            <set field="foqNobatkari" from="0"/>

            <script><![CDATA[
                       zaribRiali = prevResult.zaribRiali;
                       darsadNobatkari = prevResult.darsadNobatkari;

                    ]]>
            </script>
            <if condition="darsadNobatkari">
                <set field="rowFoqNobatkari" from="(parmMap.prevResult.darsadNobatkari?:0)*parmMap.prevResult.zaribRiali"/>

                <set field="foqNobatkariFloor" from="Math.floor(rowFoqNobatkari)"/>
                <set field="foqNobatkariMid" from="foqNobatkariFloor+0.5"/>
                <if condition="foqNobatkariMid == rowFoqNobatkari || rowFoqNobatkari &gt; foqNobatkariMid"><then>
                    <set field="foqNobatkari" from="foqNobatkariFloor+1"/></then>
                    <else>
                        <set field="foqNobatkari" from="foqNobatkariFloor"/>
                    </else>
                </if>
            </if>
            <set field="res" from="foqNobatkari?:0"/>
        </actions>
    </service>

    <service verb="calculate" noun="tedadMahSabeqe">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find-one entity-name="mantle.party.Person" value-field="personDet">
                <field-map field-name="partyId" from="employeePartyId"/>
            </entity-find-one>
            <set field="tedadSalSabeqe" from="0"/>
            <set field="theDate" from="null"/>
            <set field="endDate" from="null"/>
            <set field="locale" from="new com.ibm.icu.util.ULocale('fa_IR@calendar=persian')"/>
            <script>
                theDate = com.ibm.icu.util.Calendar.getInstance(locale);
                endDate = com.ibm.icu.util.Calendar.getInstance(locale);
                theDate.setTime(ec.user.nowTimestamp);
                endDate.setTime(personDet.startSanavat);
            </script>
            <if condition="personDet.startSanavat">
                <set field="tedadMahSabeqe" from="(theDate.get(com.ibm.icu.util.Calendar.MONTH)-endDate.get(com.ibm.icu.util.Calendar.MONTH))?:0"/>
            </if>
            <set field="tedadMahSabeqe" from="Math.ceil(tedadMahSabeqe)?:0"/>

            <set field="res" from="tedadMahSabeqe?:0"/>
        </actions>
    </service>

    <!--    ***___***___***___***  پیمانی   ***___***___***___***  -->

    <service verb="calculate" noun="mozdGrouhP">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="GpEstehqaqi" from="prevResult.GpEstehqaqi.toInteger()?:0"/>
            <set field="mozdGrouhP" from="0"/>
            <set field="calcType" from="0"/>
            <entity-find entity-name="mantle.humanres.ability.GroupDue" list="gpDue">
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
                <econdition field-name="gpNumber" from="GpEstehqaqi"/>
            </entity-find>
            <set field="mozdGrouhP" from="gpDue[0]?.point"/>
            <set field="calcType" from="gpDue[0]?.calcType"/>
            <if condition="calcType =='روزانه'" ><then>
                <set field="mozdGrouhP" from="Double.valueOf(mozdGrouhP) * 30"/>
            </then><else-if condition="calcType=='ساعتکارکرد'">
                <set field="mozdGrouhP" from="Double.valueOf(mozdGrouhP) * 7.33 * 30"/>
            </else-if> </if>

            <set field="res" from="mozdGrouhP?:0"/>
        </actions>
    </service>


    <service verb="calculate" noun="darsadKarayP2">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="darsadKarayP2" from="0"/>
            <set field="emplPositionId" from="emplPositionId?emplPositionId:employment.emplPositionId"/>
            <entity-find entity-name="mantle.humanres.position.EmplPositionAndPositionClassAndWork" list="emplList">
                <econdition field-name="emplPositionId" from="emplPositionId"/>
            </entity-find>
            <set field="workTypeEnumId" from="emplList[0].workTypeEnumId"/>
            <entity-find entity-name="moqui.basic.Enumeration" list="enumListRes">
                <econdition field-name="enumId" from="workTypeEnumId"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.ability.PartyQualification" list="qulDEtail">
                <econdition field-name="partyId" from="employeePartyId"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="qulDEtail[0]">
                <set field="madrakTahsiliActual" from="qulDEtail[0].pcltEducationActual"/>
            </if>
            <set field="madrakTahsiliActual" from="madrakTahsiliActual ? madrakTahsiliActual : '_NA_'"/>
            <set field="noeShoql" from="enumListRes[0]?.enumId"/>
            <set field="darsadPadash" value="0"/>
            <script><![CDATA[
                      def noeQarardad=prevResult.noeQarardad;
                      def numberOfChildesAdj = prevResult.tedaadOvlad;
                      def tedadSalSabeqe = prevResult.tedadSalSabeqe;
                      def maritalStatus = prevResult.vaziatTahol;
                      def madrakTahsili = madrakTahsiliActual;
                      def natijeArzyabiAmalkard = prevResult.natijeArzyabiAmalkard;
                      def darsadPadash = 0;
                      numberOfChildesAdj = numberOfChildesAdj.toInteger()



          if ( maritalStatus == "مجرد" || tedadSalSabeqe < 2 || natijeArzyabiAmalkard < 80 || noeQarardad=="qeyewHajmiRecord"){

              darsadKarayP2 = 0
              }else {
                  switch (numberOfChildesAdj){
                  case 0:
                  darsadPadash+= 0
                  break;
                  case 1:
                  darsadPadash+= 0.05
                  break;
                  case 2:
                  darsadPadash+= 0.07
                  break;
                  case 3:
                  darsadPadash+= 0.08
                  break;
                  case 4:
                  darsadPadash+= 0.08
                  break;
                  case 5:
                  darsadPadash+= 0.08
                  break;
                  case 6:
                  darsadPadash+= 0.08
                  break;
                  case 7:
                  darsadPadash+= 0.08
                  break;
                  case 8:
                  darsadPadash+= 0.08
                  break;
                  }
                  switch (madrakTahsili){
                  case "بی سواد":
                  darsadPadash+= 0.01
                  break;
                  case "ابتدایی":
                  darsadPadash+= 0.01
                  break;
                  case "راهنمایی":
                  darsadPadash+= 0.01
                  break;
                  case "متوسطه":
                  darsadPadash+= 0.01
                  break;
                  case "دیپلم":
                  darsadPadash+= 0.02
                  break;
                  case "فوق دیپلم":
                  darsadPadash+= 0.03
                  break;
                  case "فوق دیپلم":
                  darsadPadash+= 0.03
                  break;
                  case "کارشناسی":
                   darsadPadash+= 0.04
                  break;
                  case "کارشناسی ارشد":
                   darsadPadash+= 0.04
                  break;
                  case "دکتری":
                   darsadPadash+= 0.04
                  break;
                  case "دکتری تخصصی":
                   darsadPadash+= 0.04
                  break;
                  }


           if(tedadSalSabeqe <= 5){
              darsadPadash += 0.03
              }else
          if(tedadSalSabeqe >= 5 && tedadSalSabeqe <= 10 ){
              darsadPadash += 0.04
              }else
          if(tedadSalSabeqe > 10 && tedadSalSabeqe <= 15 ){
              darsadPadash += 0.05
              }else
         if( 15 < tedadSalSabeqe ){
              darsadPadash += 0.06
              }

          darsadKarayP2 = darsadPadash + 0.03;
          }

           ]]>
            </script>
            <entity-find entity-name="mantle.humanres.paramCalc.workTypePoints" list="wtPointCW">
                <econdition field-name="workTypeEnumId" from="noeShoql"/>
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="darsadKarayP2!=0">
                <if condition="wtPointCW[0]">
                    <set field="capabilityPointCW" from="wtPointCW[0].capabilityPointCW"/>
                    <else>
                        <set field="capabilityPointCW" from="0.02" />
                    </else>
                </if>
                <set field="darsadKarayP2" from="darsadKarayP2+capabilityPointCW" />
            </if>
            <set field="darsadKarayP2" from="darsadKarayP2+capabilityPointCW"/>
            <if condition="darsadKarayP2 &gt; 0.25">
                <set field="darsadKarayP2" value="0.25"/>
            </if>
            <set field="res" from="darsadKarayP2"/>
        </actions>
    </service>
    <service verb="calculate" noun="haqHazineQazaPeymankaran">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="haqHazineQazaPeymankaran" from="0"/>
            <script><![CDATA[
                   def hdqlDstmzdP= prevResult.hdqlDstmzdP?:0;
                   def darsadNobatkari= prevResult.darsadNobatkari?:0;

              if( darsadNobatkari == 22.5){
               haqHazineQazaPeymankaran = hdqlDstmzdP* 2.25
              }else {
               haqHazineQazaPeymankaran = hdqlDstmzdP* 4.5
              }
            ]]>
            </script>
            <set field="res" from="Math.floor(haqHazineQazaPeymankaran)"/>
        </actions>
    </service>
    <service verb="calculate" noun="padashKarayP1">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="padashKarayP1" from="0"/>
            <set field="natijeArzyabiAmalkard" from="0"/>
            <set field="darsadPadashKaray" from="0"/>
            <set field="hdqlDstmzdP" from="0"/>
            <set field="noeQararda" from="''"/>

            <script><![CDATA[
                    noeQarardad=prevResult.noeQarardad;
                    hdqlDstmzdP= prevResult.hdqlDstmzdP;
                    natijeArzyabiAmalkard = prevResult.natijeArzyabiAmalkard?:0;
                    natijeArzyabiAmalkard = natijeArzyabiAmalkard.toInteger();

            ]]>
            </script>
            <if condition="noeQarardad ==nafarMahi">
                <if condition="natijeArzyabiAmalkard &gt; 89  ">
                    <set field="padashKarayP1" from="(20*30*hdqlDstmzdP)/100"/>
                    <else>
                        <set field="padashKarayP1" from="(20*30*hdqlDstmzdP*natijeArzyabiAmalkard)/10000"/>
                    </else></if>
                <else-if condition="noeQarardad ==qeyewHajmiRecord">
                    <set field="padashKarayP1" from="0"/>
                </else-if></if>
            <set field="res" from="padashKarayP1?:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="tedadSalSabeqe">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find-one entity-name="mantle.party.Person" value-field="personDet">
                <field-map field-name="partyId" from="employeePartyId"/>
            </entity-find-one>
            <message>${date}---------------------------------------------------------------------------------------------------------88</message>
            <set field="tedadSalSabeqe" from="0"/>
            <if condition="date == new Timestamp(1616437800000)">
                <set field="tatbiqDate" from="new Timestamp(1616480268000)"/>
           <else>
            <set field="tatbiqDate" from="date"/>
           </else>
            </if>
            <!--mohasebeye sanvate khedmati-->
            <set field="yearsOfExperience" from="0"/>
            <set field="tedadSalSabeqe" from="0"/>
            <!--mohasebeye sanvate khedmati-->
            <set field="yearsOfExperience" from="0"/>
            <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillmentConvert" list="groupResOne">
                <econdition field-name="partyId" from="employeePartyId"/>
                <econdition field-name="relationType" operator="not-in" value="pcgRelNotCountable"/>

            </entity-find>
            <set field="historyMN" from="0"/>
            <set field="historyDY" from="0"/>
            <set field="MNOfExperience" from="0"/>
            <set field="DYOfExperience" from="0"/>
            <iterate list="groupResOne" entry="itm">
                <set field="itm.thruDate" from="itm.thruDate?:tatbiqDate"/>
                <if condition="itm.thruDate &gt; tatbiqDate "><set field="itm.thruDate" from="tatbiqDate" /></if>
                <service-call name="hrService.get#exactTimeIr" in-map="[fromDate:itm.fromDate,thruDate:itm.thruDate]" out-map="res"/>
                <set field="justMonthStr" from="res.justMonthStr?:0" />
                <set field="dayStr" from="res.dayStr?:0" />
                <set field="historyMN" from="historyMN+(justMonthStr)"/>
                <set field="historyDY" from="historyDY+(dayStr)"/>
            </iterate>
            <set field="MNOfExperience" from="MNOfExperience+(historyMN)"/>
            <set field="DYOfExperience" from="DYOfExperience+(historyDY)"/>
            <!--mohasebeye sanvate nezamnezam vazife-->
            <entity-find entity-name="mantle.humanres.additional.MilitaryInfo" list="miliResOne">
                <econdition field-name="partyId" from="employeePartyId"/>
                <econdition field-name="thruDate" operator="is-not-null"/>
                <econdition field-name="fromDate" operator="is-not-null"/>
            </entity-find>
            <set field="historyMN" from="0"/>
            <set field="historyDY" from="0"/>
            <iterate list="miliResOne" entry="itm">
                <service-call name="hrService.get#exactTimeIr" in-map="[fromDate:itm.fromDate,thruDate:itm.thruDate]" out-map="res"/>
                <set field="justMonthStr" from="res.justMonthStr?:0" />
                <set field="dayStr" from="res.dayStr?:0" />
                <set field="historyMN" from="historyMN+(justMonthStr)"/>
                <set field="historyDY" from="historyDY+(dayStr)"/>
            </iterate>
            <set field="MNOfExperience" from="MNOfExperience+(historyMN)"/>
            <set field="DYOfExperience" from="DYOfExperience+(historyDY)"/>

            <if condition="DYOfExperience &gt;= 365">
                <set field="DYYearOfExperience" from="Math.floor(DYOfExperience/365)"/>
                <set field="DYOfExperience" from="DYOfExperience - (DYYearOfExperience*365)"/>
                <set field="MNOfExperience" from="MNOfExperience + (DYYearOfExperience*12)"/>
            </if>


            <set field="yearsOfExperience" from="Math.floor(MNOfExperience/12)"/>
            <set field="DaysOfExperience" from="Math.floor(DYOfExperience + ((MNOfExperience - (yearsOfExperience*12))*30))"/>
            <if condition="DaysOfExperience &gt;= 365">
                <set field="DYYearOfExperience" from="Math.floor(DaysOfExperience/365)"/>
                <set field="DaysOfExperience" from="DaysOfExperience - (DYYearOfExperience*365)"/>
                <set field="yearsOfExperience" from="yearsOfExperience + (DYYearOfExperience)"/>
            </if>

            <set field="tedadSalSabeqe" from="yearsOfExperience?:0"/>
            <set field="daysOfExperience" from="DaysOfExperience?:0"/>
            <message>${tedadSalSabeqe}1111111111111111111111s</message>
            <message>${daysOfExperience}1111111111111111111111d</message>
            <if condition="employeePartyId=='119545'">
                <set field="tedadSalSabeqe" from="21"/>
            </if>
            <set field="res" from="tedadSalSabeqe?:0"/>
            <if condition="employeePartyId=='119545'">
                <set field="res" from="21"/>
            </if>
        </actions>
    </service>
    <service verb="calculate" noun="mozdSanavatPeyeP">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="GpEstehqaqi" from="prevResult.GpEstehqaqi.toInteger()"/>
            <set field="activateSanavatClac" from="prevResult.activateSanavatClac?:0"/>
            <set field="mozdSanavatPeyeP" from="0"/>
            <set field="expPoint" from="0"/>
            <set field="daysOfExperience" from="0"/>
            <set field="yearsOfexperiencePlus" from="0"/>
            <set field="expPointplus" from="0"/>

            <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="resLatest">
                <econdition field-name="fromPartyId" from="employeePartyId" />
                <econdition field-name="parameterId" from="'pn1'" />
                <order-by field-name="-employmentFromDate"/>
            </entity-find>
            <if condition="resLatest[0]" ><then>

                <entity-find entity-name="mantle.humanres.paramCalc.jobExperiencePoint" list="expPoint">
                    <!--                    <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>-->
                    <econdition field-name="gpNumbre" from="GpEstehqaqi"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <set field="mozdSanavatPeyeP" from="((resLatest[0].point?:0)*1.26)+(expPoint[0].Max?:0)" />
            </then><else>

                <set field="mozdSanavatPeyeP" from="0"/>
                <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillmentConvert" list="groupResOne">
                    <econdition field-name="partyId" from="employeePartyId"/>
                </entity-find>
                <set field="wholeExperience" from="0"/>
                <iterate list="groupResOne" entry="itm">
                    <if condition="itm.calcExp">
                        <set field="wholeExperience" from="wholeExperience+Double.valueOf(itm.calcExp?:0)"/>
                        <else>
                            <set field="wholeExperience" from="wholeExperience+((itm.thruDate?:date) - itm.fromDate)"/>
                        </else>
                    </if>
                </iterate>
                <set field="yearsOfexperience" from="Math.floor(wholeExperience/365)"/>
                <if condition="yearsOfexperience &gt; 9">
                    <set field="yearsOfexperience" from="9"/>
                    <else>
                        <set field="daysOfExperience" from="Math.round(((wholeExperience/365) - yearsOfexperience)*365)"/>
                        <set field="yearsOfexperiencePlus" from="yearsOfexperience + 1"/>
                    </else>
                </if>
                <message>${yearsOfexperiencePlus}666666666666666666666666666666</message>
                <entity-find entity-name="mantle.humanres.ability.yearsOfBonesPeymani" list="expPoint">
                    <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                    <econdition field-name="gpNumber" from="GpEstehqaqi"/>
                    <econdition field-name="yearsOfexperience" from="yearsOfexperience"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <if condition="expPoint[0]">
                    <set field="mozdSanavatPeyeP" from="(expPoint[0].sanavatPoint?:0)*30" /></if>
                <entity-find entity-name="mantle.humanres.ability.yearsOfBonesPeymani" list="expPointPlus">
                    <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                    <econdition field-name="gpNumber" from="GpEstehqaqi"/>
                    <econdition field-name="yearsOfexperience" from="yearsOfexperiencePlus"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <message>${expPointPlus}88888888888888888888</message>
                <if condition="expPointPlus[0]">
                    <set field="expPointplus" from="Math.round(((expPointPlus[0].sanavatPoint?:0)-(mozdSanavatPeyeP/30))/365)*daysOfExperience" />
                    <set field="mozdSanavatPeyeP" from="expPointplus + mozdSanavatPeyeP" />
                </if>
            </else></if>
            <set field="res" from="(activateSanavatClac?:0) *(mozdSanavatPeyeP?:0)"/>
        </actions>
    </service>
    <service verb="calculate" noun="panzdahDarsad">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="res" from="0"/>
            <set field="panzdahDarsad" from="0"/>
            <set field="jameKolleAhkam" from="prevResult.jameKolleAhkamTemp"/>
            <set field="foqoladeJazb" from="prevResult.foqoladeJazb"/>
            <set field="zaribRiali" from="prevResult.zaribRiali"/>
            <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="[fromPartyId:employeePartyId,toPartyId:'sampleMainOrg',date:date,maxDate:new Timestamp(1616317621000)]" out-map="empPrev"/>
            <entity-find entity-name="mantle.humanres.ability.HrParameterResult" list="rst">
                <econdition field-name="parameterId" from="'42'"/>
                <econdition field-name="partyRelationshipId" from="empPrev.employment.partyRelationshipId"/>
            </entity-find>
            <set field="rst" from="rst[0]"/>
            <if condition="!rst"><return/></if>
            <if condition="!rst.point"><return/></if>
            <if condition="!jameKolleAhkam"><return/></if>
            <if condition="jameKolleAhkam instanceof String">
                <set field="jameKolleAhkam" from="Double.valueOf(jameKolleAhkam)"/>
            </if>
            <if condition="rst.point instanceof String">
                <set field="rst.point" from="Double.valueOf(rst.point)"/>
            </if>
            <entity-find entity-name="mantle.humanres.additional.FrontInfo" list="findRes">
                <econdition field-name="partyId" from="employeePartyId"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="findRes.size()==0">
                <return/>
            </if>
            <if condition="findRes.size()&gt;0 &amp;&amp;findRes[0]?.sacrificeTypeEnumId=='ptSacChild'">
                <!--                <set field="rst.point" from="rst.point-4493625"/>-->
            </if>
            <if condition="jameKolleAhkam &gt; rst.point ">
                <if condition="(jameKolleAhkam - rst.point) &gt; (15/100*rst.point) ">
                    <set field="panzdahDarsad" from="(jameKolleAhkam - rst.point) - (15/100*rst.point)"/>
                </if>
            </if>
            <set field="res" from="Math.ceil(panzdahDarsad?:0)"/>
            <set field="darsadPanzdah" from="Math.floor(((foqoladeJazb?:0)-(panzdahDarsad?:0))*100/(7800*zaribRiali))"/>
            <if condition="darsadPanzdah &lt; 0"><set field="res" from="foqoladeJazb"/> </if>
            <message>${panzdahDarsad} ________________panzdahDarsad1</message>

            <if condition="panzdahDarsad &lt;0">
                <set field="res" from="0"/>
            </if>
            <message>${panzdahDarsad} ________________panzdahDarsad2</message>
        </actions>
    </service>
    <service verb="calculate" noun="jameQabli">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="res" from="0"/>
            <service-call name="mantle.humanres.EmploymentServices.get#Employment" in-map="[fromPartyId:employeePartyId,toPartyId:'sampleMainOrg',date:date,maxDate:new Timestamp(1616317621000)]" out-map="empPrev"/>
            <entity-find entity-name="mantle.humanres.ability.HrParameterResult" list="rst">
                <econdition field-name="parameterId" from="'42'"/>
                <econdition field-name="partyRelationshipId" from="empPrev.employment.partyRelationshipId"/>
            </entity-find>
            <set field="rst" from="rst[0]"/>
            <if condition="!rst">
                <message>empPrev.employment.partyRelationshipId___________ ${empPrev.employment.partyRelationshipId}</message>
                <return/></if>
            <if condition="!rst.point"><return/></if>
            <set field="res" from="rst.point?:0"/>
            <entity-find entity-name="mantle.humanres.additional.FrontInfo" list="findRes">
                <econdition field-name="partyId" from="employeePartyId"/>
                <order-by field-name="-fromDate,-timestamp"/>
            </entity-find>
            <if condition="findRes.size()&gt;0 &amp;&amp;findRes[0]?.sacrificeTypeEnumId=='ptSacChild'">
                <set field="res" from="res-4493625"/>
            </if>
        </actions>
    </service>
    <service verb="calculate" noun="tax">
        <in-parameters>
            <parameter name="employeePartyId" />
            <parameter name="partyRelationshipId" />
            <parameter name="employmentPayHistoryId" />
            <parameter name="payType" />
            <parameter name="payDate" type="Date"/>
            <parameter name="prevResult" type="Map" />
            <parameter name="moavaqeFlat" type="Map" />
        </in-parameters>
        <out-parameters>
            <parameter name="res"/>
        </out-parameters>
        <actions>
            <set field="res" from="0"/>
            <set field="taxMabna" from="0"/>

            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="moaf">
                <econdition field-name="parameterId" from="'_MALIAT_'"/>
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <date-filter valid-date="new java.sql.Timestamp(payDate.getTime())"/>
            </entity-find>
            <if condition="moaf.size()>0"><return/></if>

            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listRes">
                <econdition field-name="isTaxable" operator="equals" value="Y"/>
                <!--                <econdition field-name="isEmployerPaid" operator="not-equals" value="Y"/>-->
                <econdition field-name="wageType" operator="in" value="A,B"/>
            </entity-find>
            <set field="paramIds" from="listRes*.parameterSystematicName"/>
            <iterate list="prevResult.keySet()" entry="itm">
                <if condition="paramIds.contains(itm)">
                    <if condition="payType=='pytDelayed'">
<!--                        <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listResDElay2">-->
<!--                            <econdition field-name="parameterSystematicName" from="itm"/>-->
<!--                            <econdition field-name="notHaveDelayedPay" operator="equals" value="Y" />-->
<!--                            <date-filter valid-date="date"/>-->
<!--                        </entity-find>-->
                    </if>
                    <if condition="listResDElay2?.size()>0"><then>
                        <script>
                            taxMabna=taxMabna+Double.valueOf(moavaqeFlat[itm]?:0)
                        </script>
                        <message>_____${itm} :^^^^^***************^^^^: ${moavaqeFlat[itm]?:0}</message>
                    </then><else>
                        <message>_____${itm} :^^^^^********+++++++++++++++++*******^^^^: ${prevResult[itm].toInteger()}</message>
                        <script>
                            if(prevResult[itm] instanceof String){
                            taxMabna=taxMabna+Double.valueOf(prevResult[itm].toInteger())
                            }else{
                            taxMabna=taxMabna+prevResult[itm]
                            }
                        </script>
                    </else></if>
                </if>
            </iterate>
            <set field="taxMabna" from="taxMabna"/>
            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listRes2">
                <econdition field-name="isTaxable" operator="equals" value="N"/>
                <econdition field-name="wageType" operator="equals" value="D"/>
            </entity-find>
            <set field="paramIds" from="listRes2*.parameterSystematicName"/>
            <iterate list="prevResult.keySet()" entry="itm">
                <if condition="paramIds.contains(itm)">
                    <if condition="payType=='pytDelayed'">
<!--                        <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listResDElay">-->
<!--                            <econdition field-name="parameterSystematicName" from="itm"/>-->
<!--                            <econdition field-name="notHaveDelayedPay" operator="equals" value="Y" />-->
<!--                            <date-filter valid-date="date"/>-->
<!--                        </entity-find>-->
                    </if>
                    <if condition="listResDElay?.size()>0"><then>
                        <script>
                            taxMabna=taxMabna+Double.valueOf(moavaqeFlat[itm]?:0)
                        </script>
                    </then>
                        <else>
                        <script>
                            if(prevResult[itm] instanceof String){
                            taxMabna=taxMabna-Double.valueOf(prevResult[itm])
                            logger.warn("************--------------***************"+prevResult[itm].toInteger())
                            }else{
                            logger.warn("oooooooooooo99999"+prevResult[itm].toInteger())
                            taxMabna=taxMabna-prevResult[itm]
                            }
                        </script>
                    </else></if>
                </if>
            </iterate>
          <!--کسر از مشمول-->
            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="taxCorrection">
                <econdition field-name="parameterId" from="'mtaxxx1400'"/>
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="fromDate" operator="less-equals" from="payDate"/>
                <econdition field-name="thruDate" operator="greater-equals" from="payDate"/>
            </entity-find>
            <if condition="!!taxCorrection[0]">
                <set field="taxMabna" from="taxMabna-Double.valueOf(taxCorrection[0].point)"/>
            </if>
            <!--افزودن از مشمول-->
            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="taxCorrectionAdd">
                <econdition field-name="parameterId" from="'mtaxxxAdd1400'"/>
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="fromDate" operator="less-equals" from="payDate"/>
                <econdition field-name="thruDate" operator="greater-equals" from="payDate"/>
            </entity-find>
            <if condition="!!taxCorrectionAdd[0]">
                <set field="taxMabna" from="taxMabna+Double.valueOf(taxCorrectionAdd[0].point)"/>
            </if>
            <service-call name="create#mantle.humanres.ability.HrParameterResult" in-map="[ partyRelationshipId:partyRelationshipId,
                                                                                                parameterId:'mtax',
                                                                                                point:taxMabna,
                                                                                                empPartyId:employeePartyId,
                                                                                                employmentPayHistoryId:employmentPayHistoryId,
                                                                                                description:'مشمول مالیات',
                                                                                                wageType:'O',
                                                                                                isEmployerPaid:'N',
                                                                                                pointStr:taxMabna+'',
                                                                                                t_pointStr:taxMabna+'',
                                                                                                payDate:payDate]" out-map="resCreateResultDedT3otTx"/>


            <entity-find entity-name="mantle.humanres.employment.SalaryTaxConf" list="taxConfs">
                <date-filter valid-date="new Timestamp(payDate.getTime())"/>
                <order-by field-name="sequenceNum"/>
            </entity-find>
            <set field="taxAmount" from="0" />
            <iterate list="taxConfs" entry="txc">
                <if condition="taxMabna > txc.fromAmount"><then>
                    <if condition="taxMabna > txc.toAmount"><then>
                        <set field="taxAmount" from="taxAmount+((txc.toAmount-txc.fromAmount)*txc.taxPercent/100)" />
                    </then><else>
                        <set field="taxAmount" from="taxAmount+((taxMabna-txc.fromAmount)*txc.taxPercent/100)" />
                    </else></if>
                </then><else>
                    <set field="taxAmount" from="taxAmount+0" />
                </else></if>
            </iterate>
            <set field="res" from="Math.floor(taxAmount)" />
            <entity-find-one entity-name="mantle.humanres.ability.HrParameterAppl" value-field="taxStatus">
                <field-map field-name="parameterId" value="_tax_"/>
                <field-map field-name="employeePartyId" from="employeePartyId"/>
            </entity-find-one>
            <entity-find-one entity-name="mantle.humanres.ability.HrParameterAppl" value-field="taxStatusTF">
                <field-map field-name="parameterId" value="_taxTF_"/>
                <field-map field-name="employeePartyId" from="employeePartyId"/>
            </entity-find-one>
            <if condition="taxStatus">
                <then>
                    <set field="res" from="res/2"/>
                    <set field="res" from="Math.floor(res)" />
                </then>
            </if>
            <if condition="taxStatusTF">
                <then>
                    <set field="res" from="res/4"/>
                    <set field="res" from="Math.floor(res)" />
                </then>
            </if>

        </actions>
    </service>
    <service verb="calculate" noun="emtiazTarfiFormula">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="emtiazTarfi" from="0"/>
            <set field="percent" from="0"/>

            <set field="gpNumbre" from="prevResult.GpEstehqaqi?:0" />
            <set field="natijeArzyabiAmalkardSi" from="prevResult.natijeArzyabiAmalkardSi?:0"/>
             <message>${gpNumbre}gpgpgpgpgp</message>
             <message>${natijeArzyabiAmalkardSi}natijeArzyabiAmalkardSi</message>

<!--                <set field="arzzYabi" from="Math.round( Double.valueOf(natijeArzyabiAmalkardSi))"/>-->
                <set field="natijeArzyabiAmalkard" from="Math.floor((natijeArzyabiAmalkardSi/30)*100)"/>
            <message>${natijeArzyabiAmalkard}55555555555555555555555555555555555pppppppp</message>
                <if condition="natijeArzyabiAmalkard  &gt; 94 " >
                    <set field="percent" from="1.1"/>
                <else>
                    <set field="percent" from="1"/>
                </else>
                </if>
            <message>${percent}percentpercentpercent</message>
                <entity-find entity-name="mantle.humanres.paramCalc.jobExperiencePoint" list="expPoint">
                    <!--                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>-->
                    <econdition field-name="gpNumbre" from="gpNumbre"/>
                    <order-by field-name="-fromDate"/>
                </entity-find>
                <if condition="expPoint[0]" >
                    <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillmentConvert" list="flflfl">
                        <econdition field-name="partyId" from="employeePartyId"/>
                        <econdition field-name="recordTypeEnumId" operator="in" value="taliq,morakhasiBedoneHoqoq,tadil,faseleKhedmat"/>
                        <econdition field-name="fromDate" operator="greater-equals" from="new Timestamp(1584662400000)"/>
                        <econdition field-name="fromDate" operator="less-equals" from="new Timestamp(1616198400000)"/>
                    </entity-find>
                    <set field="summanfi" from="0"/>
                    <iterate list="flflfl" entry="hot">
                        <message>${hot.thruDate.getClass()}</message>
                        <set field="summanfi" from="summanfi+( ( (hot.thruDate?.getTime() &gt; 1616198400000 ||hot.thruDate==null) ? new java.sql.Timestamp(1616198400000) : hot.thruDate)-hot.fromDate)"/>
                    </iterate>

                    <set field="ddd" from="expPoint[0].Max"/>
                    <if condition="flflfl.size() &gt;0">
                        <set field="ddd" from="(365-summanfi)*expPoint[0].Max/365"/>
                    </if>

                    <set field="emtiazTarfiHoqoq" from="(ddd)*percent" />
                    <set field="emtTarfi" from="Math.round(((emtiazTarfiHoqoq)*30)/1696)"/>
                    <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="idpk">
                        <econdition field-name="parameterId" from="'12'"/>
                        <econdition field-name="employeePartyId" from="employeePartyId" />
                        <econdition field-name="fromDate" operator="greater" from="new Timestamp(1553113800000)"/>
                    </entity-find>
                    <if condition="idpk">
                    <set field="hrParameterApplId" from="idpk[0]?.hrParameterApplId"/>
                    <service-call name="store#mantle.humanres.ability.HrParameterAppl"
                                  in-map="[hrParameterApplId:hrParameterApplId,parameterId:'12',employeePartyId:employeePartyId,
                                      fromDate:'1616272140000',
                                      point:emtTarfi,
                                      isForAll:'N',
                                      description:'سیستمی اضافه شده']" out-map="ccvfv"/>
                    </if>
                </if>
            <set field="res" from="emtTarfi?:0"/>
        </actions>
    </service>
    <service verb="calculate" noun="basePay">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <message>${payType}kKkKKkKkkKkKkKkKkKkKkKkKkKkKKkKk</message>
            <set field="res" from="0"/>
            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listRes">
                <econdition field-name="wageType" operator="equals" value="B"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <if condition="payType=='pytDelayed'">
                <message>does come here</message>
                <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listResDElay">
                    <econdition field-name="wageType" operator="equals" value="B"/>
                    <econdition field-name="notHaveDelayedPay" operator="equals" value="Y" />
                    <date-filter valid-date="date"/>
                </entity-find>
                <message>${listResDElay}what list</message>
            </if>
            <set field="paramIds" from="listRes*.parameterSystematicName"/>
            <set field="paramIdsNotDelayedPay" from="listResDElay*.parameterSystematicName"/>
            <iterate list="prevResult.keySet()" entry="itm">
                <if condition="paramIds.contains(itm)">
                    <if condition="payType=='pytDelayed'">
                        <message>${itm} what passed</message>
                    </if>
                    <if condition="payType=='pytDelayed' &amp;&amp;paramIdsNotDelayedPay.contains(itm)"><then>
                        <script>res+=Double.valueOf(moavaqeFlat[itm]?:0)</script>
                    </then><else>
                        <script>res+=prevResult[itm]</script>
                    </else></if>
                </if>
            </iterate>
        </actions>
    </service>
    <service verb="calculate" noun="additionPay">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="res" from="0"/>
            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listRes">
                <econdition field-name="wageType" operator="equals" value="A"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <if condition="payType=='pytDelayed'">
                <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listResDElay">
                    <econdition field-name="wageType" operator="equals" value="A"/>
                    <econdition field-name="notHaveDelayedPay" operator="equals" value="Y" />
                    <date-filter valid-date="date"/>
                </entity-find>
            </if>
            <set field="paramIds" from="listRes*.parameterSystematicName"/>
            <message>${paramIds}_____paramIds</message>
            <set field="paramIdsNotDelayedPay" from="listResDElay*.parameterSystematicName"/>
            <message>${paramIdsNotDelayedPay}_____paramIdsNotDelayedPay</message>
            <iterate list="prevResult.keySet()" entry="itm">
                <if condition="paramIds.contains(itm)">
                    <if condition="payType=='pytDelayed' &amp;&amp;paramIdsNotDelayedPay.contains(itm)"><then>
                        <message>pytDelayed*********** ${itm} ::  ${moavaqeFlat[itm]?:0}</message>
                        <script>res+=Double.valueOf(moavaqeFlat[itm]?:0)</script>
                    </then><else>
                        <message>pytDelayed^^^^^^^^^^^ ${itm} ::  ${prevResult[itm]}</message>
                        <script>res+=prevResult[itm]</script>
                    </else></if>
                </if>
            </iterate>
        </actions>
    </service>

    <service verb="calculate" noun="noeQarardad">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find-one entity-name="mantle.party.Person" value-field="typePeymani">
                <field-map field-name="partyId" from="employeePartyId"/>
            </entity-find-one>
            <set field="noeQarardad" from="typePeymani.PeymaniTypeStatusEnumId"/>
            <!--            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="mp">-->
            <!--                <field-map field-name="enumId" from="typePeymani.PeymaniTypeStatusEnumId"/>-->
            <!--            </entity-find-one>-->
            <set field="res" from="noeQarardad?noeQarardad:'_NA_'"/>
        </actions>
    </service>


    <service verb="calculate" noun="fqlProductivityRewards">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="fqlProductivityRewards" from="0"/>
            <script><![CDATA[
                   def noeQarardad=prevResult.noeQarardad;
                   def ProductivityRewards=prevResult.ProductivityRewards;

                   if(noeQarardad == "qeyewHajmiRecord" ){
                    fqlProductivityRewards = ProductivityRewards *2.5
                   }else{
                    fqlProductivityRewards = ProductivityRewards
                   }
                   ]]>
            </script>
            <set field="res" from="fqlProductivityRewards"/>
        </actions>
    </service>
    <!--wage services-->
    <!--<service verb="calculate" noun="healthDeductions">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        &lt;!&ndash;        <in-parameters>&ndash;&gt;
        &lt;!&ndash;            <parameter name="partyId"/>&ndash;&gt;
        &lt;!&ndash;            <parameter name="fromDate" type="Timestamp"/>&ndash;&gt;
        &lt;!&ndash;            <parameter name="thruDate" type="Timestamp"/>&ndash;&gt;
        &lt;!&ndash;        </in-parameters>&ndash;&gt;
        &lt;!&ndash;        <out-parameters>&ndash;&gt;
        &lt;!&ndash;            <parameter name="healthDeductions" type="list"/>&ndash;&gt;
        &lt;!&ndash;            <parameter name="healthDeductionsTotal"/>&ndash;&gt;
        &lt;!&ndash;        </out-parameters>&ndash;&gt;
        <actions>
            <set field="healthDeductions" from="[]"/>
            <set field="healthDeductionsTotal" from="0"/>
            <set field="fromDate" from="new Timestamp((fromDate.getTime() - fromDate.getTime() % 1000 * 60 * 60 * 24)+1000 * 60 * 60 * 24)"/>
            <set field="thruDate" from="new Timestamp(thruDate.getTime() - thruDate.getTime() % 1000 * 60 * 60 * 24)"/>

            <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="emplParty">
                <econdition field-name="coverdPersonRole" value="empl"/>
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
            </entity-find>

            <iterate list="emplParty" entry="itm">
                <set field="totalAmount" from="0"/>
                <entity-find-one entity-name="mantle.humanres.additional.insuranceAgreement" value-field="insAgreementDetail">
                    <field-map field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                </entity-find-one>
                <set field="insuranceAgreementCode" from="insAgreementDetail.insuranceAgreementCode"/>
                <set field="insuranceAgreementName" from="insAgreementDetail.insuranceAgreementName"/>
                <set field="insuranceAgreementCode" from="insAgreementDetail.insuranceAgreementCode"/>
                <set field="employeeShare" from="insAgreementDetail.employeeShare"/>
                <set field="employeeTakafolShare" from="insAgreementDetail.employeeTakafolShare"/>
                <set field="employeeRelativesShare" from="insAgreementDetail.employeeRelativesShare"/>
                <set field="employeeOtherRelativesShare" from="insAgreementDetail.employeeOtherRelativesShare"/>
                <set field="interalOrgPercent" from="insAgreementDetail.interalOrgPercent"/>
                <set field="interalOrgAmount" from="insAgreementDetail.interalOrgAmount"/>
                <set field="coverdPerson" from="insAgreementDetail.coverdPerson"/>
                <set field="personnelGrp" from="insAgreementDetail.personnelGrp"/>
                <set field="isBasic" from="insAgreementDetail.isBasic"/>
                <set field="employeePercent" from="insAgreementDetail.employeePercent"/>
                <set field="insuranceAgreementId" from="insAgreementDetail.insuranceAgreementId"/>

                <if condition="personnelGrp == 'amani' &amp;&amp; isBasic == 'no'">
                    <set field="emplAmount" from="(1 - (interalOrgPercent/100))*Integer.valueOf(employeeShare)" />
                    <set field="totalAmount" from="emplAmount+totalAmount"/>

                    <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="takafol">
                        <econdition field-name="coverdPersonRole" value="takafol"/>
                        <econdition field-name="employeePartyId" from="employeePartyId"/>
                        <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                        <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                        <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                    </entity-find>
                    <set field="tedadTakafol" from="takafol.size()"/>
                    <set field="takafolAmount" from="(tedadTakafol+1)*Integer.valueOf(employeeTakafolShare)"/>
                    <set field="totalAmount" from="takafolAmount+totalAmount"/>

                    <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="relativeParty">
                        <econdition field-name="coverdPersonRole" value="noTakafol"/>
                        <econdition field-name="employeePartyId" from="employeePartyId"/>
                        <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                        <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                        <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                    </entity-find>

                    <set field="fatherList" from="[]"/>
                    <set field="motherList" from="[]"/>
                    <set field="otherList" from="[]"/>
                    <iterate list="relativeParty" entry="itm2">
                        <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relType">
                            <field-map field-name="fromPartyId" from="itm2.employeePartyId"/>
                            <field-map field-name="toPartyId" from="itm2.partyId"/>
                            <field-map field-name="relationshipTypeEnumId" value="dpndRole"/>
                        </entity-find-one>
                        <if condition="relType.toRoleTypeId == 'rltvFather'">
                            <then>
                                <script>fatherList.add([partyRelationshipId:partyRelationshipId])</script>
                            </then>
                            <else-if condition="relType.toRoleTypeId == 'rltvMother'">
                                <script>motherList.add([partyRelationshipId:partyRelationshipId])</script>
                            </else-if>
                            <else>
                                <script>otherList.add([partyRelationshipId:partyRelationshipId])</script>
                            </else>
                        </if>
                    </iterate>
                    <set field="fatherListCount" from="fatherList.size()"/>
                    <set field="fatherCount" from="Integer.valueOf(fatherListCount)"/>

                    <set field="motherListCount" from="motherList.size()"/>
                    <set field="motherCount" from="Integer.valueOf(motherListCount)"/>

                    <if condition="otherList">
                        <set field="otherListCount" from="otherList.size()"/>
                        <else>
                            <set field="otherListCount" from="0"/>
                        </else>
                    </if>

                    <set field="relativeCount" from="fatherCount+motherCount"/>
                    <set field="relativesAmount" from="relativeCount*Integer.valueOf(employeeRelativesShare)"/>
                    <set field="totalAmount" from="relativesAmount+totalAmount"/>

                    <set field="otherRelativeCount" from="otherListCount"/>
                    <set field="otherRelativeAmount" from="otherRelativeCount*Integer.valueOf(employeeOtherRelativesShare)"/>
                    <set field="totalAmount" from="otherRelativeAmount+totalAmount"/>

                    <script>healthDeductions.add([insuranceAgreementId:insuranceAgreementId,insuranceAgreementCode:insuranceAgreementCode,insuranceAgreementName:insuranceAgreementName,totalAmount:totalAmount])</script>
                    <set field="healthDeductionsTotal" from="healthDeductionsTotal+totalAmount"/>
                </if>

                <if condition="personnelGrp == 'peymani' &amp;&amp; isBasic == 'no'">
                    <if condition="coverdPerson == 'empl'">
                        <set field="emplAmount" from="Integer.valueOf(employeeShare)-interalOrgAmount" />
                        <set field="totalAmount" from="emplAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="takafol">
                            <econdition field-name="coverdPersonRole" value="takafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>
                        <set field="tedadTakafol" from="takafol.size()"/>
                        <set field="takafolAmount" from="(tedadTakafol+1)*Integer.valueOf(employeeTakafolShare)"/>
                        <set field="totalAmount" from="takafolAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="relativeParty">
                            <econdition field-name="coverdPersonRole" value="noTakafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>

                        <set field="fatherList" from="[]"/>
                        <set field="motherList" from="[]"/>
                        <set field="otherList" from="[]"/>
                        <iterate list="relativeParty" entry="itm2">
                            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relType">
                                <field-map field-name="fromPartyId" from="itm2.employeePartyId"/>
                                <field-map field-name="toPartyId" from="itm2.partyId"/>
                                <field-map field-name="relationshipTypeEnumId" value="dpndRole"/>
                            </entity-find-one>
                            <if condition="relType.toRoleTypeId == 'rltvFather'">
                                <then>
                                    <script>fatherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </then>
                                <else-if condition="relType.toRoleTypeId == 'rltvMother'">
                                    <script>motherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else-if>
                                <else>
                                    <script>otherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else>
                            </if>
                        </iterate>
                        <set field="fatherListCount" from="fatherList.size()"/>
                        <set field="fatherCount" from="Integer.valueOf(fatherListCount)"/>

                        <set field="motherListCount" from="motherList.size()"/>
                        <set field="motherCount" from="Integer.valueOf(motherListCount)"/>

                        <if condition="otherList">
                            <set field="otherListCount" from="otherList.size()"/>
                            <else>
                                <set field="otherListCount" from="0"/>
                            </else>
                        </if>

                        <set field="relativeCount" from="fatherCount+motherCount"/>
                        <set field="relativesAmount" from="relativeCount*Integer.valueOf(employeeRelativesShare)"/>
                        <set field="totalAmount" from="relativesAmount+totalAmount"/>

                        <set field="otherRelativeCount" from="otherListCount"/>
                        <set field="otherRelativeAmount" from="otherRelativeCount*Integer.valueOf(employeeOtherRelativesShare)"/>
                        <set field="totalAmount" from="otherRelativeAmount+totalAmount"/>

                        <script>healthDeductions.add([insuranceAgreementId:insuranceAgreementId,insuranceAgreementCode:insuranceAgreementCode,insuranceAgreementName:insuranceAgreementName,totalAmount:totalAmount])</script>
                        <set field="healthDeductionsTotal" from="healthDeductionsTotal+totalAmount"/>

                    </if>
                    <if condition="coverdPerson == 'takafol'">
                        <set field="emplAmount" from="Integer.valueOf(employeeShare)" />
                        <set field="totalAmount" from="emplAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="takafol">
                            <econdition field-name="coverdPersonRole" value="takafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>
                        <set field="tedadTakafol" from="takafol.size()"/>
                        <set field="takafolAmount1" from="(tedadTakafol+1)*Integer.valueOf(employeeTakafolShare)"/>
                        <set field="discount" from="(tedadTakafol+1)*interalOrgAmount"/>
                        <set field="takafolAmount" from="takafolAmount1 - discount"/>
                        <set field="totalAmount" from="takafolAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="relativeParty">
                            <econdition field-name="coverdPersonRole" value="noTakafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>

                        <set field="fatherList" from="[]"/>
                        <set field="motherList" from="[]"/>
                        <set field="otherList" from="[]"/>
                        <iterate list="relativeParty" entry="itm2">
                            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relType">
                                <field-map field-name="fromPartyId" from="itm2.employeePartyId"/>
                                <field-map field-name="toPartyId" from="itm2.partyId"/>
                                <field-map field-name="relationshipTypeEnumId" value="dpndRole"/>
                            </entity-find-one>
                            <if condition="relType.toRoleTypeId == 'rltvFather'">
                                <then>
                                    <script>fatherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </then>
                                <else-if condition="relType.toRoleTypeId == 'rltvMother'">
                                    <script>motherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else-if>
                                <else>
                                    <script>otherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else>
                            </if>
                        </iterate>
                        <set field="fatherListCount" from="fatherList.size()"/>
                        <set field="fatherCount" from="Integer.valueOf(fatherListCount)"/>

                        <set field="motherListCount" from="motherList.size()"/>
                        <set field="motherCount" from="Integer.valueOf(motherListCount)"/>

                        <if condition="otherList">
                            <set field="otherListCount" from="otherList.size()"/>
                            <else>
                                <set field="otherListCount" from="0"/>
                            </else>
                        </if>

                        <set field="relativeCount" from="fatherCount+motherCount"/>
                        <set field="relativesAmount" from="relativeCount*Integer.valueOf(employeeRelativesShare)"/>
                        <set field="totalAmount" from="relativesAmount+totalAmount"/>

                        <set field="otherRelativeCount" from="otherListCount"/>
                        <set field="otherRelativeAmount" from="otherRelativeCount*Integer.valueOf(employeeOtherRelativesShare)"/>
                        <set field="totalAmount" from="otherRelativeAmount+totalAmount"/>

                        <script>healthDeductions.add([insuranceAgreementId:insuranceAgreementId,insuranceAgreementCode:insuranceAgreementCode,insuranceAgreementName:insuranceAgreementName,totalAmount:totalAmount])</script>
                        <set field="healthDeductionsTotal" from="healthDeductionsTotal+totalAmount"/>


                    </if>
                    <if condition="coverdPerson == 'noTakafol'">
                        <set field="emplAmount" from="Integer.valueOf(employeeShare)" />
                        <set field="totalAmount" from="emplAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="takafol">
                            <econdition field-name="coverdPersonRole" value="takafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>
                        <set field="tedadTakafol" from="takafol.size()"/>
                        <set field="takafolAmount" from="(tedadTakafol+1)*Integer.valueOf(employeeTakafolShare)"/>
                        <set field="totalAmount" from="takafolAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="relativeParty">
                            <econdition field-name="coverdPersonRole" value="noTakafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>

                        <set field="fatherList" from="[]"/>
                        <set field="motherList" from="[]"/>
                        <set field="otherList" from="[]"/>
                        <iterate list="relativeParty" entry="itm2">
                            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relType">
                                <field-map field-name="fromPartyId" from="itm2.employeePartyId"/>
                                <field-map field-name="toPartyId" from="itm2.partyId"/>
                                <field-map field-name="relationshipTypeEnumId" value="dpndRole"/>
                            </entity-find-one>
                            <if condition="relType.toRoleTypeId == 'rltvFather'">
                                <then>
                                    <script>fatherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </then>
                                <else-if condition="relType.toRoleTypeId == 'rltvMother'">
                                    <script>motherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else-if>
                                <else>
                                    <script>otherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else>
                            </if>
                        </iterate>
                        <set field="fatherListCount" from="fatherList.size()"/>
                        <set field="fatherCount" from="Integer.valueOf(fatherListCount)"/>

                        <set field="motherListCount" from="motherList.size()"/>
                        <set field="motherCount" from="Integer.valueOf(motherListCount)"/>

                        <if condition="otherList">
                            <set field="otherListCount" from="otherList.size()"/>
                            <else>
                                <set field="otherListCount" from="0"/>
                            </else>
                        </if>

                        <set field="relativeCount" from="fatherCount+motherCount"/>
                        <set field="relativesAmount1" from="relativeCount*Integer.valueOf(employeeRelativesShare)"/>
                        <set field="relativesDiscount" from="relativeCount*interalOrgAmount"/>
                        <set field="relativesAmount" from="relativesAmount1 - relativesDiscount"/>
                        <set field="totalAmount" from="relativesAmount+totalAmount"/>

                        <set field="otherRelativeCount" from="otherListCount"/>
                        <set field="otherRelativeAmount1" from="otherRelativeCount*Integer.valueOf(employeeOtherRelativesShare)"/>
                        <set field="otherRelativeDiscount" from="otherRelativeCount*interalOrgAmount"/>
                        <set field="otherRelativeAmount" from="otherRelativeAmount1 - otherRelativeDiscount"/>
                        <set field="totalAmount" from="otherRelativeAmount+totalAmount"/>

                        <script>healthDeductions.add([insuranceAgreementId:insuranceAgreementId,insuranceAgreementCode:insuranceAgreementCode,insuranceAgreementName:insuranceAgreementName,totalAmount:totalAmount])</script>
                        <set field="healthDeductionsTotal" from="healthDeductionsTotal+totalAmount"/>
                    </if>
                    <if condition="coverdPerson == 'emplWTakafol'">
                        <set field="emplAmount" from="Integer.valueOf(employeeShare)-interalOrgAmount" />
                        <set field="totalAmount" from="emplAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="takafol">
                            <econdition field-name="coverdPersonRole" value="takafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>
                        <set field="tedadTakafol" from="takafol.size()"/>
                        <set field="takafolAmount1" from="(tedadTakafol+1)*Integer.valueOf(employeeTakafolShare)"/>
                        <set field="discount" from="(tedadTakafol+1)*interalOrgAmount"/>
                        <set field="takafolAmount" from="takafolAmount1 - discount"/>
                        <set field="totalAmount" from="takafolAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="relativeParty">
                            <econdition field-name="coverdPersonRole" value="noTakafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>

                        <set field="fatherList" from="[]"/>
                        <set field="motherList" from="[]"/>
                        <set field="otherList" from="[]"/>
                        <iterate list="relativeParty" entry="itm2">
                            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relType">
                                <field-map field-name="fromPartyId" from="itm2.employeePartyId"/>
                                <field-map field-name="toPartyId" from="itm2.partyId"/>
                                <field-map field-name="relationshipTypeEnumId" value="dpndRole"/>
                            </entity-find-one>
                            <if condition="relType.toRoleTypeId == 'rltvFather'">
                                <then>
                                    <script>fatherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </then>
                                <else-if condition="relType.toRoleTypeId == 'rltvMother'">
                                    <script>motherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else-if>
                                <else>
                                    <script>otherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else>
                            </if>
                        </iterate>
                        <set field="fatherListCount" from="fatherList.size()"/>
                        <set field="fatherCount" from="Integer.valueOf(fatherListCount)"/>

                        <set field="motherListCount" from="motherList.size()"/>
                        <set field="motherCount" from="Integer.valueOf(motherListCount)"/>

                        <if condition="otherList">
                            <set field="otherListCount" from="otherList.size()"/>
                            <else>
                                <set field="otherListCount" from="0"/>
                            </else>
                        </if>

                        <set field="relativeCount" from="fatherCount+motherCount"/>
                        <set field="relativesAmount" from="relativeCount*Integer.valueOf(employeeRelativesShare)"/>
                        <set field="totalAmount" from="relativesAmount+totalAmount"/>

                        <set field="otherRelativeCount" from="otherListCount"/>
                        <set field="otherRelativeAmount" from="otherRelativeCount*Integer.valueOf(employeeOtherRelativesShare)"/>
                        <set field="totalAmount" from="otherRelativeAmount+totalAmount"/>

                        <script>healthDeductions.add([insuranceAgreementId:insuranceAgreementId,insuranceAgreementCode:insuranceAgreementCode,insuranceAgreementName:insuranceAgreementName,totalAmount:totalAmount])</script>
                        <set field="healthDeductionsTotal" from="healthDeductionsTotal+totalAmount"/>
                    </if>
                    <if condition="coverdPerson == 'all'">
                        <set field="emplAmount" from="Integer.valueOf(employeeShare)-interalOrgAmount" />
                        <set field="totalAmount" from="emplAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="takafol">
                            <econdition field-name="coverdPersonRole" value="takafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>
                        <set field="tedadTakafol" from="takafol.size()"/>
                        <set field="takafolAmount1" from="(tedadTakafol+1)*Integer.valueOf(employeeTakafolShare)"/>
                        <set field="discount" from="(tedadTakafol+1)*interalOrgAmount"/>
                        <set field="takafolAmount" from="takafolAmount1 - discount"/>
                        <set field="totalAmount" from="takafolAmount+totalAmount"/>

                        <entity-find entity-name="mantle.humanres.ability.partyInsuranceAgreementWithDetail" list="relativeParty">
                            <econdition field-name="coverdPersonRole" value="noTakafol"/>
                            <econdition field-name="employeePartyId" from="employeePartyId"/>
                            <econdition field-name="insuranceAgreementId" from="itm.insuranceAgreementId"/>
                            <econdition field-name="fromDate" operator="less-equals" from="fromDate"/>
                            <econdition field-name="thruDate" operator="greater-equals" from="thruDate"/>
                        </entity-find>

                        <set field="fatherList" from="[]"/>
                        <set field="motherList" from="[]"/>
                        <set field="otherList" from="[]"/>
                        <iterate list="relativeParty" entry="itm2">
                            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relType">
                                <field-map field-name="fromPartyId" from="itm2.employeePartyId"/>
                                <field-map field-name="toPartyId" from="itm2.partyId"/>
                                <field-map field-name="relationshipTypeEnumId" value="dpndRole"/>
                            </entity-find-one>
                            <if condition="relType.toRoleTypeId == 'rltvFather'">
                                <then>
                                    <script>fatherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </then>
                                <else-if condition="relType.toRoleTypeId == 'rltvMother'">
                                    <script>motherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else-if>
                                <else>
                                    <script>otherList.add([partyRelationshipId:partyRelationshipId])</script>
                                </else>
                            </if>
                        </iterate>
                        <set field="fatherListCount" from="fatherList.size()"/>
                        <set field="fatherCount" from="Integer.valueOf(fatherListCount)"/>

                        <set field="motherListCount" from="motherList.size()"/>
                        <set field="motherCount" from="Integer.valueOf(motherListCount)"/>

                        <if condition="otherList">
                            <set field="otherListCount" from="otherList.size()"/>
                            <else>
                                <set field="otherListCount" from="0"/>
                            </else>
                        </if>

                        <set field="relativeCount" from="fatherCount+motherCount"/>
                        <set field="relativesAmount1" from="relativeCount*Integer.valueOf(employeeRelativesShare)"/>
                        <set field="relativesDiscount" from="relativeCount*interalOrgAmount"/>
                        <set field="relativesAmount" from="relativesAmount1 - relativesDiscount"/>
                        <set field="totalAmount" from="relativesAmount+totalAmount"/>

                        <set field="otherRelativeCount" from="otherListCount"/>
                        <set field="otherRelativeAmount1" from="otherRelativeCount*Integer.valueOf(employeeOtherRelativesShare)"/>
                        <set field="otherRelativeDiscount" from="otherRelativeCount*interalOrgAmount"/>
                        <set field="otherRelativeAmount" from="otherRelativeAmount1 - otherRelativeDiscount"/>
                        <set field="totalAmount" from="otherRelativeAmount+totalAmount"/>

                        <script>healthDeductions.add([insuranceAgreementId:insuranceAgreementId,insuranceAgreementCode:insuranceAgreementCode,insuranceAgreementName:insuranceAgreementName,totalAmount:totalAmount])</script>
                        <set field="healthDeductionsTotal" from="healthDeductionsTotal+totalAmount"/>
                    </if>
                </if>

                <if condition="isBasic == 'yes'">
                    <entity-find-one entity-name="mantle.humanres.ability.HrParameterResultWithDetail" value-field="mabna">
                        <field-map field-name="parameterId" value="22"/>
                        <field-map field-name="fromPartyId" from="employeePartyId"/>
                    </entity-find-one>
                    <if condition="mabna">
                        <then>
                            <set field="hoquqMabna" from="mabna.point"/>
                        </then>
                        <else>
                            <set field="hoquqMabna" from="0"/>
                        </else>
                    </if>
                    <set field="totalAmount" from="Integer.valueOf(employeePercent)*hoquqMabna/100"/>
                    <script>healthDeductions.add([insuranceAgreementId:insuranceAgreementId,insuranceAgreementCode:insuranceAgreementCode,insuranceAgreementName:insuranceAgreementName,totalAmount:totalAmount])</script>
                    <set field="healthDeductionsTotal" from="healthDeductionsTotal+totalAmount"/>
                </if>
                <set field="res" from="healthDeductionsTotal"/>
            </iterate>
        </actions>
    </service>-->


    <!--    ___***___***___***  فیش حقوقی   ***___***___***___  -->

    <service verb="calculate"  noun="padashVosoulNahai" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="padashVosoulNahai" from="0" />
            <set field="padashVosoul" from="prevResult.padashVosoul?:0"/>
            <set field="padashVosoulSaat" from="prevResult.padashVosoulSaat?:0"/>
            <set field="harSaatEzafKarAmani" from="prevResult.harSaatEzafKarAmani?:0"/>

            <if condition="padashVosoul==0 || padashVosoul==null ">
                <set field="padashVosoulNahai"  from="Math.round((padashVosoulSaat*harSaatEzafKarAmani)?:0)"/>
                <else>
                    <set field="padashVosoulNahai" from="padashVosoul" />
                </else>
            </if>
            <set field="res" from="padashVosoulNahai?:0"/>
        </actions>
    </service>
    <service verb="calculate"  noun="mashmuleBime" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <message>************mashmuleBime_____mashmuleBime**************</message>
            <set field="mashmuleBime" from="0"/>
            <iterate list="prevResult.keySet()" entry="pla">
                <entity-find entity-name="mantle.humanres.ability.HrParameter" list="ress">
                    <econdition field-name="parameterSystematicName" from="pla"/>
                    <date-filter valid-date="date"/>
                    <order-by field-name="-timestamp"/>
                </entity-find>
                <if condition="payType=='pytDelayed'">
                    <entity-find entity-name="mantle.humanres.ability.HrParameter" list="listResDElay">
                        <econdition field-name="parameterSystematicName" from="pla"/>
                        <econdition field-name="notHaveDelayedPay" operator="equals" value="Y" />
                        <date-filter valid-date="date"/>
                    </entity-find>
                </if>
                <if condition="listResDElay?.size()>0"><then>
                    <if condition="ress[0] &amp;&amp;ress[0]?.isInsurance=='Y'">
                        <message>_____${ress[0].title} :*********: ${moavaqeFlat[pla]?:0}</message>
                        <set field="mashmuleBime" from="mashmuleBime+Double.valueOf(moavaqeFlat[pla]?:0)"/>
                    </if>
                </then><else>
                    <if condition="ress[0] &amp;&amp;ress[0]?.isInsurance=='Y'">
                        <message>_____${ress[0].title} :^^^^^^^^^: ${prevResult[pla]?:0}</message>
                        <set field="mashmuleBime" from="mashmuleBime+Double.valueOf(prevResult[pla]?:0)"/>
                    </if>
                </else></if>
            </iterate>
            <set field="res" from="mashmuleBime?:0"/>
            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="ressSaqf">
                <econdition field-name="parameterId" from="'saqfebime'"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <set field="saqf" from="Double.valueOf(ressSaqf[0]?.point?:0)/30*prevResult.modatKarkard"/>
            <if condition="res &gt; saqf">
                <set field="res" from="saqf"/>
            </if>
        </actions>
    </service>


    <service verb="calculate"  noun="bimeHadeseKarfarma" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="mashmuleBime" from="0"/>
            <entity-find entity-name="mantle.humanres.additional.partyInsuranceAgreement" list="members">
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="insuranceAgreementId" from="hrParameter.insuranceAgreementId"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <if condition="members[0]">
                <set field="mashmuleBimeF" from="Double.valueOf(prevResult.mashmuleBime?:0)"/>
                <set field="mashmuleBime" from="Math.floor((mashmuleBimeF)*2.98/100)"/>
            </if>
            <set field="res" from="mashmuleBime?:0"/>
        </actions>
    </service>
    <service verb="calculate"  noun="bimeHadeseKaregar" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="mashmuleBime" from="0"/>
            <entity-find entity-name="mantle.humanres.additional.partyInsuranceAgreement" list="members">
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="insuranceAgreementId" from="hrParameter.insuranceAgreementId"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <if condition="members[0]">
                <set field="mashmuleBime" from="Math.floor((prevResult.mashmuleBime?:0)*1.92/100)"/>
            </if>
            <set field="res" from="mashmuleBime?:0"/>
        </actions>
    </service>
    <service verb="calculate"  noun="sandoqKaregar" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="sandoqKaregar" from="0"/>
            <entity-find entity-name="mantle.humanres.repose.PartyConvenience" list="members">
                <econdition field-name="partyId" from="employeePartyId"/>
                <econdition field-name="convenienceCreditId" from="hrParameter.convenienceCreditId"/>
<!--                <date-filter valid-date="date" from-field-name="FirstRepayDate" thru-field-name="thruDate"/>-->
                <order-by field-name="-FirstRepayDate"/>
            </entity-find>

<!--            <if condition="members[0]">-->
                <set field="sandoqKaregar" from="Math.floor((prevResult.basePay?:0)*5/100)"/>
<!--            </if>-->
            <set field="res" from="sandoqKaregar?:0"/>
        </actions>
    </service>
    <service verb="calculate"  noun="sandoqKarfarma" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="sandoqKarfarma" from="0"/>
            <entity-find entity-name="mantle.humanres.repose.PartyConvenience" list="members">
<!--                <econdition field-name="partyId" from="employeePartyId"/>-->
                <econdition field-name="convenienceCreditId" from="hrParameter.convenienceCreditId"/>
<!--                <date-filter valid-date="date" from-field-name="FirstRepayDate" thru-field-name="thruDate"/>-->
                <order-by field-name="-FirstRepayDate"/>
            </entity-find>
            <if condition="members[0]">
                <set field="sandoqKarfarma" from="Math.floor((prevResult.basePay?:0)*7/100)"/>
            </if>
            <set field="res" from="sandoqKarfarma?:0"/>
        </actions>
    </service>
    <service verb="calculate"  noun="aqsatSabet" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="aqsat" from="0"/>
            <!--<entity-find entity-name="mantle.humanres.repose.PartyConvenience" list="members">
                <econdition field-name="partyId" from="employeePartyId"/>
                <econdition field-name="convenienceCreditId" from="hrParameter.convenienceCreditId"/>
                <date-filter valid-date="date" from-field-name="FirstRepayDate" thru-field-name="thruDate"/>
                <order-by field-name="-FirstRepayDate"/>
            </entity-find>
            <if condition="members[0]">
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="emplParameterList">
                    <econdition field-name="parameterId" from="hrParameter.parameterId" />
                    <econdition field-name="fromPartyId" from="employeePartyId" />
                    <econdition field-name="payDate" operator="less" from="date" />
                    &lt;!&ndash;BARAYE QOME KE MANDE VASE BORJE SE CONVERT SHODE VALI FISH HA AZ ESFAND VUJUD DARE&ndash;&gt;
                    <econditions combine="or">
                        <econdition field-name="payDate" operator="greater-equals" from="new Timestamp(1624341275000)" />
                        <econdition field-name="payDate" operator="less-equals" from="new Timestamp(1613541275000)" />
                    </econditions>
                    <order-by field-name="parameterId"/>
                </entity-find>
                <set field="totalPaid" from="0"/>
                <if condition="emplParameterList.size()>0"><set field="totalPaid" from="emplParameterList.point.sum()"/></if>
                <set field="aqsat" from="members[0].payAmount"/>
                <if condition="!!members[0].totalPayment &amp;&amp;members[0].totalPayment!=0">
                    <if condition="aqsat &gt; ((members[0].totalPayment?:0) - (totalPaid?:0))">
                        <set field="aqsat" from="((members[0].totalPayment?:0) - totalPaid)"/>
                    </if>
                </if>
            </if>
            <set field="res" from="aqsat?:0"/>-->
            <service-call name="hrService.getRemain#convenience" in-map="[parameterId:hrParameter.parameterId,partyId:employeePartyId,payDate:date,isSkip:false]" out-map="res2"/>
            <set field="res" from="res2.toPayAmount"/>
            <if condition="res&lt;0">
                <set field="res" from="0"/>
            </if>
        </actions>
    </service>



    <service verb="calculate"  noun="bimeSabet" >
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="insPay" from="0"/>
            <entity-find entity-name="mantle.humanres.additional.partyInsuranceAgreement" list="members">
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="insuranceAgreementId" from="hrParameter.insuranceAgreementId"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <if condition="members[0]">
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="emplParameterList">
                    <econdition field-name="parameterId" from="hrParameter.parameterId" />
                    <econdition field-name="fromPartyId" from="employeePartyId" />
                    <econdition field-name="payDate" operator="less" from="date" />
                    <econdition field-name="deleteByPay" operator="is-null" />
                    <!--BARAYE QOME KE MANDE VASE BORJE SE CONVERT SHODE VALI FISH HA AZ ESFAND VUJUD DARE-->
                    <econditions combine="or">
                        <econdition field-name="payDate" operator="greater-equals" from="new Timestamp(1624341275000)" />
                        <econdition field-name="payDate" operator="less-equals" from="new Timestamp(1613541275000)" />
                    </econditions>
                    <order-by field-name="parameterId"/>
                </entity-find>
                <set field="totalPaid" from="0"/>
                <if condition="emplParameterList.size()>0"><set field="totalPaid" from="emplParameterList.point.sum()"/></if>
                <set field="insPayTtl" from="0"/>
                <iterate list="members" entry="itm">
                    <set field="insPay" from="itm.payAmount"/>

                    <!--
                        vaqti dota bime az ye no bime be yeki takhsis bedin jame
                        aqsat har mah kam mishe va miad avalin radifo zudtar az tarikh tasfie mikone va baes mishe qesda beham berize
                    <if condition="!!itm.totalPayAmount &amp;&amp;itm.totalPayAmount!=0">
                        <if condition="insPay &gt; ((itm.totalPayAmount?:0) - totalPaid)">
                            <set field="insPay" from="((itm.totalPayAmount?:0) - totalPaid)"/>
                            <if condition="insPay &lt; 0">
                                <set field="insPay" from="0"/>
                            </if>
                        </if>
                    </if>-->
                    <set field="insPayTtl" from="insPayTtl + insPay"/>
                </iterate>
            </if>

            <set field="res" from="insPayTtl?:0"/>
            <if condition="res&lt;0">
                <set field="res" from="0"/>
            </if>
        </actions>
    </service>

    <service verb="calculate" noun="peymaniEmtiazMadrakTahsili">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="noeQarardad" from="prevResult.noeQarardad?:0"/>
            <message>${noeQarardad}_______noeQarardad</message>
            <set field="emtiazMadrakTahsili" from="0"/>

            <if condition="noeQarardad == 'qeyewHajmiRecord'">
                <service-call name="hrService.get#partyQualification" in-map="context+[partyId:employeePartyId]" out-map="context"/>contractWorkerPoint
                <set field="pcltEducation" from="qual.pcltEducation"/>
                <entity-find entity-name="mantle.humanres.paramCalc.educationPoint" list="eduP">
                    <econdition field-name="pcltEducation" from="pcltEducation"/>
                    <econdition field-name="requirementPoint" operator="greater-equals" from="1"/>
                    <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                    <order-by field-name="-fromDate,-timestamp"/>
                </entity-find>
                <!--                <set field="verific ationStatusId" from="'QlVerNotVerified'"/>-->
                <!--                <if condition="verificationStatusId == 'QlVerNotVerified'" >-->
                <set field="emtiazMadrakTahsili" from="((eduP[0].edPoint)/2)*1170" />
                <!--                </if>-->
            </if>
            <set field="res" from="emtiazMadrakTahsili"/>
            <set field="res" from="Math.round(res)"/>
        </actions>
    </service>

    <service verb="calculate" noun="peymaniEmtiazGpEstehqaqi">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set   field="emtiazGpEstehqaqi" from="0" />
            <set   field="GpEstehqaqi" from="0" />

            <script><![CDATA[
                     GpEstehqaqi = prevResult.GpEstehqaqi
                     ;]]></script>

<!--            <entity-find entity-name="mantle.humanres.rate.PayGrade" list="payGrade">-->
<!--                <econdition field-name="gpNumbre" from="GpEstehqaqi"/>-->
<!--            </entity-find>-->
<!--            <if condition="payGrade[0]"> <set field="payGradeId" from="payGrade[0].payGradeId"/></if>-->
            <message>${GpEstehqaqi}--------------________-------</message>
            <entity-find entity-name="mantle.humanres.ability.GroupDue" list="jbPoint">
                <date-filter valid-date="ec.l10n.parseTimestamp((ec.l10n.format(date,'yyyy-MM-dd')+' 23:59:00'),'yyyy-MM-dd HH:mm:ss')"/>
                <order-by field-name="-fromDate"/>
                <econdition field-name="gpNumber" from="GpEstehqaqi"/>
            </entity-find>
            <if condition="jbPoint[0]">
                <set field="emtiazGpEstehqaqi" from="jbPoint[0].point"/>
            </if>
            <set field="res" from="(emtiazGpEstehqaqi?:0)"/>
        </actions>
    </service>

    <service  verb="calculate" noun="bimeKol">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find entity-name="mantle.humanres.additional.partyInsuranceAgreement" list="piaList">
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="insuranceAgreementId" from="hrParameter.insuranceAgreementId"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.additional.insuranceAgreement"  list="iAG">
                <econdition field-name="insuranceAgreementId" from="hrParameter.insuranceAgreementId"/>
            </entity-find>

            <set field="totalInsurance" from="0"/>
            <set field="takafolSize" from="0"/>
            <set field="nTakafolChildSize" from="0"/>
            <set field="nTakafolParentsSize" from="0"/>
            <if condition="piaList[0]">
            <iterate list="piaList" entry="PIA">
                <set field="coverdPersonRole" from="PIA.coverdPersonRole"/>
                <if condition="coverdPersonRole=='takafol'">
                    <set field="takafolSize" from="takafolSize+1"/>
                    <else-if condition="coverdPersonRole=='noTakafolChilderen'">
                        <set field="nTakafolChildSize" from="nTakafolChildSize+1"/>
                    </else-if><else-if condition="coverdPersonRole=='noTakafolParents'">
                    <set field="nTakafolParentsSize" from="nTakafolParentsSize+1"/>
                    <else-if condition="coverdPersonRole =='noTakafol'">
                        <set field="nTakafolParentsSize" from="nTakafolParentsSize+1"/>
                    </else-if>
                </else-if>
                </if>
                <set field="employeeTakafolShare" from="takafolSize*Double.valueOf(iAG[0]?.employeeTakafolShare?:0)"/>
                <set field="employeeOtherRelativesShare" from="nTakafolChildSize*Double.valueOf(iAG[0]?.employeeOtherRelativesShare?:0)"/>
                <set field="employeeRelativesShare" from="nTakafolParentsSize*Double.valueOf(iAG[0]?.employeeRelativesShare?:0)"/>

                <set field="totalInsurance" from="employeeRelativesShare?:0"/>
            </iterate>
            </if>
            <set field="res" from="Math.round(totalInsurance)"/>
        </actions>
    </service>
    <service  verb="calculate" noun="bimeKolTakafol">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find entity-name="mantle.humanres.additional.partyInsuranceAgreement" list="piaList">
                <econdition field-name="employeePartyId" from="employeePartyId"/>
                <econdition field-name="insuranceAgreementId" from="hrParameter.insuranceAgreementId"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.additional.insuranceAgreement"  list="iAG">
                <econdition field-name="insuranceAgreementId" from="hrParameter.insuranceAgreementId"/>
            </entity-find>
            <set field="totalInsurance" from="0"/>
            <set field="takafolSize" from="0"/>
            <set field="nTakafolChildSize" from="0"/>
            <set field="nTakafolParentsSize" from="0"/>
            <if condition="piaList[0]">
            <iterate list="piaList" entry="PIA">
                <set field="coverdPersonRole" from="PIA.coverdPersonRole"/>
                <if condition="coverdPersonRole=='takafol'">
                    <set field="takafolSize" from="takafolSize+1"/>
                    <else-if condition="coverdPersonRole=='noTakafolChilderen'">
                        <set field="nTakafolChildSize" from="nTakafolChildSize+1"/>
                    </else-if><else-if condition="coverdPersonRole=='noTakafolParents'">
                    <set field="nTakafolParentsSize" from="nTakafolParentsSize+1"/>
                </else-if>
                </if>
                <set field="employeeTakafolShare" from="takafolSize*Double.valueOf(iAG[0]?.employeeTakafolShare?:0)"/>
                <set field="employeeShare" from="Double.valueOf(iAG[0]?.employeeShare?:0)"/>
                <set field="employeeOtherRelativesShare" from="nTakafolChildSize*Double.valueOf(iAG[0]?.employeeOtherRelativesShare?:0)"/>
                <set field="employeeRelativesShare" from="nTakafolParentsSize*Double.valueOf(iAG[0]?.employeeRelativesShare?:0)"/>

                <set field="totalInsurance" from="(employeeTakafolShare?:0) + (employeeShare?:0)"/>
            </iterate>
            </if>
            <set field="res" from="Math.round(totalInsurance)"/>
        </actions>
    </service>
    <service noun="tatbiqDiff" verb="calculate">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <set field="tatbiqDiff" from="0"/>
            <entity-find entity-name="mantle.humanres.employment.EmploymentAndRelationship" list="nes">
                <econdition field-name="fromPartyId" from="employeePartyId" />
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="submitEmploymentTitle"  from="'تطبیق با طرح طبقه بندی مشاغل جدید'"/>
            </entity-find>
            <if condition="nes[0]">
                <set field="partyRelationshipId" from="nes[0].partyRelationshipId"/>
                <message>${partyRelationshipId}mm1111111111111111111hreherehereherhhhhhhhhhhhhhhere</message>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResult" list="prss">
                    <econdition field-name="parameterId" value="mtt1400"/>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                </entity-find><if condition="prss[0]">
                <set field="tatbiqDiff" from="prss[0].point?:0"/></if>
            </if>
            <message>${tatbiqDiff}mm1111111111111111111hreherehereherhhhhhhhhhhhhhhere</message>
            <set field="res" from="tatbiqDiff?tatbiqDiff:0"/>
        </actions>
    </service>

    <service noun="cnvPositionBranch" verb="calculate">
        <implements service="mantle.humanres.EmploymentServices.calculate#Adjustment"/>
        <actions>
            <entity-find entity-name="mantle.humanres.position.EmplPositionFulFillment" list="ffr">
                <econdition field-name="partyId" from="employeePartyId" />
                <econdition field-name="noeEntesabEnumId" from="'netnAsli'" />
                <order-by field-name="-fromDate,-timestamp"/>
                <date-filter valid-date="date"/>
            </entity-find>

            <entity-find entity-name="mantle.humanres.position.EmplPosition" list="emplList">
                <econdition field-name="emplPositionId" from="ffr[0]?.emplPositionId" />
            </entity-find>
            <entity-find entity-name="mantle.humanres.ability.HrParameterAppl" list="ApplRI">
                <econdition field-name="emplPositionId" from="emplPositionId"/>
                <econdition field-name="parameterId" from="'posClassGroupHistory'"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <if condition="!ApplRI[0]">
                <set field="EmplPositionClassGroupId" from="emplList[0]?.EmplPositionClassGroupId"/>
                <else>
                    <set field="EmplPositionClassGroupId" from="ApplRI[0].point"/>
                </else>
            </if>
            <if condition="emplList[0]">
                <entity-find entity-name="mantle.humanres.position.EmplPositionClassGroup" list="classG">
                    <econdition field-name="EmplPositionClassGroupId" from="EmplPositionClassGroupId" />
                </entity-find>
                <set field="desc" from="classG[0]?.description"/>
            </if>
            <set field="res" from="desc?:0"/>
        </actions>
    </service>



</services>





