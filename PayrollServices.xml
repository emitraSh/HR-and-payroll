<?xml version="1.0" encoding="UTF-8"?>
<!-- Taraan License -->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">


    <service verb="export" noun="payrollExcel">
        <in-parameters>
            <parameter name="employmentPayHistoryIdList" type="List" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="payrollFlatList" />
            <parameter name="csvTxt" />
        </out-parameters>
        <actions>
            <set field="payrollFlatList" from="[]"/>
            <set field="payrollFlat" from="[:]"/>
            <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="payrolls" >
                <econdition field-name="employmentPayHistoryId" operator="in" from="employmentPayHistoryIdList"/>
            </entity-find>
            <entity-find entity-name="mantle.humanres.ability.HrParameter" list="titles" >
                <econdition field-name="parameterTypeEnumId"  from="'WagePrt'"/>
                <econdition field-name="employmentCalcTypeEnumId" operator="not-equals"  from="'ectRegVndr'" or-null="true"/>
                <order-by field-name="wageType,sequenceNum,hrParameterId"/>
            </entity-find>
            <script>
                payrollFlat.put('partyId','شناسه')
                payrollFlat.put('firstName','نام')
                payrollFlat.put('lastName','نام خانوادگی')
                payrollFlat.put('ptidPersonalCd','کدپرسنلی')
                payrollFlat.put('periodName','کدپرسنلی')
                payrollFlat.put('payAmount','خالص پرداختی')
            </script>
            <iterate list="titles" entry="ttt">
                <script>
                    payrollFlat.put(ttt.parameterSystematicName,ttt.title+"("+ttt.wageType+")")
                </script>
            </iterate>
            <script>
                payrollFlatList.add(payrollFlat)
            </script>
            <iterate list="payrolls" entry="ppp">
                <set field="payrollFlat" from="[:]"/>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultAndParam" list="rss" >
                    <econdition field-name="partyRelationshipId"  from="ppp.partyRelationshipId"/>
                    <econdition field-name="employmentPayHistoryId" from="ppp.employmentPayHistoryId" or-null="true" ignore-if-empty="true"/>
                    <econdition field-name="payDate" from="ppp.payDate" />
                    <order-by field-name="sequenceNum"/>
                </entity-find>
                <set field="basePayBime" from="0"/>
                <set field="additionalPayBime" from="0"/>
                <iterate list="rss" entry="itm">
                    <script>
                        payrollFlat.put(itm.parameterSystematicName,itm.point)
                    </script>
                </iterate>
                <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="resls">
                    <field-map field-name="partyRelationshipId" from="ppp.partyRelationshipId"/>
                </entity-find-one>
                <set field="partyId" from="resls?.fromPartyId"/>
                <entity-find-one entity-name="mantle.party.Person" value-field="pers">
                    <field-map field-name="partyId" from="partyId"/>
                </entity-find-one>
                <set field="firstName" from="pers?.firstName"/>
                <set field="lastName" from="pers?.lastName"/>
                <set field="ptidPersonalCd" from="pers?.ptidPersonalCd"/>
                <set field="timePeriodId" from="ppp.timePeriodId"/>
                <entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod"/>
                <set field="periodName" from="timePeriod?.periodName"/>
                <script>
                    payrollFlat.put('partyId',partyId)
                    payrollFlat.put('firstName',firstName)
                    payrollFlat.put('lastName',lastName)
                    payrollFlat.put('ptidPersonalCd',ptidPersonalCd)
                    payrollFlat.put('periodName',periodName)
                    payrollFlat.put('payAmount',ppp.payAmount)
                </script>
                <script>
                    payrollFlatList.add(payrollFlat)
                </script>
            </iterate>
            <service-call name="trnService.export#csv" in-map="[vars:payrollFlatList]" out-map="csvRes"/>
            <set field="csvTxt" from="csvRes.res"/>
        </actions>
    </service>

    <service verb="pdf" noun="payroll">
        <in-parameters>
            <parameter name="partyRelationshipId" required="true"/>
            <parameter name="payDate" required="true"/>
            <parameter name="employmentPayHistoryId" required="true" type="String"/>
        </in-parameters>
        <out-parameters>
            <parameter name="jameSayerKosorat" type="String"/>
            <parameter name="jameMoavaghat" type="String"/>
            <parameter name="jame2" type="String"/>
            <parameter name="jameKosor" type="String"/>
            <parameter name="khalesDaryafti" type="String"/>
            <parameter name="jameKasrMoavaghe" type="String"/>
            <parameter name="codeMelli" type="String"/>
            <parameter name="noeBime" type="String"/>
            <parameter name="shahreMahalleKhedmat" type="String"/>
            <parameter name="shomareHesab" type="String"/>
            <parameter name="fullName" type="String"/>
            <parameter name="nameBank" type="String"/>
            <parameter name="shomareBime" type="String"/>
            <parameter name="codePersoneli" type="String"/>
            <parameter name="jame1" type="String"/>
            <parameter name="jameHoghogh2" type="String"/>
            <parameter name="jameSayerMazaya" type="String"/>
            <parameter name="jameHoghogh1" type="String"/>
            <parameter name="mshmlMaliat" type="String"/>
            <parameter name="mshmlBime" type="String"/>
            <parameter name="tarikh" type="String"/>
            <parameter name="list1" type="List"/>
            <parameter name="list2" type="List"/>
            <parameter name="list3" type="List"/>
            <parameter name="list4" type="List"/>
            <parameter name="list5" type="List"/>
            <parameter name="list6" type="List"/>
            <parameter name="list7" type="List"/>
            <parameter name="list8" type="List"/>
        </out-parameters>
        <actions>
            <service-call name="hrService.get#payrollFlat" in-map="[partyRelationshipId:partyRelationshipId,payDate:payDate,employmentPayHistoryId:employmentPayHistoryId]" out-map="rsp"/>
            <set field="payDateJalal" from="com.trn.common.util.TrnUtil.convertDateToJalali(ec.l10n.parseDate(ec.l10n.format(payDate,'yyyy-MM-dd'),'yyyy-MM-dd'))"/>
            <set field="codeMelli" from="rsp.ptidNationalCd"/>
            <set field="noeBime" from="rsp.noeBime?:'-'"/>
            <set field="shahreMahalleKhedmat" from="rsp.shahreMahalleKhedmat?:'ستاد مرکزی'"/>
            <set field="tarikh" from="payDateJalal?:'-'"/>
            <set field="fullName" from="rsp.firstName+' '+rsp.lastName"/>
            <set field="shomareBime" from="rsp.shomareBime?:'-'"/>
            <set field="codePersoneli" from="rsp.ptidPersonalCd"/>

            <set field="list1" from="[]"/>
            <set field="list2" from="[]"/>
            <set field="list3" from="[]"/>
            <set field="list4" from="[]"/>
            <set field="list5" from="[]"/>
            <set field="list6" from="[]"/>
            <set field="list7" from="[]"/>
            <set field="list8" from="[]"/>
            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relFrom" >
                <field-map field-name="partyRelationshipId" from="partyRelationshipId"/>
            </entity-find-one>
            <set field="partyId" from="relFrom.fromPartyId"/>
            <entity-find-one entity-name="mantle.party.Person" value-field="bank" >
                <field-map field-name="partyId" from="partyId" />
            </entity-find-one>
            <if condition="bank">
                <set field="nameBank" from="bank.BankAccount?:'-'" />
                <set field="shomareHesab" from="bank.BankAccountNumbre?:'-'" />
            </if>
            <iterate list="rsp.payrollFlatList" entry="itm">
                <if condition="itm.point == 0  || itm.point == null" >
                    <else>
                        <service-call name="hrService.getRemain#convenience" in-map="[partyId:partyId,payDate:payDate,parameterId:itm.parameterId]" out-map="remc"/>
                        <set field="column3" from="remc.remainAmount"/>
                        <if condition="column3 &lt;0"><set field="column3" from="column3*-1" /></if>
                        <if condition="itm.pdfFlag.toString()=='1'"><script>list1.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                        <if condition="itm.pdfFlag.toString()=='2'"><script>list2.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                        <if condition="itm.pdfFlag.toString()=='3'"><script>list3.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                        <if condition="itm.pdfFlag.toString()=='4'"><script>list4.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                        <if condition="itm.pdfFlag.toString()=='5'"><script>list5.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                        <if condition="itm.pdfFlag.toString()=='6'"><script>list6.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                        <if condition="itm.pdfFlag.toString()=='7'"><script>list7.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                        <if condition="itm.pdfFlag.toString()=='8'"><script>list8.add([column1:itm.title,column2:itm.point.toInteger(),column3:column3])</script></if>
                    </else>
                </if>
            </iterate>
            <set field="jameHoghogh1" from="(list2.column2.sum()?:0)+''"/>
            <set field="jameSayerMazaya" from="(list3.column2.sum()?:0)+''"/>
            <set field="jameHoghogh2" from="(list2.column2.sum()?:0)+(list3.column2.sum()?:0)+''"/>
            <set field="jame1" from="(list4.column2.sum()?:0)+''"/>
            <set field="jameSayerKosorat" from="(list5.column2.sum()?:0)+''"/>
            <set field="jameMoavaghat" from="(list6.column2.sum()?:0)+''"/>
            <set field="jameKasrMoavaghe" from="(list7.column2?.sum()?:0)+''"/>
            <set field="jame2" from="(list8.column2?.sum()?:0)+''"/>
            <set field="jameKosor" from="(list4.column2.sum()?:0)+(list5.column2.sum()?:0)+''"/>
            <entity-find-one entity-name="mantle.humanres.employment.EmploymentPayHistory" value-field="fish">
                <field-map field-name="employmentPayHistoryId" from="employmentPayHistoryId"/>
            </entity-find-one>
            <set field="khalesDaryafti" from="fish?.payAmount+''"/>
            <!--<message>_______________________</message>
            <if condition="(Double.valueOf(jameHoghogh2)-Double.valueOf(jameKosor))!=Double.valueOf(khalesDaryafti?:0)&amp;&amp;(Double.valueOf(jameHoghogh2)-Double.valueOf(jameKosor))-Double.valueOf(khalesDaryafti?:0)!=35834">
                <message >
                    *****************
                    *****************
                    sheanse fish************: ${partyRelationshipId} -${payDate} - ${(Double.valueOf(jameHoghogh2)-Double.valueOf(jameKosor)) - Double.valueOf(khalesDaryafti?:0)}
                    *****************
                    *****************
                </message>
            </if>-->

        </actions>
    </service>
    <service verb="pdfTotal" noun="payroll">
        <in-parameters>
            <parameter name="payDate" required="true" type="Date"/>
            <parameter name="toPayDate" required="true" type="Date"/>
            <parameter name="payType" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="basePaysAG"/>
            <parameter name="addPaysAG"/>
            <parameter name="oPaysAG"/>
            <parameter name="dedPaysAG"/>
            <parameter name="dedPaysAG1"/>
            <parameter name="title" default-value="شرکت توزیع برق استان قم"/>
            <parameter name="payMonth" />
            <parameter name="toPayMonth" />
            <parameter name="date"/>
            <parameter name="countf" />
        </out-parameters>
        <actions>
            <set field="date" from="com.trn.common.util.TrnUtil.convertDateToJalali(ec.l10n.parseDate(ec.l10n.format(ec.user.nowTimestamp,'yyyy-MM-dd'),'yyyy-MM-dd'))"/>
            <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="pays">
                <econdition field-name="payType" from="payType" />
                <econdition field-name="payDate" operator="greater-equals" from="payDate" />
                <econdition field-name="payDate" operator="less-equals" from="toPayDate" />
                <econdition field-name="deleteBy" operator="is-null" />
                <!--                <econdition field-name="isFinal" operator="in" from="['Y','P']" or-null="true" />-->
            </entity-find>
            <set field="countf" from="pays.size()+''"/>
            <entity-find entity-name="mantle.party.time.TimePeriod" list="firstDate">
                <econdition field-name="thruDate"  from="toPayDate"/>
                <econdition field-name="timePeriodTypeId" value="PayrollMonth"/>
            </entity-find>
            <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:firstDate[0]?.timePeriodId]" out-map="first"/>
            <set field="toPayMonth" from="first?.timePeriod?.periodName"/>
            <entity-find entity-name="mantle.party.time.TimePeriod" list="secoundDate">
                <econdition field-name="fromDate" operator="less-equals" from="payDate"/>
                <econdition field-name="thruDate" operator="greater-equals" from="payDate"/>
                <econdition field-name="timePeriodTypeId" value="PayrollMonth"/>
            </entity-find>
            <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:secoundDate[0]?.timePeriodId]" out-map="secound"/>
            <set field="payMonth" from="secound?.timePeriod?.periodName"/>
            <set field="basePaysA" from="[]"/>
            <set field="addPaysA" from="[]"/>
            <set field="oPaysA" from="[]"/>
            <set field="dedPaysA" from="[]"/>
            <set field="basePaysAG" from="[]"/>
            <set field="addPaysAG" from="[]"/>
            <set field="oPaysAG" from="[]"/>
            <set field="dedPaysAG" from="[]"/>
            <set field="dedPaysAG1" from="[]"/>
            <iterate list="pays" entry="py">
                <set field="employmentPayHistoryId" from="py.employmentPayHistoryId"/>
                <set field="partyRelationshipId" from="py.partyRelationshipId"/>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="basePays" limit="200">
                    <econdition field-name="employmentPayHistoryId" from="employmentPayHistoryId" />
                    <econditions combine="or">
                        <econditions combine="and">
                            <econdition field-name="payDate" from="py.payDate"/>
                            <econdition field-name="parameterTypeEnumId" operator="in" from="['WagePrt','PersonnelPrt']"/>
                        </econditions>
                        <econdition field-name="parameterTypeEnumId" operator="in" from="['PersonnelPrt']"/>
                    </econditions>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                    <econdition field-name="showInPayHistory" from="'Y'"/>
                    <econdition field-name="parameterId" operator="not-equals" from="'543'"/>
                    <econdition field-name="point" operator="not-equals" from="0"/>
                    <econdition field-name="wageType" from="'B'"/>
                    <order-by field-name="point"/>
                </entity-find>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="addPays" limit="200">
                    <econdition field-name="employmentPayHistoryId" from="employmentPayHistoryId" />
                    <econditions combine="or">
                        <econditions combine="and">
                            <econdition field-name="payDate" from="py.payDate"/>
                            <econdition field-name="parameterTypeEnumId" operator="in" from="['WagePrt','PersonnelPrt']"/>
                        </econditions>
                        <econdition field-name="parameterTypeEnumId" operator="in" from="['PersonnelPrt']"/>
                    </econditions>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                    <econdition field-name="showInPayHistory" from="'Y'"/><econdition field-name="point" operator="not-equals" from="0"/>
                    <econdition field-name="wageType" from="'A'"/>
                    <order-by field-name="point"/>
                </entity-find>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="oPays" limit="200">
                    <econdition field-name="employmentPayHistoryId" from="employmentPayHistoryId" />
                    <econditions combine="or">
                        <econditions combine="and">
                            <econdition field-name="payDate" from="py.payDate"/>
                            <econdition field-name="parameterTypeEnumId" operator="in" from="['WagePrt','PersonnelPrt']"/>
                        </econditions>
                        <econdition field-name="parameterTypeEnumId" operator="in" from="['PersonnelPrt']"/>
                    </econditions>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                    <econdition field-name="showInPayHistory" from="'Y'"/><econdition field-name="point" operator="not-equals" from="0"/>
                    <econdition field-name="wageType" value="O" or-null="true"/>
                    <order-by field-name="point"/>
                </entity-find>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="dedPays" limit="200">
                    <econdition field-name="employmentPayHistoryId" from="employmentPayHistoryId" />
                    <econditions combine="or">
                        <econditions combine="and">
                            <econdition field-name="payDate" from="py.payDate"/>
                            <econdition field-name="parameterTypeEnumId" operator="in" from="['WagePrt','PersonnelPrt']"/>
                        </econditions>
                        <econdition field-name="parameterTypeEnumId" operator="in" from="['PersonnelPrt']"/>
                    </econditions>
                    <econdition field-name="partyRelationshipId" from="partyRelationshipId"/>
                    <econdition field-name="showInPayHistory" from="'Y'"/><econdition field-name="point" operator="not-equals" from="0"/>
                    <econdition field-name="wageType" operator="in" value="D"/>
                    <order-by field-name="point"/>
                </entity-find>
                <script>
                    basePaysA=basePaysA+basePays
                    addPaysA=addPaysA+addPays
                    oPaysA=oPaysA+oPays
                    dedPaysA=dedPaysA+dedPays
                </script>
            </iterate>
            <script>
                basePaysAG = basePaysA.groupBy{it.parameterId}.collect{k,v->[parameterId:(k),title:v.title[0],point:v.point.sum()+'']}
                basePaysAG = basePaysAG.sort({ a, b -> Double.valueOf(a.point) &lt;=> Double.valueOf(b.point) })
                addPaysAG = addPaysA.groupBy{it.parameterId}.collect{k,v->[parameterId:(k),title:v.title[0],point:v.point.sum()+'']}
                addPaysAG = addPaysAG.sort({ a, b -> Double.valueOf(a.point) &lt;=> Double.valueOf(b.point) })
                oPaysAG = oPaysA.groupBy{it.parameterId}.collect{k,v->[parameterId:(k),title:v.title[0],point:v.point.sum()+'']}
                oPaysAG = oPaysAG.sort({ a, b -> Double.valueOf(a.point) &lt;=> Double.valueOf(b.point) })
                dedPaysAG = dedPaysA.groupBy{it.parameterId}.collect{k,v->[parameterId:(k),title:v.title[0],point:v.point.sum()+'']}
                dedPaysAG = dedPaysAG.sort({ a, b -> Double.valueOf(a.point) &lt;=> Double.valueOf(b.point) })
            </script>
        </actions>
    </service>

    <service verb="get" noun="TimePeriodEmployments">
        <in-parameters>
            <parameter name="timePeriodId" required="true"/>
            <parameter name="dutyFacilityId" />
            <parameter name="statusId" />
            <parameter name="partyId" />
            <parameter name="employeePartyId" />
            <parameter name="emplTerminationTypeEnumId" />
            <parameter name="PeymaniTypeStatusEnumId" />
            <parameter name="employmentTypeEnumId" />
            <parameter name="accessUserGroupId" />
            <parameter name="payType" default-value="pytMonthly"/>
        </in-parameters>
        <out-parameters>
            <parameter name="employmentList" type="List"/>
            <parameter name="employmentListDelayed" type="List"/>
            <parameter name="timePeriod" type="Map"/>
        </out-parameters>
        <actions>
            <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:timePeriodId]" out-map="context"/>
            <entity-find entity-name="mantle.humanres.employment.EmploymentFromDetailEmployee" list="employmentList">
                <econdition field-name="toPartyId" from="timePeriod.partyId"/>
                <!-- <econdition field-name="dutyFacilityId" from="dutyFacilityId" ignore-if-empty="true"/>-->
                <econdition field-name="isFinal" value="Y" />
                <econdition field-name="isReadyForPay" value="Y" />
                <econdition field-name="deleteBy" operator="is-null" />
                <econdition field-name="employeePartyId" from="employeePartyId" ignore-if-empty="true"/>
                <econdition field-name="statusId" from="statusId" ignore-if-empty="true" />
                <econdition field-name="PeymaniTypeStatusEnumId" from="PeymaniTypeStatusEnumId" ignore-if-empty="true" />
                <!--filter active employment at start of period-->
                <econdition field-name="fromDate" operator="less-equals" from="thruTimestamp" />
                <order-by field-name="-fromDate,-submitDate"/>
            </entity-find>
            <if condition="!!employeePartyId &amp;&amp; payType=='pytDelayed'">
                <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="evPays">
                    <econdition field-name="timePeriodId" from="timePeriodId"/>
                    <econdition field-name="partyRelationshipId" from="employmentList[0]?.partyRelationshipId"/>
                    <econdition field-name="deleteBy" operator="is-null"/>
                </entity-find>
                <if condition="evPays.size()&gt;0">
                    <set field="employmentList" from="[]"/>
                </if>
            </if>
        </actions>
    </service>

    <!-- ========== Payroll Processing Services ========== -->

    <service verb="process" noun="TimePeriodPay" transaction-timeout="60000000" semaphore="fail" semaphore-parameter="timePeriodId">
        <in-parameters>
            <parameter name="timePeriodId" required="true"/>
            <parameter name="dutyFacilityId" />
            <parameter name="statusId" />
            <parameter name="isInnerCallMth" type="Boolean" default="false" />
            <parameter name="partyId" />
            <parameter name="employeePartyId" />
            <parameter name="emplTerminationTypeEnumId" />
            <parameter name="PeymaniTypeStatusEnumId" />
            <parameter name="employmentTypeEnumId" />
            <parameter name="payType" />
            <parameter name="accessUserGroupId" />
            <parameter name="attTimePeriodId" />
            <parameter name="payDate" type="Date"><description>Defaults to TimePeriod.thruDate</description></parameter>
        </in-parameters>
        <out-parameters>
            <parameter name="invoiceIdByPartyRelationshipId" type="Map"/>
            <parameter name="payDate" type="Date"/>
            <parameter name="totalPayAmount" type="BigDecimal"/>
            <parameter name="totalNetPayAmount" type="BigDecimal"/>
        </out-parameters>
        <actions>
            <!-- lock the TimePeriod, will close later -->
            <entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod" for-update="true"/>
            <if condition="timePeriod.isClosed == 'Y'">
                <message error="true">Not processing pay for period ${ec.resource.expand('TimePeriodNameTemplate','',timePeriod)}, already closed.</message>
                <return/>
            </if>
            <!--            <if condition="ec.user.nowTimestamp.before(timePeriod.thruDate)">-->
            <!--                <message error="true">Not closing period ${ec.resource.expand('TimePeriodNameTemplate','',timePeriod)}, period has not ended (ends on ${timePeriod.thruDate}).</message></if>-->
            <check-errors/>
            <!-- TODO: make sure there are no earlier periods open (by partyId, timePeriodTypeId, isClosed != 'Y') -->
            <!-- get all relevant employments -->
            <service-call name="mantle.humanres.PayrollServices.get#TimePeriodEmployments" in-map="context" out-map="context"/>
            <if condition="!payDate"><set field="payDate" from="timePeriod.thruDate"/></if>

            <!-- process pay for each employment -->
            <set field="invoiceIdByPartyRelationshipId" from="[:]"/>
            <set field="totalPayAmount" from="0"/>
            <set field="totalNetPayAmount" from="0"/>
            <if condition="employmentList.size()==0">
                <message>
                    هیچ حکمی برای فیلترهای وارد شده جهت صدور فیش شناسایی نشد
                </message>
            </if>
            <set field="preEmpl" from="[]"/>
            <iterate list="employmentList" entry="employment">
                <if condition="preEmpl.indexOf(employment.employeePartyId) == -1">
                    <service-call name="mantle.humanres.PayrollServices.process#EmploymentPay" out-map="payOut" out-map-add-to-existing="false"
                                  in-map="[partyRelationshipId:employment.partyRelationshipId, timePeriodId:timePeriodId,payDate:payDate,payType:payType,attTimePeriodId:attTimePeriodId]"/>
                    <script>
                        preEmpl.add(employment.employeePartyId)
                    </script>
                    <if condition="payType=='pytDelayed' &amp;&amp; !isInnerCallMth">
                        <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:timePeriodId]" out-map="periodInfo"/>
                        <set field="fromTimestamp" from="periodInfo.fromTimestamp"/>
                        <set field="thruTimestamp" from="periodInfo.thruTimestamp"/>
                        <set field="employmentListDelayed" from="[]"/>
                        <entity-find entity-name="mantle.humanres.employment.EmploymentFromDetailEmployeeAndPayroll" list="employmentListDelayed">
                            <econdition field-name="toPartyId" from="timePeriod.partyId"/>
                            <econdition field-name="isFinal" from="'Y'" or-null="true" />
                            <econdition field-name="isReadyForPay" value="Y" />
                            <econdition field-name="deleteBy" operator="is-null" />
                            <econdition field-name="employmentPayHistoryId" operator="is-null" />
                            <econdition field-name="employeePartyId" from="employment.employeePartyId" />
                            <econdition field-name="fromDate" operator="less-equals" from="thruTimestamp" />
                            <econdition field-name="fromDate" operator="greater-equals" from="new Timestamp(1613692694000)" />
                            <econdition field-name="submitDate" operator="greater-equals" from="new Timestamp(1621507717000)" />
                            <!--hatman hokmaE ke mikhan vasash fishe moavaq bezane bade borje 2 e 1400e chera ke system azun tarikh be bad ra oftade--><econdition field-name="submitDate" operator="greater-equals" from="new Timestamp(1621507717000)" />
                            <order-by field-name="-fromDate,-submitDate"/>
                        </entity-find>
                        <if condition="employmentListDelayed.size()==0">
                            <!--momkene az qabl baraye ye hokmi fish zade bashan vali vaseye mah haye qablesh moavaqe nazade bashan-->
                            <entity-find entity-name="mantle.humanres.employment.EmploymentFromDetailEmployeeAndPayroll" list="employmentListDelayed">
                                <econdition field-name="toPartyId" from="timePeriod.partyId"/>
                                <econdition field-name="isFinal" from="'Y'" or-null="true" />
                                <econdition field-name="isReadyForPay" value="Y" />
                                <econdition field-name="deleteBy" operator="is-null" />
                                <econdition field-name="partyRelationshipId" from="employment.partyRelationshipId" />
                                <econdition field-name="statusId" from="statusId" />
                                <econdition field-name="fromDate" operator="less-equals" from="thruTimestamp" />
                                <econdition field-name="fromDate" operator="greater-equals" from="new Timestamp(1613692694000)" />
                                <econdition field-name="submitDate" operator="greater-equals" from="new Timestamp(1621507717000)" />
                                <!--hatman hokmaE ke mikhan vasash fishe moavaq bezane bade borje 2 e 1400e chera ke system azun tarikh be bad ra oftade--><econdition field-name="submitDate" operator="greater-equals" from="new Timestamp(1621507717000)" />
                                <order-by field-name="-fromDate,-submitDate"/>
                            </entity-find>
                        </if>
                        <if condition="employmentListDelayed.size()&gt;0">
                            <entity-find entity-name="mantle.party.time.TimePeriod" list="timePeriodw1">
                                <econdition field-name="timePeriodTypeId" from="'PayrollMonth'"/>
                                <econdition field-name="timePeriodId" operator="not-equals" from="timePeriodId"/>
                                <date-filter valid-date="employmentListDelayed.last().fromDate"/>
                            </entity-find>
                            <if condition="timePeriodw1">
                                <entity-find entity-name="mantle.party.time.TimePeriod" list="timePeriodwAll">
                                    <econditions combine="or">
                                        <econditions combine="and">
                                            <econdition field-name="timePeriodTypeId" from="'PayrollMonth'"/>
                                            <econdition field-name="timePeriodId" operator="not-equals" from="timePeriodId"/>
                                            <econdition field-name="fromDate" operator="greater-equals" from="timePeriodw1[0].thruDate"/>
                                            <econdition field-name="thruDate" operator="less-equals" from="fromTimestamp"/>
                                        </econditions>
                                        <econdition field-name="timePeriodId" from="timePeriodw1[0].timePeriodId"/>
                                    </econditions>
                                    <order-by field-name="fromDate"/>
                                </entity-find>
                                <iterate list="timePeriodwAll" entry="tpitm">
                                    <service-call name="mantle.humanres.PayrollServices.get#TimePeriodEmployments" in-map="[timePeriodId:tpitm.timePeriodId,partyId:employment.employeePartyId,employeePartyId:employment.employeePartyId,payType:payType]" out-map="empRes"/>
                                    <set field="preEmpl2" from="[]"/>
                                    <iterate list="empRes.employmentList" entry="employment2">
                                        <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="paiedList">
                                            <econdition field-name="timePeriodId" from="tpitm.timePeriodId"/>
                                            <econdition field-name="partyRelationshipId" from="employment2.partyRelationshipId"/>
                                            <econdition field-name="deleteBy" operator="is-null"/>
                                        </entity-find>
                                        <if condition="paiedList.size()&gt;0">
                                            <message>
                                                برای این حکم در این بازه فیش موجود است.
                                                کد حکم: ${employment2.partyRelationshipId}
                                                کد بازه زمانی: ${tpitm.timePeriodId}
                                                نوع: ${payType}
                                            </message>
                                            <continue/>
                                        </if>
                                        <if condition="preEmpl2.indexOf(employment2.employeePartyId) == -1">
                                            <service-call name="mantle.humanres.PayrollServices.process#EmploymentPay" out-map="payOut5" out-map-add-to-existing="false"
                                                          in-map="[partyRelationshipId:employment2.partyRelationshipId,baseEmploymentPayHistoryId:payOut.employmentPayHistoryId, timePeriodId:tpitm.timePeriodId,payDate:tpitm.thruDate,payType:payType,isInnerCallMth:true]"/>
                                            <script>preEmpl2.add(employment2.employeePartyId)</script>
                                        </if>
                                    </iterate>
                                </iterate>
                            </if>
                        </if>
                    </if>
                </if>
            </iterate>

            <set field="preEmpl" from="[]"/>
            <message>صدور موفق فیش های حقوق: ${timePeriod.periodName}</message>
        </actions>
    </service>
    <service verb="delete" noun="TimePeriodPay" transaction-timeout="60000000" >
        <in-parameters>
            <parameter name="timePeriodIdList" type="List"  />
            <parameter name="timePeriodId" />
            <parameter name="partyRelationshipId" />
            <parameter name="employmentPayHistoryId" />
            <parameter name="dutyFacilityId" />
            <parameter name="statusId" />
            <parameter name="partyId" />
            <parameter name="employeePartyId" />
            <parameter name="emplTerminationTypeEnumId" />
            <parameter name="employmentTypeEnumId" />
            <parameter name="accessUserGroupId" />
            <parameter name="payType" />
            <parameter name="deleteReal" />
            <parameter name="payDate" type="Date"><description>Defaults to TimePeriod.thruDate</description></parameter>
            <parameter name="maxPayDate" type="Date"><description>Defaults to TimePeriod.thruDate</description></parameter>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="pays">
                <econdition field-name="timePeriodId" from="timePeriodId" ignore-if-empty="true"/>
                <econdition field-name="timePeriodId" operator="in" from="timePeriodIdList" ignore="!timePeriodIdList || timePeriodIdList?.size()==0 "/>
                <econdition field-name="employmentPayHistoryId" from="employmentPayHistoryId" ignore-if-empty="true"/>
                <econdition field-name="payType" from="payType" ignore-if-empty="true"/>
<!--                <econdition field-name="isFinal" value="N" or-null="true" ignore="ec.user.userAccount.username=='trn'|| ec.user.userAccount.username=='admin'" />-->
                <econdition field-name="isFinal" value="N" or-null="true"  />
                <econdition field-name="partyRelationshipId" from="partyRelationshipId" ignore-if-empty="true"/>
                <econdition field-name="payDate" from="payDate" ignore-if-empty="true"/>
                <econdition field-name="payDate" operator="less" from="maxPayDate" ignore-if-empty="true"/>
            </entity-find>
            <if condition="deleteReal=='Y'"><then>
                <entity-delete-by-condition entity-name="mantle.humanres.ability.HrParameterResult" >
                    <econdition field-name="employmentPayHistoryId" operator="in" from="pays.employmentPayHistoryId" />
                </entity-delete-by-condition>
                <entity-delete-by-condition entity-name="mantle.account.invoice.Invoice" >
                    <econdition field-name="employmentPayHistoryId" operator="in" from="pays.employmentPayHistoryId" />
                </entity-delete-by-condition>
                <entity-delete-by-condition entity-name="mantle.humanres.employment.EmploymentPayHistory" >
                    <econdition field-name="employmentPayHistoryId" operator="in" from="pays.employmentPayHistoryId" />
                </entity-delete-by-condition>
                <entity-delete-by-condition entity-name="mantle.humanres.employment.EmploymentPayHistory" >
                    <econdition field-name="baseEmploymentPayHistoryId" operator="in" from="pays.employmentPayHistoryId" />
                </entity-delete-by-condition>
            </then><else>
                <iterate list="pays" entry="itm">
                    <set field="itm.deleteBy" from="ec.user.userAccount?.username?:'_NA_'"/>
                    <entity-update value-field="itm"/>
                </iterate>
                <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="pays2">
                    <econdition field-name="baseEmploymentPayHistoryId" operator="in" from="pays.employmentPayHistoryId" />
                </entity-find>
                <iterate list="pays2" entry="itm">
                    <set field="itm.deleteBy" from="ec.user.userAccount?.username?:'_NA_'"/>
                    <entity-update value-field="itm"/>
                </iterate>
            </else></if>

            <entity-delete-by-condition entity-name="mantle.humanres.employment.EmploymentDetailReport" >
                <econdition field-name="employmentPayHistoryId" operator="in" from="pays.employmentPayHistoryId" />
            </entity-delete-by-condition>
        </actions>
    </service>
    <service verb="approve" noun="TimePeriodPay" transaction-timeout="60000000" >
        <in-parameters>
            <parameter name="timePeriodId" />
            <parameter name="timePeriodIdList" type="List" />
            <parameter name="partyRelationshipId" />
            <parameter name="employmentPayHistoryId" />
            <parameter name="dutyFacilityId" />
            <parameter name="statusId" />
            <parameter name="partyId" />
            <parameter name="isFinal" default-value="Y" />
            <parameter name="employeePartyId" />
            <parameter name="emplTerminationTypeEnumId" />
            <parameter name="employmentTypeEnumId" />
            <parameter name="accessUserGroupId" />
            <parameter name="payType" />
            <parameter name="payDate" type="Date"><description>Defaults to TimePeriod.thruDate</description></parameter>
            <parameter name="maxPayDate" type="Date"><description>Defaults to TimePeriod.thruDate</description></parameter>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="pays">
                <econdition field-name="timePeriodId" from="timePeriodId" ignore-if-empty="true"/>
                <econdition field-name="timePeriodId" operator="in" from="timePeriodIdList" ignore="!timePeriodIdList || timePeriodIdList?.size()==0 "/>
                <econdition field-name="deleteBy" operator="is-null"/>
                <econdition field-name="employmentPayHistoryId" from="employmentPayHistoryId" ignore-if-empty="true"/>
                <econdition field-name="payType" from="payType" ignore-if-empty="true"/>
                <econdition field-name="partyRelationshipId" from="partyRelationshipId" ignore-if-empty="true"/>
                <econdition field-name="payDate" from="payDate" ignore-if-empty="true"/>
                <econdition field-name="payDate" operator="less" from="maxPayDate" ignore-if-empty="true"/>
            </entity-find>
            <iterate list="pays" entry="itm">
                <set field="itm.isFinal" from="isFinal"/>
                <entity-update value-field="itm"/>
            </iterate>
        </actions>
    </service>
    <service verb="process" noun="EmploymentPay" transaction-timeout="60000000">
        <in-parameters>
            <parameter name="partyRelationshipId" required="true"/>
            <parameter name="timePeriodId" required="true"/>
            <parameter name="payDate" type="Date"><description>Defaults to TimePeriod.thruDate</description></parameter>
            <parameter name="invoiceId"/>
            <parameter name="attTimePeriodId"/>
            <parameter name="payType" default-value="pytMonthly"/>
            <parameter name="attendances" type="List"/>
        </in-parameters>
        <out-parameters>
            <parameter name="invoiceId"/>
            <parameter name="employmentPayHistoryId"/>
            <parameter name="payDate" type="Date"/>
            <parameter name="payAmount" type="BigDecimal"/>
            <parameter name="netPayAmount" type="BigDecimal"/>
            <parameter name="currencyUomId"/>

            <parameter name="adjustmentList" type="List"/>
            <parameter name="amountByPayrollAdjustmentId" type="Map"/>
        </out-parameters>
        <actions>
            <!-- make sure there is no EmploymentPa yHistory record for partyRelationshipId and timePeriodId -->
            <entity-find-one entity-name="mantle.party.PartyRelationship" value-field="relll"/>
            <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistoryAndDetail" list="existingPayHistoryList">
                <econdition field-name="payDate" from="payDate" />
                <econdition field-name="payType" from="payType" ignore="payType!='pytMonthly'" />
                <econdition field-name="partyId"  from="relll.fromPartyId" />
                <econdition field-name="deleteBy" operator="is-null"/>
            </entity-find>
            <if condition="existingPayHistoryList?.size()&gt;0">
                <!-- <message error="true" >
                     برای شخص زیر فیش حقوقی در ماه انتخابی صادر شده است.
                     ${relll.partyId}
                 </message>
                 <return/>-->
            </if>

            <entity-find-one entity-name="mantle.humanres.employment.EmploymentAndRelationship" value-field="employment"/>
            <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:timePeriodId]" out-map="periodInfo"/>
            <set field="fromTimestamp" from="periodInfo.fromTimestamp"/>
            <set field="thruTimestamp" from="periodInfo.thruTimestamp"/>

            <!-- get the pay detail data; note that this sets default payDate if not passed in -->
            <service-call name="mantle.humanres.PayrollServices.get#EmploymentGeneralInfo" in-map="context" out-map="context"/>
            <if condition="!attendances">
                <entity-find entity-name="mantle.party.time.TimePeriod" list="timePeriodw">
                    <econdition field-name="timePeriodId" from="timePeriodId"/>
                </entity-find>
                <set field="periodDate" from="timePeriodw[0]?.fromDate"/>
                <if condition="periodDate"><set field="periodDate" from="new java.sql.Timestamp(periodDate.getTime())"/></if>
                <entity-find entity-name="mantle.humanres.time.AttendanceResultSum" list="attendances">
                    <econdition field-name="timePeriodId" from="attTimePeriodId?:timePeriodId"/>
                    <econdition field-name="partyId" from="employee.partyId"/>
                    <econdition field-name="noeEntesabEnumId" from="'netnAsli'"/>
                    <econdition field-name="emplFromDate" operator="less-equals" from="periodDate" ignore-if-empty="true" or-null="true" />
                    <date-filter valid-date="periodDate" from-field-name="emplFromDate" thru-field-name="emplThruDate"/>
                    <select-field field-name="timesheetId,timePeriodId,partyId,wholeDayPaid,wholeDayLeaveExpenseWorld,wholeDayLeaveExpenseCountry,wholeDayLeaveExpenseRegularStop,wholeDayLeaveExpenseRegularNonstop,wholeDayLeaveAbsent,wholeDayLeavePaid,wholeDayLeavePaidMedical,wholeDayLeaveUnPaid,totalHourLeaveExpense,totalHourLeaveAbsent,totalHourLeavePaid,totalHourLeaveUnPaid,totalHourOvertime,validHours,totalHourOvertimeMission,PeymaniTypeStatusEnumId,dutyFacilityId,ezafeKarBahrevari,ezafeKarKeifi,efficiency,tedadRozPikeBar,tedadRozTatilKari,saatKshikSqf,tddRNobatKariPll,tedadSaatEzfMtfraqe,ezafeKarTashviqi"/>
                </entity-find>
                <set field="attendance" from="attendances[0]?.getValueMap()"/>

                <if condition="!attendance">
                    <message error="true">
                        برای این شخص در این بازه ی زمانی ترددی ثبت نشده است.
                        employee.partyId: ${employee.partyId}
                        timePeriodId: ${timePeriodId}
                        attTimePeriodId: ${attTimePeriodId}
                        periodDate: ${periodDate}
                    </message>
                    <return/>
                </if>

                <service-call name="hrService.get#ActiveFullfilmentByParty" in-map="context+[partyId:employee.partyId,validDate:periodDate,noeEntesabEnumId:'netnAsli']" out-map="resOut"/>
                <if condition="resOut.fulfillment">  <set field="attendance.emplPositionId" from="resOut.fulfillment.emplPositionId"/></if>
                <if condition="attendance.wholeDayLeavePaid==null"><set field="attendance.wholeDayLeavePaid" from="0" /></if>
                <if condition="attendance.wholeDayLeavePaidMedical==null"><set field="attendance.wholeDayLeavePaidMedical" from="0" /></if>
                <if condition="wholeDayPaid==null"><set field="wholeDayPaid" from="0" /></if>
            </if>
            <set field="empPartyId" from="employee.partyId"/>


            <entity-find-one entity-name="mantle.party.Person" value-field="pers">
                <field-map field-name="partyId" from="empPartyId"/>
            </entity-find-one>
            <if condition="pers.PeymaniTypeStatusEnumId=='amanii'"><then>
                <set field="caclType" from="'ectReg'"/>
            </then><else>
                <set field="caclType" from="'ectRegVndr'"/>
            </else></if>
            <set field="moavaqeFlat" from="[:]"/>
            <if condition="payType=='pytDelayed'">
                <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistoryAndDetail" list="delayPay">
                    <!--
                        aslan rabti be hokm nadare...system mire bar asase
                        akhrin fishe un mah moavaqe mizane
                        <econdition field-name="partyRelationshipId" from="ptyMoavaq"/>
                    -->
                    <econdition field-name="partyId" from="empPartyId"/>
                    <econdition field-name="payDate" from="payDate"/>
                    <econdition field-name="deleteBy" operator="is-null"/>
                    <order-by field-name="-employmentPayHistoryId"/>
                </entity-find>
                <if condition="!(delayPay?.size()&gt;0)">
                    <message>
                        برای این شخص در تاریخ مذکور از قبل فیشی صادر نشده است.پس نمی توان فیش معوقه صادر کرد.
                        payDate:${payDate}
                    </message>
                    <return/>
                </if>
                <set field="moavaqeFlatList" from="[]"/>
                <set field="moavaqeFlatListKeys" from="[]"/>
                <iterate list="delayPay" entry="fgt">
                    <service-call name="hrService.get#payrollFlat"
                                  in-map="[partyRelationshipId:fgt.partyRelationshipId,
                                            payDate:fgt.payDate,
                                            employmentPayHistoryId:fgt.employmentPayHistoryId]"
                                  out-map="moavaqeFlat"/>
                    <script>moavaqeFlatList.add(moavaqeFlat.payrollFlat)</script>
                    <script>moavaqeFlatListKeys.addAll(moavaqeFlat.payrollFlat.keySet())</script>
                </iterate>
                <set field="moavaqeFlatListKeys" from="moavaqeFlatListKeys.unique()"/>
                <set field="moavaqeFlat" from="[:]"/>
                <set field="moavaqeFlat.payrollFlat" from="[:]"/>
                <iterate list="moavaqeFlatListKeys" entry="fgt1">
                    <set field="thepoint" from="0"/>
                    <iterate list="moavaqeFlatList" entry="fgt2">
                        <set field="thepoint" from="thepoint+(fgt2[fgt1]?:0)"/>
                    </iterate>
                    <script>moavaqeFlat.payrollFlat.put(fgt1,thepoint)</script>
                </iterate>
            </if>
            <service-call name="mantle.humanres.EmploymentServices.get#Adjustment"
                          in-map="[timePeriodId:timePeriodId,employeePartyId:employee.partyId,
                                    attTimePeriodId:attTimePeriodId,
                                    mainOrgPartyId:employment.toPartyId,
                                    partyRelationshipId:employment.partyRelationshipId,
                                    attendance:attendance,
                                    employmentCalcTypeEnumId:caclType,
                                    totalDays:totalDays,
                                    payType:payType,
                                    moavaqeFlat:moavaqeFlat.payrollFlat,
                                    isWageAdjustment:true,date:new Timestamp(payDate.getTime())]" out-map="AdjList"/>
            <if condition="!AdjList.completeRes">
                <message>
                    برای این شخص پارامتری محاسبه نشد.
                    employeePartyId: ${employee.partyId}
                </message>
                <return/>
            </if>

            <service-call name="create#mantle.humanres.employment.EmploymentPayHistory" in-map="[partyRelationshipId:partyRelationshipId,payDate:payDate,payAmount:0,timesheetId:timesheetId,timePeriodId:timePeriodId,payType:payType,isFinal:'N']" out-map="context"/>
            <set field="totalDeduct" from="0"/>
            <set field="wageBSum" from="0"/>
            <set field="wageASum" from="0"/>
            <iterate list="AdjList.completeRes" entry="itm">
                <entity-find-one entity-name="mantle.humanres.ability.HrParameter" value-field="prm">
                    <field-map field-name="parameterId" from="itm.parameterId"/>
                </entity-find-one>
                <if condition="!prm.pdfFlag &amp;&amp; prm.parameterTypeEnumId=='WagePrt'">
                    <message error="true">
                        فرمت چاپی برای پرامتر زیر تعریف نشده است.لطفا از طریق منوی پارامترها فرمت چاپی را تعریف کنید.
                        ${prm.title}
                        ${prm.parameterId}
                    </message>
                    <return/>
                </if>
                <if condition="prm.parameterSystematicName=='tax'"><continue/></if>
                <set field="point" from="itm.point"/>
                <set field="parameterId" from="itm.parameterId"/>
                <set field="wageType" from="prm.wageType?:''"/>
                <set field="description" from="prm.title"/>
                <set field="isEmployerPaid" from="prm.isEmployerPaid"/>
                <set field="pointStr" from="itm.pointStr"/>
                <set field="t_pointStr" from="itm.pointStr"/>
                <set field="employmentCalcTypeEnumId" from="itm.employmentCalcTypeEnumId"/>
                <if condition="itm.parameterTypeEnumId=='WagePrt'">
                    <if condition="payType=='pytDelayed' &amp;&amp; (wageType!='' || prm.parameterSystematicName=='mashmuleBime' || prm.parameterSystematicName=='mashmuleMaliat')">
                        <set field="point" from="Double.valueOf(point?:0) - Double.valueOf(moavaqeFlat.payrollFlat.get(prm.parameterSystematicName)?:0)"/>
                        <if condition="wageType=='B' &amp;&amp; prm.parameterSystematicName != 'basePay' &amp;&amp; prm.notHaveDelayedPay != 'Y'">
                            <set field="wageBSum" from="wageBSum + point"/>
                        </if>
                        <if condition="wageType=='A' &amp;&amp; prm.parameterSystematicName != 'additionPay' &amp;&amp; prm.parameterSystematicName != 'additionAndBasePay' &amp;&amp; prm.notHaveDelayedPay != 'Y'">
                            <set field="wageASum" from="wageASum + point"/>
                        </if>
                        <if condition="prm.parameterSystematicName== 'basePay'">
                            <set field="point" from="Double.valueOf(wageBSum)"/>
                        </if>
                        <if condition="prm.parameterSystematicName== 'additionPay'">
                            <set field="point" from="Double.valueOf(wageASum)"/>
                        </if>
                        <if condition="prm.parameterSystematicName== 'additionAndBasePay'">
                            <set field="additionAndBasePayPoint" from="Double.valueOf(wageBSum) +Double.valueOf(wageASum)"/>
                            <set field="point" from="Double.valueOf(additionAndBasePayPoint)"/>
                        </if>
                        <set field="pointStr" from="String.format('%.2f',point)"/>
                        <set field="t_pointStr" from="String.format('%.2f',point)"/>
                        <if condition="point==1 || prm.notHaveDelayedPay=='Y'">
                            <set field="point" from="0.00"/>
                            <set field="pointStr" from="String.format('%.2f',point)"/>
                            <set field="t_pointStr" from="String.format('%.2f',point)"/>
                        </if>
                    </if>
                    <service-call name="create#mantle.humanres.ability.HrParameterResult" in-map="[ partyRelationshipId:partyRelationshipId,
                                                                                                    parameterId:parameterId,
                                                                                                    point:point,
                                                                                                    empPartyId:empPartyId,
                                                                                                    wageType:wageType,
                                                                                                    description:description,
                                                                                                    isEmployerPaid:isEmployerPaid,
                                                                                                    pointStr:pointStr,
                                                                                                    employmentPayHistoryId:employmentPayHistoryId,
                                                                                                    t_pointStr:t_pointStr,
                                                                                                    payDate:payDate]" out-map="resCreateResult"/>
                    <if condition="wageType=='D'">
                        <set field="totalDeduct" from="totalDeduct+point"/>
                    </if>
                </if>
            </iterate>

            <service-call name="mantle.humanres.EmploymentServices.calculate#tax" in-map="[employeePartyId:empPartyId,
                                                                                            partyRelationshipId:partyRelationshipId,
                                                                                            payDate:payDate,
                                                                                            payType:payType,
                                                                                            employmentPayHistoryId:employmentPayHistoryId,
                                                                                            prevResult:AdjList?.paramResult]" out-map="taxRes"/>
            <set field="taxAmount" from="(taxRes.res?:0)"/>
            <set field="taxAmount" from="Math.round(taxAmount)"/>
            <if condition="payType=='pytDelayed'">
                <set field="taxAmount" from="taxAmount - Double.valueOf(moavaqeFlat.payrollFlat.tax?:0)"/>
            </if>
            <service-call name="create#mantle.humanres.ability.HrParameterResult" in-map="[ partyRelationshipId:partyRelationshipId,
                                                                                                parameterId:'779',
                                                                                                point:taxAmount,
                                                                                                employmentPayHistoryId:employmentPayHistoryId,
                                                                                                empPartyId:empPartyId,
                                                                                                description:'مالیات',
                                                                                                wageType:'D',
                                                                                                isEmployerPaid:'N',
                                                                                                pointStr:taxAmount+'',
                                                                                                t_pointStr:taxAmount+'',
                                                                                                payDate:payDate]" out-map="resCreateResultDedTotTx"/>

            <set field="totalDeduct" from="totalDeduct+taxAmount"/>
            <set field="totalDeduct" from="Math.round(totalDeduct)"/>
            <service-call name="create#mantle.humanres.ability.HrParameterResult" in-map="[ partyRelationshipId:partyRelationshipId,
                                                                                                parameterId:'999',
                                                                                                point:totalDeduct,
                                                                                                empPartyId:empPartyId,
                                                                                                employmentPayHistoryId:employmentPayHistoryId,
                                                                                                description:'جمع کسورات',
                                                                                                wageType:'D',
                                                                                                isEmployerPaid:'N',
                                                                                                pointStr:totalDeduct+'',
                                                                                                t_pointStr:totalDeduct+'',
                                                                                                payDate:payDate]" out-map="resCreateResultDedTot"/>

            <set field="payAmount" from="AdjList?.paramResult.additionAndBasePay-totalDeduct"/>
            <if condition="payType=='pytDelayed'">
<!--                <set field="payAmount" from="((AdjList?.paramResult.additionAndBasePay-Double.valueOf(moavaqeFlat.payrollFlat.additionAndBasePay?:0))-totalDeduct)"/>-->
                <set field="payAmount" from="((additionAndBasePayPoint)-totalDeduct)"/>
            </if>
            <if condition="payType=='pytDelayed' &amp;&amp; wageBSum == 0">
                <message>تغییر حقوقی در این بازه وجود ندارد
                ${timePeriodId}   بازه زمانی
                ${empPartyId}    شناسه شخص
                </message>
                <return/>
            </if>
            <service-call name="update#mantle.humanres.employment.EmploymentPayHistory" in-map="[partyRelationshipId:partyRelationshipId,payDate:payDate,employmentPayHistoryId:employmentPayHistoryId,payAmount:payAmount]"/>
            <service-call name="mantle.humanres.PayrollServices.validate#Payroll" in-map="[employmentPayHistoryId:employmentPayHistoryId]"/>
        </actions>
    </service>
    <service verb="get" noun="EmploymentGeneralInfo">
        <in-parameters>
            <parameter name="partyRelationshipId"/> <!-- partyRelationshipId or employment is required -->
            <parameter name="employment" type="Map"/>
            <parameter name="timePeriodId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="currencyUomId"/>
            <parameter name="salaryFlag"/>
            <parameter name="timePeriodId"/>
            <parameter name="timeEntryList" type="List"/>

            <parameter name="employment" type="Map"/>
            <parameter name="employee" type="Map"/>
            <parameter name="emplPosition" type="Map"/>
            <parameter name="timePeriod" type="Map"/>
            <parameter name="fromTimestamp" type="Timestamp"/>
            <parameter name="thruTimestamp" type="Timestamp"/>
        </out-parameters>
        <actions>
            <if condition="!employment"><then>
                <if condition="partyRelationshipId"><then>
                    <entity-find-one entity-name="mantle.humanres.employment.EmploymentAndRelationship" value-field="employment"/>
                </then><else>
                    <return error="true" message="partyRelationshipId or employment is required."/>
                </else></if>
            </then><else>
                <set field="partyRelationshipId" from="employment.partyRelationshipId"/>
            </else></if>
            <entity-find-one entity-name="mantle.humanres.employment.Employee" value-field="employee">
                <field-map field-name="partyId" from="employment.fromPartyId"/></entity-find-one>
            <entity-find-one entity-name="mantle.humanres.position.EmplPosition" value-field="emplPosition">
                <field-map field-name="emplPositionId" from="employment.emplPositionId"/></entity-find-one>
            <entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod"/>
            <entity-find-one entity-name="mantle.party.PartyDetail" value-field="fromDetail">
                <field-map field-name="partyId" from="employment.fromPartyId"/></entity-find-one>
            <!--<if condition="!employee">-->
            <!--<message error="true">party ${ec.resource.expand('PartyNameTemplate', '', fromDetail)} is not a type of employee</message>-->
            <!--</if>-->
            <set field="salaryFlag" from="emplPosition.salaryFlag ?: 'N'"/>
            <set field="payAmount" from="0.0"/>
            <!--            <if condition="'PayrollMonth' != timePeriod.timePeriodTypeId">-->
            <!--                <return message="Employee ${ec.resource.expand('PartyNameTemplate', '', fromDetail)} is not paid in this type of period"/></if>-->
            <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriod:timePeriod]" out-map="periodInfo"/>
            <set field="fromTimestamp" from="periodInfo.fromTimestamp"/>
            <set field="thruTimestamp" from="periodInfo.thruTimestamp"/>
            <set field="timePeriodId" from="periodInfo.timePeriodId"/>

            <if condition="employment.fromDate != null &amp;&amp; employment.fromDate &gt; thruTimestamp">
                <return message="Employee ${ec.resource.expand('PartyNameTemplate', '', fromDetail)} is not yet employed"/></if>
            <if condition="employment.thruDate != null &amp;&amp; employment.thruDate &lt; fromTimestamp">
                <return message="Employee ${ec.resource.expand('PartyNameTemplate', '', fromDetail)} is no longer employed"/></if>
        </actions>
    </service>
    <service verb="validate" noun="Payroll">
        <in-parameters>
            <parameter name="employmentPayHistoryId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.humanres.employment.EmploymentPayHistory" value-field="fish"/>
            <set field="partyRelationshipId" from="fish.partyRelationshipId"/>
            <set field="timePeriodId" from="fish.timePeriodId"/>
            <entity-find-one entity-name="mantle.humanres.employment.EmploymentAndRelationship" value-field="employment"/>
            <set field="fromPartyId" from="employment.fromPartyId"/>
            <set field="toPartyId" from="employment.toPartyId"/>
            <entity-find-one entity-name="mantle.party.Person" value-field="employee"><field-map field-name="partyId" from="fromPartyId"/></entity-find-one>
            <set field="ptidPersonalCd" from="employee.ptidPersonalCd"/>
            <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:timePeriodId]" out-map="periodInfo"/>
            <set field="fromTimestamp" from="periodInfo.fromTimestamp"/>
            <set field="thruTimestamp" from="periodInfo.thruTimestamp"/>
            <!--TODO:(amir) 2ta control etefaq biofte ....jame jabriye pdfE doros bashe ....jame jabriye table huquqi doros bashe-->
        </actions>
    </service>
    <!-- ========== Payroll Invoice Services ========== -->
    <service verb="create" noun="PayrollInvoice">
        <in-parameters>
            <parameter name="employmentPayHistoryId" required="true"/>
            <auto-parameters entity-name="mantle.account.invoice.Invoice"/>
        </in-parameters>
        <out-parameters>
            <parameter name="invoiceId"/>
            <parameter name="acctgTransId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.humanres.employment.EmploymentPayHistory" value-field="fish"/>
            <set field="employmentPayHistoryId" from="fish.employmentPayHistoryId"/>
            <set field="partyRelationshipId" from="fish.partyRelationshipId"/>
            <set field="timePeriodId" from="fish.timePeriodId"/>
            <script>
                logger.warn("rrrrrrrrrrrr")
            </script>
            <entity-find-one entity-name="mantle.humanres.employment.EmploymentAndRelationship" value-field="employment"/>
            <set field="fromPartyId" from="employment.fromPartyId"/>
            <set field="toPartyId" from="employment.toPartyId"/>
            <entity-find-one entity-name="mantle.party.Person" value-field="employee"><field-map field-name="partyId" from="fromPartyId"/></entity-find-one>
            <script>
                logger.warn("aaaaaaaaaaaaaaa")
            </script>
            <set field="ptidPersonalCd" from="employee.ptidPersonalCd"/>
            <service-call name="mantle.party.TimeServices.get#TimePeriodInfo" in-map="[timePeriodId:timePeriodId]" out-map="periodInfo"/>
            <set field="fromTimestamp" from="periodInfo.fromTimestamp"/>
            <set field="thruTimestamp" from="periodInfo.thruTimestamp"/>
            <script>
                logger.warn("yyyyyyyyyyyyyyyy")
            </script>
            <entity-find entity-name="mantle.party.PartyRole" list="fromOrgInternalList">
                <econdition field-name="partyId" from="fromPartyId"/>
                <econdition field-name="roleTypeId" value="OrgInternal"/></entity-find>
            <set field="isFromPartyOrgInternal" from="fromOrgInternalList as boolean"/>
            <set field="organizationPartyId" from="isFromPartyOrgInternal ? fromPartyId : toPartyId"/>
            <set field="otherPartyId" from="isFromPartyOrgInternal ? toPartyId : fromPartyId"/>
            <script>
                logger.warn("jjjjjjjjjjjjjjjj")
            </script>
            <!-- set the initial statusId based on which party is OrgInternal -->
            <set field="statusId" from="isFromPartyOrgInternal ? 'InvoiceInProcess' : 'InvoiceIncoming'"/>

            <!-- get configured currency for org if none specified -->
            <if condition="!currencyUomId">
                <service-call name="mantle.ledger.LedgerServices.find#PartyAcctgPreference" out-map="context"
                              in-map="[organizationPartyId:organizationPartyId]"/>
                <set field="currencyUomId" from="partyAcctgPreference?.baseCurrencyUomId"/>
            </if>
            <if condition="!currencyUomId"><set field="currencyUomId" value="IRR"/></if>
            <!-- create Invoice if one does not exist already -->
            <script>
                logger.warn("mmmmmmmmmmmm")
            </script>
            <if condition="1!=1"><then>
                <service-call name="create#mantle.account.invoice.Invoice" out-map="context"
                              in-map="[invoiceTypeEnumId:'InvoicePayroll', fromPartyId:fromPartyId, toPartyId:toPartyId,
                    statusId:'InvoiceReceived', invoiceDate:payDate, currencyUomId:currencyUomId,
                    partyRelationshipId:partyRelationshipId,employmentPayHistoryId:employmentPayHistoryId, timePeriodId:timePeriodId]"/>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResult" list="payparams">
                    <econdition field-name="employmentPayHistoryId" from="fish.employmentPayHistoryId"/>
                    <econdition field-name="point" operator="greater" from="0"/>
                    <econdition field-name="wageType" operator="in" from="['A','B','D']"/>
                </entity-find>
                <iterate list="payparams" entry="itm">
                    <set field="point" from="itm.point"/>
                    <if condition="itm.wageType == 'D'">
                        <set field="point" from="itm.point*-1"/>
                    </if>
                    <entity-find entity-name="mantle.other.budget.BudgetSalaryConfPercent" list="percs">
                        <econdition field-name="partyId" from="fromPartyId"/>
                        <!--                    <date-filter valid-date="new Timestamp(fish?.payDate.getTime())"/>-->
                    </entity-find>
                    <if condition="!percs?.percent || percs?.percent?.sum()!=100">
                        <message error="true">
                            نگاشت آیتم بودجه و سرفصل حقوق برای این شخص نا مساوی ۱۰۰٪ می باشد.
                            partyId: ${fromPartyId}
                        </message>
                        <return/>
                    </if>
                    <iterate list="percs" entry="itm2">
                        <set field="point" from="point*itm2.percent/100"/>

                        <entity-find entity-name="mantle.other.budget.BudgetItem" list="bugitms">
                            <econdition field-name="costCenterId" from="itm2.costCenterId" ignore-if-empty="true"/>
                            <econdition field-name="partyId" from="itm2.budgetUnitPartyId" ignore-if-empty="true"/>
                            <econdition field-name="budgetTypeEnumId" from="itm2.budgetTypeEnumId" ignore-if-empty="true"/>
                            <econdition field-name="actionTypeProductId" from="itm2.actionTypeProductId" ignore-if-empty="true"/>
                            <econdition field-name="budgetId" from="itm2.budgetId" ignore-if-empty="true"/>
                            <!--                        <date-filter valid-date="new Timestamp(fish.payDate.getTime())"/>-->
                        </entity-find>
                        <if condition="bugitms?.size()==0">
                            <entity-find entity-name="mantle.other.budget.BudgetItem" list="bugitms">
                                <econdition field-name="costCenterId" from="itm2.costCenterId" ignore-if-empty="true"/>
                                <econdition field-name="partyId" from="itm2.budgetUnitPartyId" ignore-if-empty="true"/>
                                <econdition field-name="budgetTypeEnumId" from="itm2.budgetTypeEnumId" ignore-if-empty="true"/>
                                <econdition field-name="budgetId" from="itm2.budgetId" ignore-if-empty="true"/>
                                <!--                            <date-filter valid-date="new Timestamp(fish.payDate.getTime())"/>-->
                            </entity-find>
                        </if>
                        <if condition="bugitms?.size()==0">
                            <message error="true">
                                برای این شخص ردیف بودجه ای شناسایی نشد.
                                partyId:${fromPartyId}
                                costCenterId:${itm2.costCenterId}
                                budgetUnitPartyId:${itm2.budgetUnitPartyId}
                                budgetTypeEnumId:${itm2.budgetTypeEnumId}
                                budgetId:${itm2.budgetId}
                            </message>
                            <return/>
                        </if>
                        <if condition="bugitms?.size()&gt;1">
                            <message error="true">
                                برای این شخص بیش از یک ردیف بودجه ای شناسایی شده است.
                                partyId:${fromPartyId}
                                costCenterId:${itm2.costCenterId}
                                budgetUnitPartyId:${itm2.budgetUnitPartyId}
                                budgetTypeEnumId:${itm2.budgetTypeEnumId}
                                budgetId:${itm2.budgetId}
                            </message>
                            <return/>
                        </if>
                        <message>invoiceId____ ${invoiceId}</message>
                        <service-call name="create#mantle.account.invoice.InvoiceItem"
                                      in-map="[invoiceId:invoiceId,
                                    budgetItemSeqId:bugitms[0].budgetItemSeqId,
                                    budgetId:bugitms[0].budgetId,
                                    hrParameterResultId:itm.hrParameterResultId,
                                    description:itm.description,
                                    amount:point, quantity:1, quantityUomId:currencyUomId]"/>
                    </iterate>
                </iterate>
            </then><else>
                <service-call name="mantle.ledger.LedgerServices.create#AcctgTrans" out-map="context"
                              in-map="[acctgTransTypeEnumId:'AttPayrollInvoice',
                                       organizationPartyId:toPartyId, otherPartyId:fromPartyId,
                                       amountUomId:'IRR', employmentPayHistoryId:employmentPayHistoryId,
                                       transactionDate:fish.payDate]"/>
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="payparams">
                    <econdition field-name="employmentPayHistoryId" from="fish.employmentPayHistoryId"/>
                    <econdition field-name="point" operator="greater" from="0"/>
                    <econdition field-name="parameterSystematicName" from="'additionAndBasePay'"/>
                </entity-find>
                <!--DEBIT-->
                <set field="debitCreditFlag" value="D"/>
                <set field="amountTotal" from="payparams.point.sum()"/>
                <entity-find entity-name="mantle.other.budget.BudgetSalaryConfPercent" list="percs">
                    <econdition field-name="partyId" from="fromPartyId"/>
                    <!--                    <date-filter valid-date="new Timestamp(fish?.payDate.getTime())"/>-->
                </entity-find>
                <if condition="!percs?.percent || percs?.percent?.sum()!=100">
                    <message error="true">
                        نگاشت آیتم بودجه و سرفصل حقوق برای این شخص نا مساوی ۱۰۰٪ می باشد.
                        partyId: ${fromPartyId}
                    </message>
                    <return/>
                </if>
                <iterate list="percs" entry="itm2">
                    <!--<entity-find entity-name="mantle.other.budget.BudgetItem" list="bugitms">
                        <econdition field-name="costCenterId" from="itm2.costCenterId" ignore-if-empty="true"/>
                        <econdition field-name="partyId" from="itm2.budgetUnitPartyId" ignore-if-empty="true"/>
                        <econdition field-name="budgetTypeEnumId" from="itm2.budgetTypeEnumId" ignore-if-empty="true"/>
                        <econdition field-name="actionTypeProductId" from="itm2.actionTypeProductId" ignore-if-empty="true"/>
                        <econdition field-name="budgetId" from="itm2.budgetId" ignore-if-empty="true"/>
                        &lt;!&ndash;                        <date-filter valid-date="new Timestamp(fish.payDate.getTime())"/>&ndash;&gt;
                    </entity-find>
                    <if condition="bugitms?.size()==0">
                        <entity-find entity-name="mantle.other.budget.BudgetItem" list="bugitms">
                            <econdition field-name="costCenterId" from="itm2.costCenterId" ignore-if-empty="true"/>
                            <econdition field-name="partyId" from="itm2.budgetUnitPartyId" ignore-if-empty="true"/>
                            <econdition field-name="budgetTypeEnumId" from="itm2.budgetTypeEnumId" ignore-if-empty="true"/>
                            <econdition field-name="budgetId" from="itm2.budgetId" ignore-if-empty="true"/>
                            &lt;!&ndash;                            <date-filter valid-date="new Timestamp(fish.payDate.getTime())"/>&ndash;&gt;
                        </entity-find>
                    </if>
                    <if condition="bugitms?.size()==0">
                        <message error="true">
                            برای این شخص ردیف بودجه ای شناسایی نشد.
                            partyId:${fromPartyId}
                            costCenterId:${itm2.costCenterId}
                            budgetUnitPartyId:${itm2.budgetUnitPartyId}
                            budgetTypeEnumId:${itm2.budgetTypeEnumId}
                            budgetId:${itm2.budgetId}
                        </message>
                        <return/>
                    </if>
                    <if condition="bugitms?.size()&gt;1">
                        <message error="true">
                            برای این شخص بیش از یک ردیف بودجه ای شناسایی شده است.
                            partyId:${fromPartyId}
                            costCenterId:${itm2.costCenterId}
                            budgetUnitPartyId:${itm2.budgetUnitPartyId}
                            budgetTypeEnumId:${itm2.budgetTypeEnumId}
                            budgetId:${itm2.budgetId}
                        </message>
                        <return/>
                    </if>-->
                    <set field="description" from="itm2.extDescription"/>
                    <set field="glAccountId" from="'101000000'"/><!--TODO: -->
                    <set field="extGlAccountId" from="itm2.extBudgetItemId"/>
                    <set field="amount" from="amountTotal*itm2.percent/100"/>
                    <service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry"
                                  in-map="[acctgTransId:acctgTransId, glAccountId:glAccountId,
                                           description:description, extGlAccountId:extGlAccountId,
                                           debitCreditFlag:debitCreditFlag, amount:amount]"/>
                </iterate>
                <script>
                    logger.warn("hhhhhhhhhhhhhhhhhhh")
                </script>
                <!--CREDIT-->
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="kusurs">
                    <econdition field-name="employmentPayHistoryId" from="fish.employmentPayHistoryId"/>
                    <econdition field-name="point" operator="greater" from="0"/>
                    <econdition field-name="wageType" operator="in" from="['D']"/>
                    <econdition field-name="parameterSystematicName" operator="not-in" from="['totalDeduct']"/>
                    <econdition field-name="isSumOnTx"  from="'N'" or-null="true"/>
                </entity-find>
                <set field="debitCreditFlag" value="C"/>
                <iterate list="kusurs" entry="itm">
                    <set field="amount" from="itm.point"/>
                    <set field="description" from="itm.description+' ('+employee.firstName+' '+employee.lastName+')'"/>
                    <set field="glAccountId" from="'101000000'"/>
                    <set field="extGlAccountId" from="itm.extGlAccountId+employee.ptidPersonalCd"/>
                    <service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry"
                                  in-map="[acctgTransId:acctgTransId, glAccountId:glAccountId,
                                           description:description,extGlAccountId:extGlAccountId,
                                           debitCreditFlag:debitCreditFlag, amount:amount]"/>
                </iterate>
                <!--KUSUre sarjam-->
                <entity-find entity-name="mantle.humanres.ability.HrParameterResultWithDetail" list="kusursSum">
                    <econdition field-name="employmentPayHistoryId" from="fish.employmentPayHistoryId"/>
                    <econdition field-name="point" operator="greater" from="0"/>
                    <econdition field-name="wageType" operator="in" from="['D']"/>
                    <econdition field-name="parameterSystematicName" operator="not-in" from="['totalDeduct']"/>
                    <econdition field-name="isSumOnTx"  from="'Y'" />
                </entity-find>
                <iterate list="kusursSum" entry="itm">
                    <set field="amount" from="itm.point"/>
                    <set field="description" from="itm.description"/>
                    <set field="glAccountId" from="'101000000'"/>
                    <set field="extGlAccountId" from="itm.extGlAccountId"/>
                    <service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry"
                                  in-map="[acctgTransId:acctgTransId, glAccountId:glAccountId,
                                           description:description,extGlAccountId:extGlAccountId,
                                           debitCreditFlag:debitCreditFlag, amount:amount]"/>
                </iterate>
                <service-call name="mantle.ledger.LedgerServices.create#AcctgTransEntry"
                              in-map="[acctgTransId:acctgTransId, glAccountId:glAccountId,
                                       description:'خالص پرداختی',extGlAccountId:'143101',
                                       debitCreditFlag:debitCreditFlag, amount:fish.payAmount]"/>
                <script>
                    logger.warn("wwwwwwwwwwwwwwwwwwwwwwwwwww")
                </script>
            </else></if>
        </actions>
    </service>

    <service verb="reopen" noun="PayrollPeriod">
        <in-parameters><parameter name="timePeriodId" required="true"/></in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod" for-update="true"/>
            <if condition="timePeriod.isClosed != 'Y'">
                <return message="Period ${ec.resource.expand('TimePeriodNameTemplate','',timePeriod)} is not closed"/></if>

            <!-- make sure no invoices are Approved (or later status) -->
            <entity-find-count entity-name="mantle.account.invoice.Invoice" count-field="approvedCount">
                <econdition field-name="timePeriodId"/>
                <econdition field-name="statusId" operator="in" value="InvoiceApproved,InvoicePmtSent,InvoiceBilledThrough"/>
            </entity-find-count>
            <if condition="approvedCount &gt; 0"><return error="true" message="Found ${approvedCount} invoices in Approved or later status, cannot re-open period"/></if>

            <!-- delete all EmploymentPayHistory and EmploymentPayDetail records -->
            <entity-find entity-name="mantle.humanres.employment.EmploymentPayHistory" list="payHistoryList">
                <econdition field-name="deleteBy" operator="is-null"/>
                <econdition field-name="timePeriodId"/></entity-find>
            <iterate list="payHistoryList" entry="payHistory">
                <entity-delete value-field="payHistory"/>
            </iterate>

            <!-- delete all periods invoices (paycheck, payee, etc), setting vendorInvoiceId to null on TimeEntry records -->
            <entity-find entity-name="mantle.account.invoice.Invoice" list="invoiceList">
                <econdition field-name="timePeriodId"/></entity-find>
            <set field="invoiceCount" from="0"/>
            <iterate list="invoiceList" entry="invoice">
                <!-- clear out all non-modified rate amounts on TimeEntry records -->
                <entity-find entity-name="mantle.work.time.TimeEntry" list="timeEntryList">
                    <econdition field-name="invoiceId" from="invoice.invoiceId"/></entity-find>
                <iterate list="timeEntryList" entry="timeEntry">
                    <if condition="timeEntry.hasModifiedRates != 'Y'">
                        <set field="timeEntry.clientHourRate" from="null"/>
                        <set field="timeEntry.vendorHourRate" from="null"/>
                        <set field="timeEntry.clientPieceRate" from="null"/>
                        <set field="timeEntry.vendorPieceRate" from="null"/>
                    </if>
                    <set field="timeEntry.invoiceId" from="null"/>
                    <entity-update value-field="timeEntry"/>
                </iterate>
                <entity-find entity-name="mantle.work.time.TimeEntry" list="vendorTimeEntryList">
                    <econdition field-name="vendorInvoiceId" from="invoice.invoiceId"/></entity-find>
                <iterate list="vendorTimeEntryList" entry="timeEntry">
                    <if condition="timeEntry.hasModifiedRates != 'Y'">
                        <set field="timeEntry.clientHourRate" from="null"/>
                        <set field="timeEntry.vendorHourRate" from="null"/>
                        <set field="timeEntry.clientPieceRate" from="null"/>
                        <set field="timeEntry.vendorPieceRate" from="null"/>
                    </if>
                    <set field="timeEntry.invoiceId" from="null"/>
                    <entity-update value-field="timeEntry"/>
                </iterate>

                <!-- cancel if not already cancelled, clean up references on related records (including TimeEntry, though those cleaned up above) -->
                <service-call name="mantle.account.InvoiceServices.cancel#Invoice" in-map="[invoiceId:invoice.invoiceId]"/>

                <!-- to clean up unwanted invoices (like in a payroll trial run or mistaken run) delete instead of just cancelling -->
                <!-- NOTE: could also delete AcctgTrans, after unposting, unless something manually done with a payroll invoice shouldn't be needed -->
                <entity-delete-by-condition entity-name="mantle.account.payment.PaymentApplication">
                    <econdition field-name="invoiceId" from="invoice.invoiceId"/></entity-delete-by-condition>
                <entity-delete-by-condition entity-name="mantle.account.invoice.InvoiceItem">
                    <econdition field-name="invoiceId" from="invoice.invoiceId"/></entity-delete-by-condition>
                <entity-delete-by-condition entity-name="mantle.account.invoice.Invoice">
                    <econdition field-name="invoiceId" from="invoice.invoiceId"/></entity-delete-by-condition>

                <set field="invoiceCount" from="invoiceCount + 1"/>
            </iterate>

            <!-- un-close the TimePeriod -->
            <set field="timePeriod.isClosed" value="N"/>
            <entity-update value-field="timePeriod"/>

            <message>Re-opened period ${ec.resource.expand('TimePeriodNameTemplate','',timePeriod)}, deleted ${invoiceCount} payroll invoices</message>
        </actions>
    </service>

    <service verb="approve" noun="PeriodInvoices">
        <in-parameters><parameter name="timePeriodId" required="true"/></in-parameters>
        <actions>
            <entity-find entity-name="mantle.account.invoice.Invoice" list="invoiceList">
                <econdition field-name="timePeriodId"/>
                <econdition field-name="invoiceTypeEnumId" value="InvoicePayroll"/>
                <econdition field-name="statusId" value="InvoiceReceived"/>
            </entity-find>
            <iterate list="invoiceList" entry="invoice">
                <service-call name="update#mantle.account.invoice.Invoice"
                              in-map="[invoiceId:invoice.invoiceId, statusId:'InvoiceApproved']"/>
            </iterate>
        </actions>
    </service>
    <service verb="create" noun="PeriodPayments">
        <in-parameters>
            <parameter name="timePeriodId" required="true"/>
            <parameter name="effectiveDate" type="Timestamp" required="true"/>
            <parameter name="statusId" default-value="PmntAuthorized"/>
            <parameter name="paymentInstrumentEnumId" default-value="PiCompanyCheck"/>
            <parameter name="paymentMethodId"/>
        </in-parameters>
        <actions>
            <!-- find the PmpPayroll purpose PaymentMethod -->
            <if condition="!paymentMethodId">
                <entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="timePeriod"/>
                <entity-find entity-name="mantle.account.method.PaymentMethod" list="paymentMethodList">
                    <date-filter/><econdition field-name="ownerPartyId" from="timePeriod.partyId"/>
                    <econdition field-name="purposeEnumId" value="PmpPayroll"/>
                    <!-- constrain by a paymentMethodTypeEnumId corresponding to the paymentInstrumentEnumId? -->
                    <order-by field-name="-fromDate"/>
                </entity-find>
                <if condition="!paymentMethodList"><entity-find entity-name="mantle.account.method.PaymentMethod" list="paymentMethodList">
                    <date-filter/><econdition field-name="ownerPartyId" from="timePeriod.partyId"/>
                    <econdition field-name="purposeEnumId" value="PmpGeneral"/><order-by field-name="-fromDate"/></entity-find></if>
                <if condition="paymentMethodList"><set field="paymentMethodId" from="paymentMethodList[0].paymentMethodId"/></if>
            </if>

            <entity-find entity-name="mantle.account.invoice.Invoice" list="invoiceList" for-update="true">
                <econdition field-name="timePeriodId"/>
                <econdition field-name="invoiceTypeEnumId" value="InvoicePayroll"/>
                <econdition field-name="statusId" value="InvoiceApproved"/>
            </entity-find>
            <iterate list="invoiceList" entry="invoice">
                <!-- if paymentInstrumentEnumId is PiAch look for employee's BankAccount -->
                <set field="toPaymentMethodId" from="null"/>
                <set field="toUseInstrumentEnumId" from="paymentInstrumentEnumId"/>
                <if condition="paymentInstrumentEnumId == 'PiAch'">
                    <entity-find entity-name="mantle.account.method.PaymentMethod" list="toPaymentMethodList">
                        <date-filter/>
                        <econdition field-name="ownerPartyId" from="invoice.fromPartyId"/>
                        <econdition field-name="purposeEnumId" value="PmpPayroll"/>
                        <econdition field-name="paymentMethodTypeEnumId" value="PmtBankAccount"/>
                        <order-by field-name="-fromDate"/>
                    </entity-find>
                    <if condition="toPaymentMethodList">
                        <set field="toPaymentMethodId" from="toPaymentMethodList[0].paymentMethodId"/></if>
                    <!-- if there is no bank account, fall back to a PiCompanyCheck instrument -->
                    <if condition="!toPaymentMethodId"><set field="toUseInstrumentEnumId" value="PiCompanyCheck"/></if>
                </if>
                <!-- get the Employee.distGroupEnumId if set, using invoice.fromPartyId -->
                <set field="distGroupEnumId" from="null"/>
                <if condition="invoice.partyRelationshipId">
                    <entity-find-one entity-name="mantle.humanres.employment.Employee" value-field="invEmployee">
                        <field-map field-name="partyId" from="invoice.fromPartyId"/></entity-find-one>
                    <if condition="invEmployee?.distGroupEnumId">
                        <set field="distGroupEnumId" from="invEmployee.distGroupEnumId"/></if>
                </if>
                <!-- make the payment -->
                <service-call name="mantle.account.PaymentServices.create#InvoicePayment" out-map="paymentOut"
                              in-map="context + [invoiceId:invoice.invoiceId, partyRelationshipId:invoice.partyRelationshipId,
                        paymentInstrumentEnumId:toUseInstrumentEnumId]"/>
            </iterate>
        </actions>
    </service>
    <service verb="set" noun="PeriodPaymentDates">
        <in-parameters>
            <parameter name="timePeriodId" required="true"/>
            <parameter name="effectiveDate" type="Timestamp" required="true"/>
            <parameter name="overrideDates" type="Boolean" default="false"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.account.payment.Payment" list="paymentList">
                <econdition field-name="timePeriodId"/>
                <econdition field-name="effectiveDate" operator="is-null" ignore="overrideDates"/>
                <econdition field-name="statusId" operator="not-in" value="PmntDelivered,PmntConfirmed"/>
            </entity-find>
            <iterate list="paymentList" entry="payment">
                <service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId, effectiveDate:effectiveDate]"/>
            </iterate>
        </actions>
    </service>
    <service verb="set" noun="PeriodPaymentRefNums">
        <in-parameters>
            <parameter name="timePeriodId" required="true"/>
            <parameter name="paymentMethodId"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.account.payment.Payment" list="paymentList">
                <econdition field-name="timePeriodId"/>
                <econdition field-name="paymentMethodId" ignore-if-empty="true"/>
                <!-- NOTE: if this is opened to Promised and such at least exclude Delivered and Confirmed -->
                <econdition field-name="statusId" value="PmntAuthorized"/>
                <order-by field-name="paymentId"/>
            </entity-find>
            <iterate list="paymentList" entry="payment">
                <service-call name="mantle.account.PaymentServices.assign#BankAccountCheckNumber" in-map="[paymentId:payment.paymentId]"/>
            </iterate>
        </actions>
    </service>
    <service verb="authorize" noun="PeriodPayments">
        <in-parameters><parameter name="timePeriodId" required="true"/></in-parameters>
        <actions>
            <entity-find entity-name="mantle.account.payment.Payment" list="paymentList">
                <econdition field-name="timePeriodId"/><econdition field-name="statusId" value="PmntPromised"/></entity-find>
            <iterate list="paymentList" entry="payment">
                <service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId, statusId:'PmntAuthorized']"/>
            </iterate>
        </actions>
    </service>
    <service verb="deliver" noun="PeriodPayments">
        <in-parameters><parameter name="timePeriodId" required="true"/></in-parameters>
        <actions>
            <entity-find entity-name="mantle.account.payment.Payment" list="paymentList">
                <econdition field-name="timePeriodId"/><econdition field-name="statusId" value="PmntAuthorized"/></entity-find>
            <iterate list="paymentList" entry="payment">
                <service-call name="update#mantle.account.payment.Payment" in-map="[paymentId:payment.paymentId, statusId:'PmntDelivered']"/>
            </iterate>
        </actions>
    </service>
</services>
